var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/classes/Account.html",[0,0.026,1,0.612]],["body/classes/Account.html",[0,0.044,1,1.194,2,0.385,3,0.314,4,0.248,5,1.139,6,1.312,7,1.194,8,1.863,9,2.332,10,2.332,11,0.385,12,1.042,13,1.741,14,1.832,15,2.349,16,1.145,17,0.98,18,1.387,19,0.058,20,1.659,21,1.02,22,2.332,23,2.163,24,2.361,25,2.332,26,2.781,27,1.75,28,2.274,29,2.332,30,1.607,31,1.39,32,2.478,33,1.867,34,1.867,35,1.867,36,2.332,37,1.041,38,1.862,39,1.862,40,1.042,41,2.163,42,2.163,43,1.867,44,1.862,45,2.163,46,2.163,47,2.332,48,0.557,49,1.323,50,1.323,51,1.867,52,1.323,53,1.02,54,1.323,55,1.323,56,1.323,57,1.323,58,0.985,59,1.323,60,0.769,61,1.323,62,1.041,63,0.854,64,2.132,65,1.205,66,1.867,67,1.323,68,0.854,69,1.323,70,1.205,71,1.323,72,0.985,73,1.323,74,0.985,75,1.323,76,1.323,77,1.139,78,1.323,79,1.139,80,0.854,81,1.867,82,1.323,83,1.139,84,1.323,85,0.035,86,0.035]],["title/components/AppComponent.html",[87,0.518,88,0.831]],["body/components/AppComponent.html",[0,0.019,1,1.151,2,0.321,3,0.262,4,0.207,6,1.091,7,1.233,11,0.321,12,0.915,14,0.713,16,0.95,17,0.872,18,0.789,19,0.058,21,1.058,28,0.951,31,1.22,37,0.789,40,0.915,48,0.262,53,1.151,58,1.988,60,0.455,62,0.532,79,0.951,80,1.614,85,0.045,86,0.03,87,0.804,88,1.206,89,1.105,90,1.105,91,1.105,92,1.105,93,1.556,94,1.953,95,1.105,96,2.417,97,2.082,98,1.925,99,1.639,100,3.443,101,1.639,102,2.888,103,4.529,104,1.22,105,2.16,106,2.888,107,2.888,108,0.951,109,1.948,110,2.855,111,2.888,112,1.953,113,1.681,114,2.211,115,2.888,116,2.888,117,2.307,118,1.948,119,2.888,120,2.307,121,3.017,122,1.454,123,1.953,124,2.888,125,1.948,126,3.042,127,1.609,128,3.808,129,1.397,130,3.808,131,3.403,132,3.808,133,3.808,134,2.16,135,3.808,136,3.808,137,3.136,138,2.888,139,1.948,140,2.888,141,1.681,142,1.948,143,4.26,144,4.26,145,3.403,146,1.41,147,1.948,148,1.948,149,0.617,150,1.105,151,1.948,152,1.953,153,1.556,154,1.948,155,1.948,156,1.948,157,1.948,158,1.948,159,1.948,160,1.948,161,1.948,162,2.888,163,1.948,164,1.948,165,1.948,166,1.948,167,1.948,168,1.948,169,1.948,170,1.948,171,1.948,172,1.948,173,1.948,174,1.948,175,3.443,176,1.948,177,1.948,178,2.307,179,1.948,180,1.948,181,1.948,182,1.948,183,1.948,184,1.948,185,1.948,186,1.948,187,1.556,188,1.948,189,1.948,190,1.105,191,1.948,192,1.948,193,1.298,194,2.888,195,0.823,196,1.639,197,1.41,198,1.639,199,2.16,200,1.105,201,1.105,202,0.617,203,1.105,204,0.617,205,0.951,206,1.105,207,0.617,208,1.105]],["title/modules/AppMaterialModule.html",[209,0.96,210,1.28]],["body/modules/AppMaterialModule.html",[0,0.037,2,0.605,3,0.494,4,0.391,19,0.057,48,0.596,85,0.047,86,0.047,129,1.603,149,1.163,209,1.344,210,2.163,211,3.671,212,2.933,213,3.671,214,3.539,215,4.431,216,2.933,217,4.759,218,2.446,219,3.671,220,4.759,221,4.759,222,4.942,223,4.759,224,4.759,225,4.759,226,4.759,227,1.793,228,2.446,229,2.083]],["title/modules/AppModule.html",[209,0.96,230,1.487]],["body/modules/AppModule.html",[0,0.032,2,0.529,3,0.431,4,0.341,19,0.057,48,0.548,85,0.043,86,0.043,88,1.666,97,1.354,129,1.658,141,1.565,149,1.015,195,1.354,202,1.575,204,1.575,205,1.565,207,1.575,209,1.491,210,2.427,212,2.56,214,3.254,218,2.136,228,2.983,229,1.818,230,3.019,231,1.818,232,3.576,233,2.56,234,2.56,235,2.56,236,2.56,237,3.254,238,2.56,239,1.818,240,3.205,241,4.073,242,1.818,243,4.073,244,1.565,245,4.073,246,2.56,247,3.205,248,3.205,249,2.136,250,3.205,251,3.205,252,1.565,253,2.136]],["title/classes/AppPage.html",[0,0.026,254,1.747]],["body/classes/AppPage.html",[0,0.045,2,0.633,3,0.517,4,0.409,11,0.633,19,0.057,21,1.063,48,0.517,85,0.048,86,0.048,98,2.557,104,1.922,122,2.119,129,1.216,197,1.874,242,2.177,254,3.031,255,3.065,256,5.015,257,5.015,258,3.838,259,3.838,260,3.065,261,3.838,262,3.838,263,3.838]],["title/classes/Bucket.html",[0,0.026,53,0.612]],["body/classes/Bucket.html",[0,0.045,1,1.133,2,0.416,3,0.34,4,0.269,5,1.233,6,1.26,7,1.193,11,0.416,12,1.102,13,1.569,14,1.857,15,1.432,16,1.164,17,0.848,18,1.385,19,0.058,20,1.273,21,0.812,23,1.973,24,2.325,26,2.826,27,1.811,28,2.325,30,1.233,31,1.067,32,1.973,33,1.432,34,1.432,35,1.432,37,1.086,38,1.942,39,1.942,40,0.8,41,2.257,42,2.257,43,1.432,44,1.233,45,1.432,46,1.432,48,0.577,49,1.973,50,1.973,51,2.257,52,1.973,53,1.133,54,1.973,55,1.973,56,1.973,57,1.432,58,1.067,59,1.432,60,0.812,61,1.432,62,1.086,63,0.924,64,2.195,65,1.273,66,1.973,67,1.432,68,0.924,69,1.432,70,1.273,71,1.432,72,1.067,73,1.432,74,1.067,75,1.432,76,1.432,77,1.233,78,1.432,79,1.233,80,0.924,81,1.973,82,1.432,83,1.233,84,1.432,85,0.037,86,0.037,264,2.525,265,2.525]],["title/components/EditRowComponent.html",[87,0.518,202,0.831]],["body/components/EditRowComponent.html",[0,0.023,1,1.114,2,0.389,3,0.516,4,0.251,7,0.972,11,0.389,13,1.523,16,1.062,17,0.867,18,0.905,19,0.058,21,1.091,37,1.136,39,1.618,40,1.05,48,0.317,53,1.171,60,0.55,63,1.523,65,1.523,68,1.523,70,1.523,85,0.035,86,0.035,87,0.867,88,0.746,89,1.336,90,1.336,91,1.336,92,1.336,94,2.175,95,1.336,96,2.579,97,1.921,99,1.88,101,1.88,104,1.4,105,2.36,108,1.872,121,2.772,122,0.995,123,1.336,129,1.318,134,1.88,141,2.328,149,0.746,150,1.336,195,0.995,196,1.88,197,1.618,198,1.88,199,2.36,200,1.336,201,1.336,202,1.318,203,1.336,204,0.746,205,1.15,206,1.336,207,0.746,208,1.336,227,1.15,244,1.15,252,2.328,266,3.809,267,1.882,268,2.208,269,3.834,270,3.314,271,3.273,272,3.834,273,3.834,274,3.834,275,3.314,276,3.029,277,2.36,278,2.772,279,2.356,280,2.356,281,2.208,282,2.647,283,2.356,284,2.647,285,3.314,286,3.314,287,3.314,288,3.314,289,2.554,290,2.356,291,1.88,292,2.554,293,2.356,294,1.57,295,1.57,296,2.554,297,1.57,298,2.208,299,2.356,300,3.314,301,2.647,302,4.547,303,4.547]],["title/injectables/EndpointService.html",[110,1.487,114,1.28]],["body/injectables/EndpointService.html",[0,0.018,2,0.291,3,0.237,4,0.188,6,1.235,11,0.291,12,0.849,14,1.771,16,0.959,17,1.001,18,1.343,19,0.058,20,1.326,21,1.027,24,2.004,27,1.133,37,1.064,38,1.769,48,0.237,58,1.999,62,0.732,77,1.309,80,1.609,83,2.004,85,0.048,86,0.028,98,1.175,104,1.133,108,0.861,110,1.521,112,2.328,113,2.004,114,1.584,117,2.894,120,2.142,122,2.093,127,1.37,129,1.148,146,1.309,149,0.559,152,2.554,153,1.409,178,1.409,190,2.328,229,1.001,246,1.409,277,1.001,304,1.409,305,3,306,3.623,307,4.104,308,2.681,309,2.681,310,2.681,311,1.764,312,3.623,313,2.681,314,4.731,315,2.681,316,4.591,317,1.764,318,4.731,319,3.511,320,2.414,321,3.243,322,3.243,323,2.681,324,5.04,325,2.681,326,4.591,327,3.623,328,2.681,329,3.623,330,1.764,331,2.681,332,2.142,333,2.681,334,2.681,335,1.786,336,4.265,337,3.243,338,3.623,339,2.681,340,1.764,341,2.681,342,2.894,343,3.278,344,2.681,345,1.764,346,2.681,347,1.764,348,2.681,349,1.764,350,2.681,351,2.681,352,2.681,353,2.681,354,1.764,355,1.764,356,1.764,357,1.409,358,1.764,359,2.681,360,1.764,361,1.764,362,1.764,363,1.764,364,2.681,365,1.764,366,1.764,367,1.764,368,2.681,369,1.764,370,2.142,371,2.681,372,1.764,373,1.764,374,1.764,375,1.764,376,1.764,377,1.764,378,1.764,379,1.764,380,1.764,381,1.764,382,1.764,383,1.764,384,1.764,385,1.764,386,1.764,387,3.623,388,4.731,389,3.623,390,2.142,391,1.764,392,1.764,393,1.764,394,1.764,395,1.764,396,1.764,397,1.764,398,2.681,399,1.764,400,2.681,401,2.681,402,1.764]],["title/classes/PendingTransaction.html",[0,0.026,60,0.612]],["body/classes/PendingTransaction.html",[0,0.043,1,1.141,2,0.379,3,0.309,4,0.245,5,1.122,6,1.303,7,1.225,11,0.379,12,1.032,13,1.735,14,1.764,15,1.304,16,1.141,17,0.977,18,1.423,19,0.058,20,1.192,21,1.126,23,2.145,24,2.264,26,2.631,27,1.598,28,2.202,30,1.122,31,0.971,32,1.847,33,1.304,34,1.304,35,1.304,37,0.889,38,1.59,39,1.59,40,0.728,41,1.847,42,1.847,43,1.304,44,1.122,45,1.304,46,1.304,48,0.554,49,1.304,50,1.304,51,2.145,52,1.304,53,1.126,54,1.304,55,1.304,56,1.304,57,1.847,58,1.376,59,1.847,60,0.883,61,1.847,62,1.231,63,1.506,64,2.314,65,1.651,66,2.334,67,1.847,68,1.506,69,1.847,70,1.651,71,1.847,72,1.738,73,1.847,74,1.738,75,1.847,76,1.304,77,1.122,78,1.304,79,1.122,80,0.841,81,1.847,82,1.304,83,1.122,84,1.304,85,0.034,86,0.034,403,2.298,404,2.298,405,2.298,406,2.298,407,2.298,408,2.298,409,2.298,410,2.298,411,2.298]],["title/components/QuickAddComponent.html",[87,0.518,204,0.831]],["body/components/QuickAddComponent.html",[0,0.014,1,1.126,2,0.229,3,0.375,4,0.148,6,0.705,7,1.042,8,3.501,11,0.229,12,0.705,13,1.531,16,1.195,17,0.827,18,1.142,19,0.058,20,1.832,21,1.059,37,1.237,40,0.705,48,0.187,53,1.169,60,0.325,62,1.014,63,1.429,65,1.429,68,1.429,70,1.429,72,1.649,74,1.649,85,0.023,86,0.023,87,0.689,88,0.44,89,0.788,90,0.788,91,0.788,92,0.788,94,1.579,95,0.788,96,2.108,97,1.713,99,1.263,101,1.263,104,0.94,105,1.806,108,1.359,112,1.263,113,1.087,122,1.813,123,1.263,126,1.778,127,2.162,129,1.103,137,1.855,141,1.554,146,1.554,149,0.44,150,0.788,152,1.263,190,1.579,195,0.587,196,1.263,197,1.087,198,1.263,199,1.806,200,0.788,201,0.788,202,1.325,203,0.788,204,1.008,205,2.27,206,0.788,207,0.44,208,0.788,227,0.679,244,0.679,249,3.061,252,0.679,253,0.926,268,1.483,271,2.32,276,2.702,277,1.806,278,2.121,281,1.483,282,2.543,284,2.968,289,2.121,291,2.301,292,2.121,294,2.121,295,0.926,296,3.211,297,0.926,305,2.973,319,2.543,320,2.121,343,1.778,412,3.67,413,1.11,414,2.784,415,2.226,416,2.543,417,3.183,418,3.183,419,3.183,420,2.226,421,2.226,422,3.183,423,2.543,424,2.784,425,1.39,426,1.39,427,1.39,428,1.778,429,1.39,430,2.226,431,1.39,432,3.183,433,3.183,434,3.183,435,3.183,436,3.183,437,2.226,438,1.39,439,1.39,440,1.39,441,2.226,442,2.226,443,2.226,444,2.226,445,1.39,446,2.226,447,1.39,448,2.226,449,2.226,450,1.39,451,2.226,452,3.821,453,1.778,454,1.778,455,1.39,456,2.226,457,1.39,458,1.778,459,1.39,460,1.11,461,1.39,462,1.11,463,1.39,464,1.39,465,1.39,466,1.39,467,1.39,468,1.39,469,1.39,470,1.39,471,1.39,472,1.39,473,1.39,474,1.39,475,1.39,476,1.39,477,1.39,478,1.39,479,1.39,480,1.39,481,1.39,482,1.39,483,1.39,484,1.39,485,1.39,486,1.39,487,1.39,488,1.39,489,1.39,490,2.226,491,1.39,492,2.226,493,2.224,494,1.855,495,1.778,496,1.778,497,1.39,498,1.11,499,1.11]],["title/classes/Transaction.html",[0,0.026,7,0.612]],["body/classes/Transaction.html",[0,0.042,1,1.122,2,0.351,3,0.286,4,0.227,5,1.039,6,1.258,7,1.222,11,0.351,12,0.976,13,1.7,14,1.818,15,1.207,16,1.122,17,0.99,18,1.428,19,0.058,20,1.128,21,1.149,23,2.055,24,2.31,26,2.634,27,1.678,28,2.346,30,1.039,31,0.899,32,1.748,33,1.207,34,1.207,35,1.207,37,0.841,38,1.505,39,1.505,40,0.674,41,1.748,42,1.748,43,1.207,44,1.039,45,1.207,46,1.207,48,0.535,49,1.207,50,1.207,51,2.055,52,1.207,53,1.105,54,1.207,55,1.207,56,1.207,57,1.207,58,0.899,59,1.207,60,1.149,61,1.748,62,1.2,63,1.454,64,2.346,65,1.609,66,2.253,67,1.748,68,1.454,69,1.748,70,1.609,71,1.748,72,1.678,73,1.748,74,1.678,75,1.748,76,1.748,77,1.505,78,1.748,79,1.505,80,1.128,81,2.253,82,2.253,83,1.505,84,2.253,85,0.032,86,0.032,113,1.939,500,2.128,501,2.128,502,2.128,503,4.731,504,2.128,505,2.128,506,2.128,507,2.128,508,2.128,509,2.128,510,2.128,511,2.128,512,2.128]],["title/components/TransactionsComponent.html",[87,0.518,207,0.831]],["body/components/TransactionsComponent.html",[0,0.015,1,0.967,2,0.243,3,0.389,4,0.157,6,0.466,7,1.182,11,0.243,12,0.738,13,1.56,14,1.203,16,1.058,17,0.789,18,0.897,19,0.058,20,1.56,21,1.04,37,1.163,40,1.311,48,0.198,53,1.1,60,0.344,62,0.636,63,1.461,64,1.86,65,1.461,68,1.461,70,1.461,72,1.686,74,1.686,80,1.058,85,0.024,86,0.024,87,0.708,88,0.466,89,0.834,90,0.834,91,0.834,92,0.834,94,1.64,95,0.834,96,2.161,97,1.609,99,1.321,101,1.321,104,0.984,105,1.865,108,1.411,112,1.64,113,1.411,121,2.19,122,1.389,123,1.865,127,1.967,129,1.135,131,1.175,134,0.834,137,2.757,141,1.948,146,1.137,149,0.466,150,0.834,152,1.321,190,0.834,193,1.926,195,0.621,196,1.321,197,1.137,198,1.321,199,1.865,200,0.834,201,0.834,202,1.207,203,0.834,204,0.466,205,0.718,206,0.834,207,1.041,208,0.834,227,0.718,239,1.321,244,0.718,252,0.718,253,0.98,268,2.757,271,2.538,276,2.538,277,1.865,278,2.19,281,1.551,289,1.551,291,2.264,292,1.551,294,2.19,295,0.98,296,2.908,297,0.98,301,1.86,305,0.98,342,1.86,390,1.86,416,1.175,423,2.625,428,1.86,452,3.404,453,1.175,454,1.175,458,1.175,460,2.625,462,1.175,493,1.175,494,0.98,495,1.175,496,1.175,498,1.175,499,1.175,513,1.175,514,2.89,515,2.89,516,2.328,517,3.287,518,3.287,519,2.328,520,2.328,521,2.328,522,2.89,523,1.471,524,2.328,525,2.328,526,2.328,527,2.328,528,2.328,529,2.328,530,2.328,531,2.328,532,2.328,533,3.287,534,2.328,535,2.328,536,2.328,537,2.328,538,2.328,539,2.328,540,2.328,541,2.328,542,2.328,543,1.471,544,1.471,545,1.471,546,1.471,547,2.328,548,1.471,549,1.471,550,2.328,551,1.471,552,3.809,553,2.89,554,2.328,555,1.471,556,2.328,557,1.471,558,2.328,559,1.471,560,1.471,561,1.471,562,1.471,563,1.471,564,1.471,565,1.471,566,1.471,567,1.471,568,1.471,569,1.471,570,2.328,571,1.471,572,1.471,573,1.471,574,1.471,575,2.89,576,1.471,577,1.471,578,1.471,579,1.471,580,2.328,581,2.328,582,2.328,583,2.328,584,2.328,585,2.328,586,3.809,587,2.328,588,2.328,589,2.328,590,2.328,591,2.328,592,1.86,593,2.328,594,3.287,595,2.328,596,1.471,597,2.328,598,1.471]],["title/coverage.html",[599,2.85]],["body/coverage.html",[0,0.05,1,0.811,4,0.37,5,2.367,7,0.811,17,0.687,19,0.057,53,0.811,60,0.811,85,0.045,86,0.045,87,0.959,88,1.1,93,2.775,110,1.97,114,1.696,127,1.467,193,3.318,202,1.1,204,1.1,207,1.1,249,2.314,252,1.696,254,2.314,255,2.775,266,2.775,267,2.775,291,1.97,298,2.314,304,2.775,335,2.314,412,2.775,413,2.775,494,3.231,513,2.775,599,2.775,600,3.473,601,3.473,602,3.473,603,3.473,604,4.283,605,4.283,606,3.473,607,3.473,608,3.473,609,3.473,610,3.473,611,3.473,612,3.473,613,3.473,614,3.473,615,3.473,616,2.775,617,3.231,618,3.422,619,4.849,620,2.775,621,3.422,622,3.473]],["title/dependencies.html",[231,1.787,623,2.194]],["body/dependencies.html",[19,0.057,85,0.048,86,0.048,149,1.206,216,3.04,218,3.017,227,1.858,231,2.159,242,2.568,244,1.858,357,3.04,624,3.806,625,5.31,626,3.806,627,4.527,628,3.806,629,3.806,630,3.806,631,3.806,632,3.806,633,3.806,634,3.806,635,3.806,636,3.806,637,3.806,638,3.806,639,3.806]],["title/index.html",[11,0.362,30,1.071,640,2.194]],["body/index.html",[3,0.472,4,0.373,16,0.819,19,0.045,27,2.055,31,1.481,44,1.712,85,0.045,86,0.045,87,0.922,97,1.481,127,1.481,134,1.989,145,3.441,187,2.801,239,1.989,260,2.801,332,3.725,370,2.801,592,3.989,641,4.308,642,4.664,643,3.506,644,3.506,645,3.506,646,4.308,647,5.149,648,5.149,649,3.506,650,3.506,651,3.506,652,3.506,653,3.506,654,3.506,655,3.506,656,4.664,657,3.506,658,4.993,659,3.506,660,3.506,661,3.506,662,3.506,663,3.506,664,3.506,665,2.801,666,4.308,667,4.308,668,3.506,669,4.864,670,3.506,671,3.506,672,4.664,673,3.506,674,3.506]],["title/modules.html",[209,1.306]],["body/modules.html",[19,0.05,85,0.05,86,0.05,209,1.517,210,2.023,230,2.351,242,2.351,675,4.144,676,4.144,677,4.758,678,4.144,679,4.144]],["title/overview.html",[680,2.85]],["body/overview.html",[0,0.037,19,0.055,48,0.5,85,0.047,86,0.047,87,0.735,88,1.651,114,1.814,195,1.57,202,1.515,204,1.515,207,1.515,209,1.634,210,2.335,228,2.475,229,2.108,230,3.051,231,2.108,232,2.968,233,2.968,234,2.968,235,2.968,236,2.968,237,3.565,238,2.968,239,2.108,680,2.968,681,3.715,682,3.715,683,3.715,684,3.715]],["title/miscellaneous/variables.html",[617,2.099,685,1.752]],["body/miscellaneous/variables.html",[11,0.625,17,0.954,19,0.056,62,1.317,85,0.047,86,0.047,146,2.356,298,3.214,320,3.328,335,3.214,616,3.028,617,2.526,618,4.136,620,3.028,621,3.028,665,3.608,685,3.028,686,4.516,687,3.791,688,3.791,689,3.791,690,4.516,691,3.791,692,3.791]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"classes/Account.html":{},"components/AppComponent.html":{},"modules/AppMaterialModule.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/Bucket.html":{},"components/EditRowComponent.html":{},"injectables/EndpointService.html":{},"classes/PendingTransaction.html":{},"components/QuickAddComponent.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"components/TransactionsComponent.html":{},"coverage.html":{}}}],["0.8.29",{"_index":639,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":619,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":603,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":683,"title":{},"body":{"overview.html":{}}}],["10/10",{"_index":608,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":494,"title":{},"body":{"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{},"coverage.html":{}}}],["100px",{"_index":597,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["11/14",{"_index":613,"title":{},"body":{"coverage.html":{}}}],["13/13",{"_index":609,"title":{},"body":{"coverage.html":{}}}],["1337",{"_index":352,"title":{},"body":{"injectables/EndpointService.html":{}}}],["2",{"_index":681,"title":{},"body":{"overview.html":{}}}],["2.0.8",{"_index":636,"title":{},"body":{"dependencies.html":{}}}],["2.6.2",{"_index":634,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":607,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":682,"title":{},"body":{"overview.html":{}}}],["5",{"_index":684,"title":{},"body":{"overview.html":{}}}],["5/8",{"_index":611,"title":{},"body":{"coverage.html":{}}}],["6.2.3",{"_index":644,"title":{},"body":{"index.html":{}}}],["6.4.0",{"_index":637,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":606,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":610,"title":{},"body":{"coverage.html":{}}}],["7.2.3",{"_index":625,"title":{},"body":{"dependencies.html":{}}}],["7.3.0",{"_index":627,"title":{},"body":{"dependencies.html":{}}}],["7/9",{"_index":605,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":614,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":604,"title":{},"body":{"coverage.html":{}}}],["78",{"_index":612,"title":{},"body":{"coverage.html":{}}}],["9/12",{"_index":615,"title":{},"body":{"coverage.html":{}}}],["accordingli",{"_index":365,"title":{},"body":{"injectables/EndpointService.html":{}}}],["account",{"_index":1,"title":{"classes/Account.html":{}},"body":{"classes/Account.html":{},"components/AppComponent.html":{},"classes/Bucket.html":{},"components/EditRowComponent.html":{},"classes/PendingTransaction.html":{},"components/QuickAddComponent.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{},"coverage.html":{}}}],["activ",{"_index":533,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["actual_compon",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["ad",{"_index":73,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["add",{"_index":8,"title":{},"body":{"classes/Account.html":{},"components/QuickAddComponent.html":{}}}],["add'},{'nam",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["add.compon",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["add.component.css",{"_index":414,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["add.component.html",{"_index":415,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["add.component.t",{"_index":413,"title":{},"body":{"components/QuickAddComponent.html":{},"coverage.html":{}}}],["add.component.ts:104",{"_index":457,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["add.component.ts:114",{"_index":425,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["add.component.ts:118",{"_index":439,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["add.component.ts:123",{"_index":440,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["add.component.ts:161",{"_index":431,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["add.component.ts:179",{"_index":438,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["add.component.ts:26",{"_index":426,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["add.component.ts:31",{"_index":427,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["add.component.ts:36",{"_index":429,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["add.component.ts:43",{"_index":447,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["add.component.ts:48",{"_index":455,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["add.component.ts:81",{"_index":450,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["add.component.ts:97",{"_index":459,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["add/quick",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"components/QuickAddComponent.html":{},"coverage.html":{}}}],["again",{"_index":385,"title":{},"body":{"injectables/EndpointService.html":{}}}],["against",{"_index":35,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["align",{"_index":496,"title":{},"body":{"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["alreadi",{"_index":76,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["amount",{"_index":63,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"components/EditRowComponent.html":{},"classes/PendingTransaction.html":{},"components/QuickAddComponent.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{}}}],["angular",{"_index":332,"title":{},"body":{"injectables/EndpointService.html":{},"index.html":{}}}],["angular/anim",{"_index":624,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":626,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":216,"title":{},"body":{"modules/AppMaterialModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"injectables/EndpointService.html":{}}}],["angular/compil",{"_index":628,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"modules/AppMaterialModule.html":{},"modules/AppModule.html":{},"components/EditRowComponent.html":{},"injectables/EndpointService.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":629,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":227,"title":{},"body":{"modules/AppMaterialModule.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":218,"title":{},"body":{"modules/AppMaterialModule.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":631,"title":{},"body":{"dependencies.html":{}}}],["api",{"_index":58,"title":{},"body":{"classes/Account.html":{},"components/AppComponent.html":{},"classes/Bucket.html":{},"injectables/EndpointService.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["app",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{},"index.html":{}}}],["app.compon",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":100,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":102,"title":{},"body":{"components/AppComponent.html":{}}}],["app.typ",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["appcompon",{"_index":88,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appli",{"_index":34,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["application/json",{"_index":395,"title":{},"body":{"injectables/EndpointService.html":{}}}],["appmaterialmodul",{"_index":210,"title":{"modules/AppMaterialModule.html":{}},"body":{"modules/AppMaterialModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appmodul",{"_index":230,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppag",{"_index":254,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approach",{"_index":526,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["architectur",{"_index":288,"title":{},"body":{"components/EditRowComponent.html":{}}}],["array",{"_index":143,"title":{},"body":{"components/AppComponent.html":{}}}],["array...tho",{"_index":173,"title":{},"body":{"components/AppComponent.html":{}}}],["artifact",{"_index":659,"title":{},"body":{"index.html":{}}}],["assign",{"_index":59,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["assumpt",{"_index":42,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["attach_money",{"_index":194,"title":{},"body":{"components/AppComponent.html":{}}}],["auth",{"_index":322,"title":{},"body":{"injectables/EndpointService.html":{}}}],["authent",{"_index":391,"title":{},"body":{"injectables/EndpointService.html":{}}}],["author",{"_index":396,"title":{},"body":{"injectables/EndpointService.html":{}}}],["automat",{"_index":653,"title":{},"body":{"index.html":{}}}],["avail",{"_index":676,"title":{},"body":{"modules.html":{}}}],["avoid",{"_index":435,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["back",{"_index":433,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["backend",{"_index":368,"title":{},"body":{"injectables/EndpointService.html":{}}}],["bad",{"_index":381,"title":{},"body":{"injectables/EndpointService.html":{}}}],["balanc",{"_index":31,"title":{},"body":{"classes/Account.html":{},"components/AppComponent.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{},"index.html":{}}}],["base",{"_index":325,"title":{},"body":{"injectables/EndpointService.html":{}}}],["baseurl",{"_index":306,"title":{},"body":{"injectables/EndpointService.html":{}}}],["belong",{"_index":75,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["below",{"_index":524,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["block",{"_index":492,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["bodi",{"_index":371,"title":{},"body":{"injectables/EndpointService.html":{}}}],["bootstrap",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["brows",{"_index":677,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get",{"_index":261,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/anim",{"_index":219,"title":{},"body":{"modules/AppMaterialModule.html":{}}}],["browseranimationsmodul",{"_index":217,"title":{},"body":{"modules/AppMaterialModule.html":{}}}],["browsermodul",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["bucket",{"_index":53,"title":{"classes/Bucket.html":{}},"body":{"classes/Account.html":{},"components/AppComponent.html":{},"classes/Bucket.html":{},"components/EditRowComponent.html":{},"classes/PendingTransaction.html":{},"components/QuickAddComponent.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{},"coverage.html":{}}}],["build",{"_index":658,"title":{},"body":{"index.html":{}}}],["case",{"_index":186,"title":{},"body":{"components/AppComponent.html":{}}}],["catcherror",{"_index":354,"title":{},"body":{"injectables/EndpointService.html":{}}}],["categor",{"_index":50,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["cell",{"_index":575,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["celldata",{"_index":553,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["chang",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/EditRowComponent.html":{},"components/TransactionsComponent.html":{},"index.html":{}}}],["check",{"_index":44,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{},"index.html":{}}}],["child",{"_index":449,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["class",{"_index":0,"title":{"classes/Account.html":{},"classes/AppPage.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}},"body":{"classes/Account.html":{},"components/AppComponent.html":{},"modules/AppMaterialModule.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/Bucket.html":{},"components/EditRowComponent.html":{},"injectables/EndpointService.html":{},"classes/PendingTransaction.html":{},"components/QuickAddComponent.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cli",{"_index":642,"title":{},"body":{"index.html":{}}}],["click",{"_index":552,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["client",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"injectables/EndpointService.html":{}}}],["clue",{"_index":373,"title":{},"body":{"injectables/EndpointService.html":{}}}],["cluster_appmodul",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cm",{"_index":28,"title":{},"body":{"classes/Account.html":{},"components/AppComponent.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["code",{"_index":370,"title":{},"body":{"injectables/EndpointService.html":{},"index.html":{}}}],["column",{"_index":281,"title":{},"body":{"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["commonmodul",{"_index":215,"title":{},"body":{"modules/AppMaterialModule.html":{}}}],["commun",{"_index":116,"title":{},"body":{"components/AppComponent.html":{}}}],["compon",{"_index":87,"title":{"components/AppComponent.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["concat(account",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["concat(bucket",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["concat(transact",{"_index":155,"title":{},"body":{"components/AppComponent.html":{}}}],["concept",{"_index":49,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["console.error",{"_index":376,"title":{},"body":{"injectables/EndpointService.html":{}}}],["console.error('an",{"_index":366,"title":{},"body":{"injectables/EndpointService.html":{}}}],["console.log('cel",{"_index":577,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["console.log('edit",{"_index":578,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["console.log('row",{"_index":569,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["const",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"injectables/EndpointService.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["constructor",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/EditRowComponent.html":{},"injectables/EndpointService.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["constructor(endpointservic",{"_index":109,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(http",{"_index":311,"title":{},"body":{"injectables/EndpointService.html":{}}}],["constructor(priv",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"injectables/EndpointService.html":{}}}],["contain",{"_index":372,"title":{},"body":{"injectables/EndpointService.html":{}}}],["content",{"_index":394,"title":{},"body":{"injectables/EndpointService.html":{}}}],["context",{"_index":335,"title":{},"body":{"injectables/EndpointService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["control",{"_index":456,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["core",{"_index":632,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["correctli",{"_index":136,"title":{},"body":{"components/AppComponent.html":{}}}],["coverag",{"_index":599,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":83,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"injectables/EndpointService.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["create('/transact",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["create(path",{"_index":315,"title":{},"body":{"injectables/EndpointService.html":{}}}],["created_at",{"_index":84,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["credit",{"_index":32,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["currenc",{"_index":583,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["current",{"_index":39,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"components/EditRowComponent.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["d+(\\.?\\d{1,2",{"_index":454,"title":{},"body":{"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["dang",{"_index":56,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["data",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/EditRowComponent.html":{},"components/TransactionsComponent.html":{}}}],["date",{"_index":64,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{}}}],["debit",{"_index":33,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["decim",{"_index":300,"title":{},"body":{"components/EditRowComponent.html":{}}}],["declar",{"_index":228,"title":{},"body":{"modules/AppMaterialModule.html":{},"modules/AppModule.html":{},"overview.html":{}}}],["decor",{"_index":445,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["deduct",{"_index":71,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["default",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"injectables/EndpointService.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":21,"title":{},"body":{"classes/Account.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"classes/Bucket.html":{},"components/EditRowComponent.html":{},"injectables/EndpointService.html":{},"classes/PendingTransaction.html":{},"components/QuickAddComponent.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{}}}],["depend",{"_index":231,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descript",{"_index":6,"title":{},"body":{"classes/Account.html":{},"components/AppComponent.html":{},"classes/Bucket.html":{},"injectables/EndpointService.html":{},"classes/PendingTransaction.html":{},"components/QuickAddComponent.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{}}}],["detail",{"_index":13,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"components/EditRowComponent.html":{},"classes/PendingTransaction.html":{},"components/QuickAddComponent.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{}}}],["detect",{"_index":135,"title":{},"body":{"components/AppComponent.html":{}}}],["dev",{"_index":650,"title":{},"body":{"index.html":{}}}],["develop",{"_index":645,"title":{},"body":{"index.html":{}}}],["direct",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":657,"title":{},"body":{"index.html":{}}}],["directori",{"_index":662,"title":{},"body":{"index.html":{}}}],["display",{"_index":282,"title":{},"body":{"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{}}}],["dist",{"_index":661,"title":{},"body":{"index.html":{}}}],["doc",{"_index":333,"title":{},"body":{"injectables/EndpointService.html":{}}}],["document",{"_index":600,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["due",{"_index":65,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"components/EditRowComponent.html":{},"classes/PendingTransaction.html":{},"components/QuickAddComponent.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{}}}],["dynam",{"_index":630,"title":{},"body":{"dependencies.html":{}}}],["e2",{"_index":670,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.t",{"_index":255,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":259,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":258,"title":{},"body":{"classes/AppPage.html":{}}}],["edit",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["editcolumn",{"_index":272,"title":{},"body":{"components/EditRowComponent.html":{}}}],["editform",{"_index":273,"title":{},"body":{"components/EditRowComponent.html":{}}}],["editing...stil",{"_index":534,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["editrowcompon",{"_index":202,"title":{"components/EditRowComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["edittablesourc",{"_index":274,"title":{},"body":{"components/EditRowComponent.html":{}}}],["effect",{"_index":70,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"components/EditRowComponent.html":{},"classes/PendingTransaction.html":{},"components/QuickAddComponent.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{}}}],["element",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["element(by.css('app",{"_index":262,"title":{},"body":{"classes/AppPage.html":{}}}],["element.amount",{"_index":582,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["element.bucket?.nam",{"_index":591,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["element.detail",{"_index":584,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["element.du",{"_index":585,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["element.effect",{"_index":588,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["element.fromaccount?.nam",{"_index":589,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["element.id",{"_index":580,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["element.nam",{"_index":581,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["element.schedul",{"_index":587,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["element.toaccount?.nam",{"_index":590,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["emit",{"_index":428,"title":{},"body":{"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["enabl",{"_index":576,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["end",{"_index":669,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"injectables/EndpointService.html":{}}}],["endpoint.servic",{"_index":151,"title":{},"body":{"components/AppComponent.html":{}}}],["endpointservic",{"_index":110,"title":{"injectables/EndpointService.html":{}},"body":{"components/AppComponent.html":{},"injectables/EndpointService.html":{},"coverage.html":{}}}],["environ",{"_index":618,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":336,"title":{},"body":{"injectables/EndpointService.html":{}}}],["error.error",{"_index":359,"title":{},"body":{"injectables/EndpointService.html":{}}}],["error.error.messag",{"_index":367,"title":{},"body":{"injectables/EndpointService.html":{}}}],["error.statu",{"_index":377,"title":{},"body":{"injectables/EndpointService.html":{}}}],["errorev",{"_index":361,"title":{},"body":{"injectables/EndpointService.html":{}}}],["event",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["event.id",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["eventemitt",{"_index":294,"title":{},"body":{"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["eventu",{"_index":321,"title":{},"body":{"injectables/EndpointService.html":{}}}],["execut",{"_index":667,"title":{},"body":{"index.html":{}}}],["exist",{"_index":77,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"injectables/EndpointService.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["export",{"_index":48,"title":{},"body":{"classes/Account.html":{},"components/AppComponent.html":{},"modules/AppMaterialModule.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/Bucket.html":{},"components/EditRowComponent.html":{},"injectables/EndpointService.html":{},"classes/PendingTransaction.html":{},"components/QuickAddComponent.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{},"overview.html":{}}}],["extend",{"_index":78,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["face",{"_index":378,"title":{},"body":{"injectables/EndpointService.html":{}}}],["fals",{"_index":692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fast",{"_index":540,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["fetch",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"injectables/EndpointService.html":{}}}],["figur",{"_index":528,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["file",{"_index":4,"title":{},"body":{"classes/Account.html":{},"components/AppComponent.html":{},"modules/AppMaterialModule.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/Bucket.html":{},"components/EditRowComponent.html":{},"injectables/EndpointService.html":{},"classes/PendingTransaction.html":{},"components/QuickAddComponent.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{},"coverage.html":{},"index.html":{}}}],["flag",{"_index":664,"title":{},"body":{"index.html":{}}}],["flesh",{"_index":542,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["form",{"_index":284,"title":{},"body":{"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{}}}],["formcontrol",{"_index":295,"title":{},"body":{"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["formcontrol(nul",{"_index":452,"title":{},"body":{"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["formgroup",{"_index":289,"title":{},"body":{"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["formgroup.invalid",{"_index":470,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["formgroup.reset",{"_index":488,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["formgroup.valu",{"_index":465,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["formvalu",{"_index":464,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["formvalues.amount",{"_index":473,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["formvalues.bucket",{"_index":485,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["formvalues.detail",{"_index":474,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["formvalues.du",{"_index":475,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["formvalues.due.tolocaledatestr",{"_index":476,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["formvalues.effect",{"_index":479,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["formvalues.effective.tolocaledatestr",{"_index":480,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["formvalues.fromaccount",{"_index":481,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["formvalues.nam",{"_index":472,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["formvalues.schedul",{"_index":477,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["formvalues.scheduled.tolocaledatestr",{"_index":478,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["formvalues.toaccount",{"_index":483,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["freshtransact",{"_index":471,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["fromaccount",{"_index":72,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"components/QuickAddComponent.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{}}}],["fund",{"_index":10,"title":{},"body":{"classes/Account.html":{}}}],["further",{"_index":671,"title":{},"body":{"index.html":{}}}],["gener",{"_index":27,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"injectables/EndpointService.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{},"index.html":{}}}],["get",{"_index":640,"title":{"index.html":{}},"body":{}}],["get'",{"_index":392,"title":{},"body":{"injectables/EndpointService.html":{}}}],["getaccount",{"_index":420,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["getaccount(nam",{"_index":430,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["getbucket",{"_index":421,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["getbucket(nam",{"_index":437,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["getparagraphtext",{"_index":256,"title":{},"body":{"classes/AppPage.html":{}}}],["given",{"_index":319,"title":{},"body":{"injectables/EndpointService.html":{},"components/QuickAddComponent.html":{}}}],["go",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["graph",{"_index":675,"title":{},"body":{"modules.html":{}}}],["group...yo",{"_index":285,"title":{},"body":{"components/EditRowComponent.html":{}}}],["h1')).gettext",{"_index":263,"title":{},"body":{"classes/AppPage.html":{}}}],["hammerj",{"_index":635,"title":{},"body":{"dependencies.html":{}}}],["handl",{"_index":337,"title":{},"body":{"injectables/EndpointService.html":{}}}],["handleerror",{"_index":308,"title":{},"body":{"injectables/EndpointService.html":{}}}],["handleerror(error",{"_index":328,"title":{},"body":{"injectables/EndpointService.html":{}}}],["happen",{"_index":382,"title":{},"body":{"injectables/EndpointService.html":{}}}],["header",{"_index":390,"title":{},"body":{"injectables/EndpointService.html":{},"components/TransactionsComponent.html":{}}}],["height",{"_index":594,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["help",{"_index":672,"title":{},"body":{"index.html":{}}}],["host",{"_index":351,"title":{},"body":{"injectables/EndpointService.html":{}}}],["html",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["http",{"_index":314,"title":{},"body":{"injectables/EndpointService.html":{}}}],["http://localhost",{"_index":348,"title":{},"body":{"injectables/EndpointService.html":{}}}],["http://localhost:4200",{"_index":652,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":312,"title":{},"body":{"injectables/EndpointService.html":{}}}],["httpclientmodul",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorrespons",{"_index":329,"title":{},"body":{"injectables/EndpointService.html":{}}}],["httpheader",{"_index":353,"title":{},"body":{"injectables/EndpointService.html":{}}}],["httpoption",{"_index":389,"title":{},"body":{"injectables/EndpointService.html":{}}}],["id",{"_index":14,"title":{},"body":{"classes/Account.html":{},"components/AppComponent.html":{},"classes/Bucket.html":{},"injectables/EndpointService.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{}}}],["idea",{"_index":536,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["identifi",{"_index":601,"title":{},"body":{"coverage.html":{}}}],["immut",{"_index":132,"title":{},"body":{"components/AppComponent.html":{}}}],["implement",{"_index":40,"title":{},"body":{"classes/Account.html":{},"components/AppComponent.html":{},"classes/Bucket.html":{},"components/EditRowComponent.html":{},"classes/PendingTransaction.html":{},"components/QuickAddComponent.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{}}}],["implemnt",{"_index":55,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["import",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"modules/AppMaterialModule.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/EditRowComponent.html":{},"injectables/EndpointService.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["index",{"_index":11,"title":{"index.html":{}},"body":{"classes/Account.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"classes/Bucket.html":{},"components/EditRowComponent.html":{},"injectables/EndpointService.html":{},"classes/PendingTransaction.html":{},"components/QuickAddComponent.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"classes/Account.html":{},"components/AppComponent.html":{},"modules/AppMaterialModule.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/Bucket.html":{},"components/EditRowComponent.html":{},"injectables/EndpointService.html":{},"classes/PendingTransaction.html":{},"components/QuickAddComponent.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{}}}],["inherit",{"_index":503,"title":{},"body":{"classes/Transaction.html":{}}}],["init",{"_index":119,"title":{},"body":{"components/AppComponent.html":{}}}],["initi",{"_index":451,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["initialaddvalu",{"_index":416,"title":{},"body":{"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["initialbal",{"_index":15,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["inject",{"_index":114,"title":{"injectables/EndpointService.html":{}},"body":{"components/AppComponent.html":{},"injectables/EndpointService.html":{},"coverage.html":{},"overview.html":{}}}],["input",{"_index":271,"title":{},"body":{"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["insert",{"_index":170,"title":{},"body":{"components/AppComponent.html":{}}}],["instanc",{"_index":342,"title":{},"body":{"injectables/EndpointService.html":{},"components/TransactionsComponent.html":{}}}],["instanceof",{"_index":360,"title":{},"body":{"injectables/EndpointService.html":{}}}],["invalid",{"_index":468,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["is/wa",{"_index":66,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["item",{"_index":343,"title":{},"body":{"injectables/EndpointService.html":{},"components/QuickAddComponent.html":{}}}],["item.nam",{"_index":490,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["js",{"_index":633,"title":{},"body":{"dependencies.html":{}}}],["karma",{"_index":668,"title":{},"body":{"index.html":{}}}],["last",{"_index":79,"title":{},"body":{"classes/Account.html":{},"components/AppComponent.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["later",{"_index":386,"title":{},"body":{"injectables/EndpointService.html":{}}}],["left",{"_index":499,"title":{},"body":{"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["legend",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{},"overview.html":{}}}],["length",{"_index":563,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["lift",{"_index":331,"title":{},"body":{"injectables/EndpointService.html":{}}}],["limit",{"_index":191,"title":{},"body":{"components/AppComponent.html":{}}}],["line",{"_index":562,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["list",{"_index":276,"title":{},"body":{"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["loan",{"_index":46,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["locat",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["lol",{"_index":466,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["map",{"_index":432,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["matbuttonmodul",{"_index":226,"title":{},"body":{"modules/AppMaterialModule.html":{}}}],["match",{"_index":86,"title":{},"body":{"classes/Account.html":{},"components/AppComponent.html":{},"modules/AppMaterialModule.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/Bucket.html":{},"components/EditRowComponent.html":{},"injectables/EndpointService.html":{},"classes/PendingTransaction.html":{},"components/QuickAddComponent.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["matdatepickermodul",{"_index":221,"title":{},"body":{"modules/AppMaterialModule.html":{}}}],["matdividermodul",{"_index":224,"title":{},"body":{"modules/AppMaterialModule.html":{}}}],["material.modul",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["material.module.t",{"_index":213,"title":{},"body":{"modules/AppMaterialModule.html":{}}}],["material/app",{"_index":212,"title":{},"body":{"modules/AppMaterialModule.html":{},"modules/AppModule.html":{}}}],["maticonmodul",{"_index":223,"title":{},"body":{"modules/AppMaterialModule.html":{}}}],["matinputmodul",{"_index":220,"title":{},"body":{"modules/AppMaterialModule.html":{}}}],["matnativedatemodul",{"_index":222,"title":{},"body":{"modules/AppMaterialModule.html":{}}}],["mattabledatasourc",{"_index":292,"title":{},"body":{"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["mattabledatasource(this.initialaddvalu",{"_index":458,"title":{},"body":{"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["mattabledatasource(this.transact",{"_index":558,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["mattablemodul",{"_index":225,"title":{},"body":{"modules/AppMaterialModule.html":{}}}],["max",{"_index":561,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["mayb",{"_index":529,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["messag",{"_index":379,"title":{},"body":{"injectables/EndpointService.html":{}}}],["metadata",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["method",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/EditRowComponent.html":{},"injectables/EndpointService.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["min",{"_index":595,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["miscellan",{"_index":685,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mm/dd",{"_index":586,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["mm/dd/yyyi",{"_index":302,"title":{},"body":{"components/EditRowComponent.html":{}}}],["modified...also",{"_index":182,"title":{},"body":{"components/AppComponent.html":{}}}],["modul",{"_index":209,"title":{"modules/AppMaterialModule.html":{},"modules/AppModule.html":{},"modules.html":{}},"body":{"modules/AppMaterialModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":673,"title":{},"body":{"index.html":{}}}],["name",{"_index":16,"title":{},"body":{"classes/Account.html":{},"components/AppComponent.html":{},"classes/Bucket.html":{},"components/EditRowComponent.html":{},"injectables/EndpointService.html":{},"classes/PendingTransaction.html":{},"components/QuickAddComponent.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{},"index.html":{}}}],["navig",{"_index":651,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":257,"title":{},"body":{"classes/AppPage.html":{}}}],["nbsp",{"_index":299,"title":{},"body":{"components/EditRowComponent.html":{}}}],["need",{"_index":38,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"injectables/EndpointService.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["network",{"_index":363,"title":{},"body":{"injectables/EndpointService.html":{}}}],["never",{"_index":467,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["new",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"injectables/EndpointService.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{},"coverage.html":{},"index.html":{}}}],["newnoun",{"_index":316,"title":{},"body":{"injectables/EndpointService.html":{}}}],["newtransact",{"_index":417,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["next",{"_index":177,"title":{},"body":{"components/AppComponent.html":{}}}],["ng",{"_index":648,"title":{},"body":{"index.html":{}}}],["ngform",{"_index":297,"title":{},"body":{"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["ngmodul",{"_index":214,"title":{},"body":{"modules/AppMaterialModule.html":{},"modules/AppModule.html":{}}}],["ngonchang",{"_index":519,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["ngonchanges(chang",{"_index":547,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["ngoninit",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["not...ne",{"_index":541,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["note",{"_index":23,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["null",{"_index":20,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"injectables/EndpointService.html":{},"classes/PendingTransaction.html":{},"components/QuickAddComponent.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{}}}],["number",{"_index":24,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"injectables/EndpointService.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["o(n",{"_index":183,"title":{},"body":{"components/AppComponent.html":{}}}],["object",{"_index":320,"title":{},"body":{"injectables/EndpointService.html":{},"components/QuickAddComponent.html":{},"miscellaneous/variables.html":{}}}],["observ",{"_index":326,"title":{},"body":{"injectables/EndpointService.html":{}}}],["occur",{"_index":364,"title":{},"body":{"injectables/EndpointService.html":{}}}],["onadd",{"_index":422,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["oncellclick",{"_index":520,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["oncellclick(celldata",{"_index":550,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["onchang",{"_index":514,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["oninit",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["onrowclick(rowdata",{"_index":568,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["oper",{"_index":184,"title":{},"body":{"components/AppComponent.html":{}}}],["option",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"injectables/EndpointService.html":{},"components/QuickAddComponent.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{}}}],["option.nam",{"_index":303,"title":{},"body":{"components/EditRowComponent.html":{}}}],["order",{"_index":175,"title":{},"body":{"components/AppComponent.html":{}}}],["out",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"components/TransactionsComponent.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":423,"title":{},"body":{"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["overview",{"_index":680,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":623,"title":{"dependencies.html":{}},"body":{}}],["pad",{"_index":598,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["param",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"injectables/EndpointService.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["paramet",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"injectables/EndpointService.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["parent",{"_index":444,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["pass",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/QuickAddComponent.html":{}}}],["path",{"_index":324,"title":{},"body":{"injectables/EndpointService.html":{}}}],["pendingtransact",{"_index":60,"title":{"classes/PendingTransaction.html":{}},"body":{"classes/Account.html":{},"components/AppComponent.html":{},"classes/Bucket.html":{},"components/EditRowComponent.html":{},"classes/PendingTransaction.html":{},"components/QuickAddComponent.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{},"coverage.html":{}}}],["pendingtransaction:101",{"_index":505,"title":{},"body":{"classes/Transaction.html":{}}}],["pendingtransaction:61",{"_index":510,"title":{},"body":{"classes/Transaction.html":{}}}],["pendingtransaction:66",{"_index":504,"title":{},"body":{"classes/Transaction.html":{}}}],["pendingtransaction:71",{"_index":506,"title":{},"body":{"classes/Transaction.html":{}}}],["pendingtransaction:76",{"_index":507,"title":{},"body":{"classes/Transaction.html":{}}}],["pendingtransaction:81",{"_index":511,"title":{},"body":{"classes/Transaction.html":{}}}],["pendingtransaction:86",{"_index":508,"title":{},"body":{"classes/Transaction.html":{}}}],["pendingtransaction:91",{"_index":509,"title":{},"body":{"classes/Transaction.html":{}}}],["pendingtransaction:96",{"_index":512,"title":{},"body":{"classes/Transaction.html":{}}}],["perform",{"_index":537,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["pipe(catcherror(this.handleerror",{"_index":400,"title":{},"body":{"injectables/EndpointService.html":{}}}],["place",{"_index":527,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["pleas",{"_index":383,"title":{},"body":{"injectables/EndpointService.html":{}}}],["port",{"_index":307,"title":{},"body":{"injectables/EndpointService.html":{}}}],["post",{"_index":327,"title":{},"body":{"injectables/EndpointService.html":{}}}],["post'",{"_index":393,"title":{},"body":{"injectables/EndpointService.html":{}}}],["post(endpoint",{"_index":399,"title":{},"body":{"injectables/EndpointService.html":{}}}],["preserv",{"_index":174,"title":{},"body":{"components/AppComponent.html":{}}}],["pretti",{"_index":539,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["priorindex",{"_index":189,"title":{},"body":{"components/AppComponent.html":{}}}],["privat",{"_index":305,"title":{},"body":{"injectables/EndpointService.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["prod",{"_index":663,"title":{},"body":{"index.html":{}}}],["product",{"_index":665,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":641,"title":{},"body":{"index.html":{}}}],["properti",{"_index":12,"title":{},"body":{"classes/Account.html":{},"components/AppComponent.html":{},"classes/Bucket.html":{},"injectables/EndpointService.html":{},"classes/PendingTransaction.html":{},"components/QuickAddComponent.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{}}}],["protocol",{"_index":350,"title":{},"body":{"injectables/EndpointService.html":{}}}],["protractor",{"_index":260,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["provid",{"_index":229,"title":{},"body":{"modules/AppMaterialModule.html":{},"modules/AppModule.html":{},"injectables/EndpointService.html":{},"overview.html":{}}}],["providedin",{"_index":358,"title":{},"body":{"injectables/EndpointService.html":{}}}],["public",{"_index":462,"title":{},"body":{"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["put(endpoint",{"_index":402,"title":{},"body":{"injectables/EndpointService.html":{}}}],["quick",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["quickaddcolumn",{"_index":418,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["quickaddcompon",{"_index":204,"title":{"components/QuickAddComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["quickaddtablesourc",{"_index":419,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["re",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["reactiveformsmodul",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["read",{"_index":309,"title":{},"body":{"injectables/EndpointService.html":{}}}],["read(path",{"_index":339,"title":{},"body":{"injectables/EndpointService.html":{}}}],["readal",{"_index":310,"title":{},"body":{"injectables/EndpointService.html":{}}}],["readall(path",{"_index":344,"title":{},"body":{"injectables/EndpointService.html":{}}}],["readm",{"_index":674,"title":{},"body":{"index.html":{}}}],["receiv",{"_index":441,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["receiveedittransact",{"_index":521,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["receiveedittransaction($ev",{"_index":554,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["receivenewtransact",{"_index":106,"title":{},"body":{"components/AppComponent.html":{}}}],["receivenewtransaction($ev",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["receiveupdatedtransact",{"_index":107,"title":{},"body":{"components/AppComponent.html":{}}}],["receiveupdatedtransaction($ev",{"_index":138,"title":{},"body":{"components/AppComponent.html":{}}}],["refactor",{"_index":434,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["refer",{"_index":448,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["reli",{"_index":41,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["reload",{"_index":654,"title":{},"body":{"index.html":{}}}],["reload...might",{"_index":179,"title":{},"body":{"components/AppComponent.html":{}}}],["remov",{"_index":9,"title":{},"body":{"classes/Account.html":{}}}],["report",{"_index":81,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["repres",{"_index":525,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["request",{"_index":318,"title":{},"body":{"injectables/EndpointService.html":{}}}],["requir",{"_index":298,"title":{},"body":{"components/EditRowComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["respons",{"_index":338,"title":{},"body":{"injectables/EndpointService.html":{}}}],["rest",{"_index":556,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["result",{"_index":85,"title":{},"body":{"classes/Account.html":{},"components/AppComponent.html":{},"modules/AppMaterialModule.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/Bucket.html":{},"components/EditRowComponent.html":{},"injectables/EndpointService.html":{},"classes/PendingTransaction.html":{},"components/QuickAddComponent.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["retriev",{"_index":144,"title":{},"body":{"components/AppComponent.html":{}}}],["return",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/EditRowComponent.html":{},"injectables/EndpointService.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["reus",{"_index":530,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["rid",{"_index":188,"title":{},"body":{"components/AppComponent.html":{}}}],["right",{"_index":497,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["root",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/EndpointService.html":{}}}],["root'},{'nam",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["row",{"_index":268,"title":{},"body":{"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["row'},{'nam",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["row.compon",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["row.component.css",{"_index":269,"title":{},"body":{"components/EditRowComponent.html":{}}}],["row.component.html",{"_index":270,"title":{},"body":{"components/EditRowComponent.html":{}}}],["row.component.t",{"_index":267,"title":{},"body":{"components/EditRowComponent.html":{},"coverage.html":{}}}],["row.component.ts:15",{"_index":279,"title":{},"body":{"components/EditRowComponent.html":{}}}],["row.component.ts:20",{"_index":280,"title":{},"body":{"components/EditRowComponent.html":{}}}],["row.component.ts:25",{"_index":283,"title":{},"body":{"components/EditRowComponent.html":{}}}],["row.component.ts:30",{"_index":290,"title":{},"body":{"components/EditRowComponent.html":{}}}],["row.component.ts:35",{"_index":275,"title":{},"body":{"components/EditRowComponent.html":{}}}],["row.component.ts:39",{"_index":293,"title":{},"body":{"components/EditRowComponent.html":{}}}],["row.expand",{"_index":596,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["row/edit",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{},"coverage.html":{}}}],["rowdata",{"_index":570,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["rowdata.detail",{"_index":573,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["run",{"_index":647,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":357,"title":{},"body":{"injectables/EndpointService.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":355,"title":{},"body":{"injectables/EndpointService.html":{}}}],["save",{"_index":45,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["scaffold",{"_index":655,"title":{},"body":{"index.html":{}}}],["schedul",{"_index":68,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"components/EditRowComponent.html":{},"classes/PendingTransaction.html":{},"components/QuickAddComponent.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{}}}],["scheduled/for",{"_index":67,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["search",{"_index":436,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["select",{"_index":278,"title":{},"body":{"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["selector",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["send",{"_index":181,"title":{},"body":{"components/AppComponent.html":{}}}],["serv",{"_index":649,"title":{},"body":{"index.html":{}}}],["server",{"_index":646,"title":{},"body":{"index.html":{}}}],["servic",{"_index":115,"title":{},"body":{"components/AppComponent.html":{}}}],["short",{"_index":61,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["side",{"_index":362,"title":{},"body":{"injectables/EndpointService.html":{}}}],["simplechang",{"_index":460,"title":{},"body":{"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["singl",{"_index":531,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["singletoncolumn",{"_index":565,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["singletontablesourc",{"_index":564,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["somehow",{"_index":323,"title":{},"body":{"injectables/EndpointService.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"classes/Account.html":{},"components/AppComponent.html":{},"modules/AppMaterialModule.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/Bucket.html":{},"components/EditRowComponent.html":{},"injectables/EndpointService.html":{},"classes/PendingTransaction.html":{},"components/QuickAddComponent.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{},"index.html":{}}}],["spec\\.t",{"_index":691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specif",{"_index":341,"title":{},"body":{"injectables/EndpointService.html":{}}}],["spend",{"_index":52,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["src/.../environment.prod.t",{"_index":687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.t",{"_index":686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":211,"title":{},"body":{"modules/AppMaterialModule.html":{}}}],["src/app/app.component.t",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:16",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:21",{"_index":148,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:26",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:31",{"_index":111,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:41",{"_index":118,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:61",{"_index":125,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:78",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.types.t",{"_index":5,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{},"coverage.html":{}}}],["src/app/app.types.ts:10",{"_index":25,"title":{},"body":{"classes/Account.html":{}}}],["src/app/app.types.ts:101",{"_index":404,"title":{},"body":{"classes/PendingTransaction.html":{}}}],["src/app/app.types.ts:113",{"_index":501,"title":{},"body":{"classes/Transaction.html":{}}}],["src/app/app.types.ts:118",{"_index":502,"title":{},"body":{"classes/Transaction.html":{}}}],["src/app/app.types.ts:123",{"_index":500,"title":{},"body":{"classes/Transaction.html":{}}}],["src/app/app.types.ts:17",{"_index":36,"title":{},"body":{"classes/Account.html":{}}}],["src/app/app.types.ts:22",{"_index":22,"title":{},"body":{"classes/Account.html":{}}}],["src/app/app.types.ts:27",{"_index":47,"title":{},"body":{"classes/Account.html":{}}}],["src/app/app.types.ts:32",{"_index":29,"title":{},"body":{"classes/Account.html":{}}}],["src/app/app.types.ts:44",{"_index":264,"title":{},"body":{"classes/Bucket.html":{}}}],["src/app/app.types.ts:51",{"_index":265,"title":{},"body":{"classes/Bucket.html":{}}}],["src/app/app.types.ts:61",{"_index":409,"title":{},"body":{"classes/PendingTransaction.html":{}}}],["src/app/app.types.ts:66",{"_index":403,"title":{},"body":{"classes/PendingTransaction.html":{}}}],["src/app/app.types.ts:71",{"_index":405,"title":{},"body":{"classes/PendingTransaction.html":{}}}],["src/app/app.types.ts:76",{"_index":406,"title":{},"body":{"classes/PendingTransaction.html":{}}}],["src/app/app.types.ts:81",{"_index":410,"title":{},"body":{"classes/PendingTransaction.html":{}}}],["src/app/app.types.ts:86",{"_index":407,"title":{},"body":{"classes/PendingTransaction.html":{}}}],["src/app/app.types.ts:91",{"_index":408,"title":{},"body":{"classes/PendingTransaction.html":{}}}],["src/app/app.types.ts:96",{"_index":411,"title":{},"body":{"classes/PendingTransaction.html":{}}}],["src/app/edit",{"_index":266,"title":{},"body":{"components/EditRowComponent.html":{},"coverage.html":{}}}],["src/app/endpoint.service.t",{"_index":304,"title":{},"body":{"injectables/EndpointService.html":{},"coverage.html":{}}}],["src/app/endpoint.service.ts:107",{"_index":347,"title":{},"body":{"injectables/EndpointService.html":{}}}],["src/app/endpoint.service.ts:17",{"_index":349,"title":{},"body":{"injectables/EndpointService.html":{}}}],["src/app/endpoint.service.ts:22",{"_index":313,"title":{},"body":{"injectables/EndpointService.html":{}}}],["src/app/endpoint.service.ts:30",{"_index":330,"title":{},"body":{"injectables/EndpointService.html":{}}}],["src/app/endpoint.service.ts:53",{"_index":317,"title":{},"body":{"injectables/EndpointService.html":{}}}],["src/app/endpoint.service.ts:76",{"_index":345,"title":{},"body":{"injectables/EndpointService.html":{}}}],["src/app/endpoint.service.ts:90",{"_index":340,"title":{},"body":{"injectables/EndpointService.html":{}}}],["src/app/quick",{"_index":412,"title":{},"body":{"components/QuickAddComponent.html":{},"coverage.html":{}}}],["src/app/transactions/transactions.component.t",{"_index":513,"title":{},"body":{"components/TransactionsComponent.html":{},"coverage.html":{}}}],["src/app/transactions/transactions.component.ts:131",{"_index":549,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/transactions/transactions.component.ts:133",{"_index":548,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/transactions/transactions.component.ts:152",{"_index":551,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/transactions/transactions.component.ts:160",{"_index":555,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/transactions/transactions.component.ts:25",{"_index":543,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/transactions/transactions.component.ts:30",{"_index":544,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/transactions/transactions.component.ts:35",{"_index":545,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/transactions/transactions.component.ts:40",{"_index":546,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/transactions/transactions.component.ts:47",{"_index":559,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/transactions/transactions.component.ts:52",{"_index":557,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/transactions/transactions.component.ts:63",{"_index":523,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/environments/environment.prod.t",{"_index":616,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":620,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.t",{"_index":621,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":30,"title":{"index.html":{}},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["statement",{"_index":602,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":593,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["store",{"_index":660,"title":{},"body":{"index.html":{}}}],["string",{"_index":18,"title":{},"body":{"classes/Account.html":{},"components/AppComponent.html":{},"classes/Bucket.html":{},"components/EditRowComponent.html":{},"injectables/EndpointService.html":{},"classes/PendingTransaction.html":{},"components/QuickAddComponent.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{}}}],["style",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["styleurl",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["submit",{"_index":57,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["subscrib",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribe(newtransact",{"_index":164,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribe(updatedtransact",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["suffer",{"_index":538,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["support",{"_index":678,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":679,"title":{},"body":{"modules.html":{}}}],["tabl",{"_index":291,"title":{},"body":{"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":622,"title":{},"body":{"coverage.html":{}}}],["td",{"_index":498,"title":{},"body":{"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["templat",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["templateurl",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["test",{"_index":592,"title":{},"body":{"components/TransactionsComponent.html":{},"index.html":{}}}],["text",{"_index":495,"title":{},"body":{"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["this.account",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["this.accounts.foreach(item",{"_index":489,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["this.baseurl",{"_index":387,"title":{},"body":{"injectables/EndpointService.html":{}}}],["this.bucket",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["this.buckets.foreach(item",{"_index":491,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["this.editrowcomponent.editform",{"_index":463,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["this.endpointservic",{"_index":162,"title":{},"body":{"components/AppComponent.html":{}}}],["this.endpointservice.readall('/accounts/').subscribe(account",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["this.endpointservice.readall('/buckets/').subscribe(bucket",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["this.endpointservice.readall('/transactions/').subscribe(transact",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["this.getaccount(formvalues.fromaccount",{"_index":482,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["this.getaccount(formvalues.toaccount",{"_index":484,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["this.getbucket(formvalues.bucket",{"_index":486,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["this.http",{"_index":398,"title":{},"body":{"injectables/EndpointService.html":{}}}],["this.http.get(endpoint",{"_index":401,"title":{},"body":{"injectables/EndpointService.html":{}}}],["this.port",{"_index":388,"title":{},"body":{"injectables/EndpointService.html":{}}}],["this.transact",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"components/TransactionsComponent.html":{}}}],["this.transactionaddedevent.emit(freshtransact",{"_index":487,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["this.transactions.concat(newtransact",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["this.transactions.length",{"_index":192,"title":{},"body":{"components/AppComponent.html":{}}}],["this.transactiontablesource.data",{"_index":567,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["this.transactionupdatedevent.emit($ev",{"_index":579,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["this.transactionupdatedevent.emit(updatedrow",{"_index":574,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["tho",{"_index":469,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["throwerror",{"_index":356,"title":{},"body":{"injectables/EndpointService.html":{}}}],["throwerror('someth",{"_index":380,"title":{},"body":{"injectables/EndpointService.html":{}}}],["thru",{"_index":443,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["titl",{"_index":103,"title":{},"body":{"components/AppComponent.html":{}}}],["toaccount",{"_index":74,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"components/QuickAddComponent.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{}}}],["todo",{"_index":37,"title":{},"body":{"classes/Account.html":{},"components/AppComponent.html":{},"classes/Bucket.html":{},"components/EditRowComponent.html":{},"injectables/EndpointService.html":{},"classes/PendingTransaction.html":{},"components/QuickAddComponent.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{}}}],["token",{"_index":397,"title":{},"body":{"injectables/EndpointService.html":{}}}],["total",{"_index":287,"title":{},"body":{"components/EditRowComponent.html":{}}}],["track",{"_index":51,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["transact",{"_index":7,"title":{"classes/Transaction.html":{}},"body":{"classes/Account.html":{},"components/AppComponent.html":{},"classes/Bucket.html":{},"components/EditRowComponent.html":{},"classes/PendingTransaction.html":{},"components/QuickAddComponent.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{},"coverage.html":{}}}],["transactionaddedev",{"_index":424,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["transactioneditev",{"_index":442,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["transactions.component.css",{"_index":515,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["transactions.component.html",{"_index":516,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["transactions/transactions.compon",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["transactionscolumn",{"_index":517,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["transactionscompon",{"_index":207,"title":{"components/TransactionsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["transactionsformgroup",{"_index":566,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["transactiontablesourc",{"_index":518,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["transactionupdatedev",{"_index":522,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["transcat",{"_index":69,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["treat",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["tree",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["tri",{"_index":384,"title":{},"body":{"injectables/EndpointService.html":{}}}],["trigger",{"_index":133,"title":{},"body":{"components/AppComponent.html":{}}}],["true",{"_index":690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tslint:dis",{"_index":560,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["type",{"_index":17,"title":{},"body":{"classes/Account.html":{},"components/AppComponent.html":{},"classes/Bucket.html":{},"components/EditRowComponent.html":{},"injectables/EndpointService.html":{},"classes/PendingTransaction.html":{},"components/QuickAddComponent.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unfortun",{"_index":54,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["uniqu",{"_index":26,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["unit",{"_index":666,"title":{},"body":{"index.html":{}}}],["unnecessari",{"_index":180,"title":{},"body":{"components/AppComponent.html":{}}}],["unsuccess",{"_index":369,"title":{},"body":{"injectables/EndpointService.html":{}}}],["until",{"_index":176,"title":{},"body":{"components/AppComponent.html":{}}}],["updat",{"_index":80,"title":{},"body":{"classes/Account.html":{},"components/AppComponent.html":{},"classes/Bucket.html":{},"injectables/EndpointService.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{}}}],["update('/transact",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["update(path",{"_index":346,"title":{},"body":{"injectables/EndpointService.html":{}}}],["updated_at",{"_index":82,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["updatedrow",{"_index":571,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["updatedrow.detail",{"_index":572,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["us",{"_index":656,"title":{},"body":{"index.html":{}}}],["usd",{"_index":301,"title":{},"body":{"components/EditRowComponent.html":{},"components/TransactionsComponent.html":{}}}],["user",{"_index":277,"title":{},"body":{"components/EditRowComponent.html":{},"injectables/EndpointService.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["valid",{"_index":296,"title":{},"body":{"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["validators.pattern",{"_index":453,"title":{},"body":{"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["valu",{"_index":62,"title":{},"body":{"classes/Account.html":{},"components/AppComponent.html":{},"classes/Bucket.html":{},"injectables/EndpointService.html":{},"classes/PendingTransaction.html":{},"components/QuickAddComponent.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["variabl",{"_index":617,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":643,"title":{},"body":{"index.html":{}}}],["via",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["viabl",{"_index":535,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["viewchild",{"_index":461,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["viewchild(editrowcompon",{"_index":446,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["void",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["wait",{"_index":286,"title":{},"body":{"components/EditRowComponent.html":{}}}],["went",{"_index":374,"title":{},"body":{"injectables/EndpointService.html":{}}}],["whichev",{"_index":532,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["whoop",{"_index":43,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["width",{"_index":493,"title":{},"body":{"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["wip",{"_index":140,"title":{},"body":{"components/AppComponent.html":{}}}],["work",{"_index":334,"title":{},"body":{"injectables/EndpointService.html":{}}}],["worst",{"_index":185,"title":{},"body":{"components/AppComponent.html":{}}}],["wrong",{"_index":375,"title":{},"body":{"injectables/EndpointService.html":{}}}],["zone.j",{"_index":638,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Account.html":{"url":"classes/Account.html","title":"class - Account","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Account\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.types.ts\n        \n\n            \n                Description\n            \n            \n                An Account which a Transaction may add or remove funds from.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                details\n                            \n                            \n                                id\n                            \n                            \n                                initialBalance\n                            \n                            \n                                name\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            details\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        details:     string | null\n\n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.types.ts:22\n                            \n                        \n\n                \n                    \n                        Details, notes, or description of account.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.types.ts:10\n                            \n                        \n\n                \n                    \n                        Unique account ID.\nGenerated by CMS.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialBalance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        initialBalance:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.types.ts:32\n                            \n                        \n\n                \n                    \n                        Account starting balance which Transaction credits and debits are applied against.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.types.ts:17\n                            \n                        \n\n                \n                    \n                        Name of account.\n[TODO] Should not need to be unique, but current implementation relies on unique assumption. Whoops.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \"checking\" | \"savings\" | \"credit\" | \"loan\" | null\n\n                    \n                \n                    \n                        \n                            Type :     \"checking\" | \"savings\" | \"credit\" | \"loan\" | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.types.ts:27\n                            \n                        \n\n                \n                    \n                        Account type.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Account {\n  /**\n   * Unique account ID.\n   *\n   * Generated by CMS.\n   */\n  id: number;\n\n  /**\n   * Name of account.\n   *\n   * [TODO] Should not need to be unique, but current implementation relies on unique assumption. Whoops.\n   */\n  name: string;\n\n  /**\n   * Details, notes, or description of account.\n   */\n  details: string | null;\n\n  /**\n   * Account type.\n   */\n  type: 'checking' | 'savings' | 'credit' | 'loan' | null;\n\n  /**\n   * Account starting balance which Transaction credits and debits are applied against.\n   */\n  initialBalance: number;\n}\n\n/**\n * Concept for categorizing and tracking spend.\n */\nexport class Bucket {\n  /**\n   * Unique bucket ID.\n   *\n   * Generated by CMS.\n   */\n  id: number;\n\n  /**\n   * Name of bucket.\n   *\n   * [TODO] Should not need to be unique; unfortunately, current implemntation relies on unique assumption. Dang.\n   */\n  name: string;\n}\n\n/**\n * A transaction which has not yet been submitted to API and assigned an ID.\n */\nexport class PendingTransaction {\n  /**\n   * Short name for the transaction.\n   */\n  name: string;\n\n  /**\n   * Value of the transaction.\n   */\n  amount: number;\n\n  /**\n   * Details, notes, or description of the transaction.\n   */\n  details: string;\n\n  /**\n   * Date the transaction is due.\n   */\n  due: string;\n\n  /**\n   * Date the transaction is/was scheduled/for.\n   */\n  scheduled: string;\n\n  /**\n   * Date the transcation is/was effective.\n   */\n  effective: string;\n\n  /**\n   * Account from which the transaction value is deducted.\n   */\n  fromAccount: any;\n\n  /**\n   * Account to which the transaction value is added.\n   */\n  toAccount: any;\n\n  /**\n   * Tracking bucket that the transaction should belong to.\n   */\n  bucket: any;\n}\n\n/**\n * A transaction which already exists in the CMS and has an ID.\n */\nexport class Transaction extends PendingTransaction {\n  /**\n   * Unique transaction ID.\n   *\n   * Generated by CMS.\n   */\n  id: number;\n\n  /**\n   * Date last updated as reported by CMS.\n   */\n  updated_at?: string;\n\n  /**\n   * Date created as reported by CMS.\n   */\n  created_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accounts\n                            \n                            \n                                buckets\n                            \n                            \n                                title\n                            \n                            \n                                transactions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                receiveNewTransaction\n                            \n                            \n                                receiveUpdatedTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(endpointService: EndpointService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        endpointService\n                                                  \n                                                        \n                                                                    EndpointService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injected service for communicating with API endpoints.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:41\n                            \n                        \n\n\n                \n                    \n                            On init, fetch transactions, accounts, and buckets data from API.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveNewTransaction\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveNewTransaction($event: Transaction)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:61\n                            \n                        \n\n\n                \n                    \n                            Pass new transaction to endpointService and subscribe to result.\nImportant to treat this.transactions as immutable so that update triggers change detection correctly.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        $event\n                                                        \n                                                                    Transaction\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                New transaction event.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveUpdatedTransaction\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveUpdatedTransaction($event: Transaction)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:78\n                            \n                        \n\n\n                \n                    \n                            [WIP]\n[TODO]\nPass edited transaction to endpointService and subscribe to result.\nImportant to treat this.transactions as immutable so that update triggers change detection correctly.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        $event\n                                                        \n                                                                    Transaction\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Updated transaction event.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accounts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        accounts:     Account[]\n\n                    \n                \n                    \n                        \n                            Type :     Account[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:26\n                            \n                        \n\n                \n                    \n                        App accounts data, array of Accounts retrieved from API via injected EndpointService.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buckets\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        buckets:     Bucket[]\n\n                    \n                \n                    \n                        \n                            Type :     Bucket[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:31\n                            \n                        \n\n                \n                    \n                        App buckets data, array of Buckets retrieved from API via injected EndpointService.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'balance'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:16\n                            \n                        \n\n                \n                    \n                        App title.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transactions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        transactions:     Transaction[]\n\n                    \n                \n                    \n                        \n                            Type :     Transaction[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:21\n                            \n                        \n\n                \n                    \n                        App transaction data, array of Transactions retrieved from API via injected EndpointService.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { Account, Bucket, PendingTransaction, Transaction } from './app.types';\n\nimport { EndpointService } from './endpoint.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  /**\n   * App title.\n   */\n  title = 'balance';\n\n  /**\n   * App transaction data, array of Transactions retrieved from API via injected `EndpointService`.\n   */\n  transactions: Transaction[];\n\n  /**\n   * App accounts data, array of Accounts retrieved from API via injected `EndpointService`.\n   */\n  accounts: Account[];\n\n  /**\n   * App buckets data, array of Buckets retrieved from API via injected `EndpointService`.\n   */\n  buckets: Bucket[];\n\n  /**\n   * @param endpointService Injected service for communicating with API endpoints.\n   */\n  constructor(private endpointService: EndpointService) {}\n\n  /**\n   * On init, fetch transactions, accounts, and buckets data from API.\n   */\n  ngOnInit() {\n    this.endpointService.readAll('/transactions/').subscribe(transactions => {\n      this.transactions = [].concat(transactions);\n    });\n\n    this.endpointService.readAll('/accounts/').subscribe(accounts => {\n      this.accounts = [].concat(accounts);\n    });\n\n    this.endpointService.readAll('/buckets/').subscribe(buckets => {\n      this.buckets = [].concat(buckets);\n    });\n  }\n\n  /**\n   * Pass new transaction to endpointService and subscribe to result.\n   *\n   * Important to treat `this.transactions` as immutable so that update triggers change detection correctly.\n   * @param $event New transaction event.\n   */\n  receiveNewTransaction($event: Transaction) {\n    this.endpointService\n      .create('/transactions/', $event)\n      .subscribe(newTransaction => {\n        this.transactions = this.transactions.concat(newTransaction);\n      });\n  }\n\n  /**\n   * [WIP]\n   * [TODO]\n   *\n   * Pass edited transaction to endpointService and subscribe to result.\n   *\n   * Important to treat `this.transactions` as immutable so that update triggers change detection correctly.\n   * @param $event Updated transaction event.\n   */\n  receiveUpdatedTransaction($event: Transaction) {\n    this.endpointService\n      .update('/transactions/', $event.id, $event)\n      .subscribe(updatedTransaction => {\n        /*\n         * Re-insert updated transaction at the correct location in\n         * the transactions array...tho this only preserves the ordering\n         * until the next client reload...might be unnecessary if client\n         * just defaults to order transactions by `id`, since cms sends\n         * in order of last modified...also an O(n) operation in the\n         * worst case so if it can go, get rid of it\n         */\n        let priorIndex;\n        let i;\n        const limit = this.transactions.length;\n        for (i = 0; i \n    \n\n    \n        \n  {{ title }}\n  attach_money -->\n  \n  \n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ title }}  attach_money -->    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditRowComponent', 'selector': 'app-edit-row'},{'name': 'QuickAddComponent', 'selector': 'app-quick-add'},{'name': 'TransactionsComponent', 'selector': 'app-transactions'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppMaterialModule.html":{"url":"modules/AppMaterialModule.html","title":"module - AppMaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    AppMaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-material/app-material.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {\n  MatInputModule,\n  MatDatepickerModule,\n  MatNativeDateModule,\n  MatIconModule,\n  MatDividerModule,\n  MatTableModule,\n  MatButtonModule,\n} from '@angular/material';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatIconModule,\n    MatDividerModule,\n    MatTableModule,\n    MatButtonModule,\n  ],\n  exports: [\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatIconModule,\n    MatDividerModule,\n    MatTableModule,\n    MatButtonModule,\n  ],\n  providers: [MatNativeDateModule],\n})\nexport class AppMaterialModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nEditRowComponent\n\nEditRowComponent\n\nAppModule -->\n\nEditRowComponent->AppModule\n\n\n\n\n\nQuickAddComponent\n\nQuickAddComponent\n\nAppModule -->\n\nQuickAddComponent->AppModule\n\n\n\n\n\nTransactionsComponent\n\nTransactionsComponent\n\nAppModule -->\n\nTransactionsComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppMaterialModule\n\nAppMaterialModule\n\nAppModule -->\n\nAppMaterialModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            EditRowComponent\n                        \n                        \n                            QuickAddComponent\n                        \n                        \n                            TransactionsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppMaterialModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppMaterialModule } from './app-material/app-material.module';\n\nimport { AppComponent } from './app.component';\nimport { QuickAddComponent } from './quick-add/quick-add.component';\nimport { TransactionsComponent } from './transactions/transactions.component';\nimport { EditRowComponent } from './edit-row/edit-row.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    QuickAddComponent,\n    TransactionsComponent,\n    EditRowComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    AppMaterialModule,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getParagraphText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getParagraphText\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetParagraphText()\n                    \n                \n\n\n                        \n                            \n                                    Defined in e2e/src/app.po.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigateTo\n                            \n                            \n                        \n                    \n                \n                \n                    \nnavigateTo()\n                    \n                \n\n\n                        \n                            \n                                    Defined in e2e/src/app.po.ts:4\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo() {\n    return browser.get('/');\n  }\n\n  getParagraphText() {\n    return element(by.css('app-root h1')).getText();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Bucket.html":{"url":"classes/Bucket.html","title":"class - Bucket","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Bucket\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.types.ts\n        \n\n            \n                Description\n            \n            \n                Concept for categorizing and tracking spend.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.types.ts:44\n                            \n                        \n\n                \n                    \n                        Unique bucket ID.\nGenerated by CMS.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.types.ts:51\n                            \n                        \n\n                \n                    \n                        Name of bucket.\n[TODO] Should not need to be unique; unfortunately, current implemntation relies on unique assumption. Dang.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Account {\n  /**\n   * Unique account ID.\n   *\n   * Generated by CMS.\n   */\n  id: number;\n\n  /**\n   * Name of account.\n   *\n   * [TODO] Should not need to be unique, but current implementation relies on unique assumption. Whoops.\n   */\n  name: string;\n\n  /**\n   * Details, notes, or description of account.\n   */\n  details: string | null;\n\n  /**\n   * Account type.\n   */\n  type: 'checking' | 'savings' | 'credit' | 'loan' | null;\n\n  /**\n   * Account starting balance which Transaction credits and debits are applied against.\n   */\n  initialBalance: number;\n}\n\n/**\n * Concept for categorizing and tracking spend.\n */\nexport class Bucket {\n  /**\n   * Unique bucket ID.\n   *\n   * Generated by CMS.\n   */\n  id: number;\n\n  /**\n   * Name of bucket.\n   *\n   * [TODO] Should not need to be unique; unfortunately, current implemntation relies on unique assumption. Dang.\n   */\n  name: string;\n}\n\n/**\n * A transaction which has not yet been submitted to API and assigned an ID.\n */\nexport class PendingTransaction {\n  /**\n   * Short name for the transaction.\n   */\n  name: string;\n\n  /**\n   * Value of the transaction.\n   */\n  amount: number;\n\n  /**\n   * Details, notes, or description of the transaction.\n   */\n  details: string;\n\n  /**\n   * Date the transaction is due.\n   */\n  due: string;\n\n  /**\n   * Date the transaction is/was scheduled/for.\n   */\n  scheduled: string;\n\n  /**\n   * Date the transcation is/was effective.\n   */\n  effective: string;\n\n  /**\n   * Account from which the transaction value is deducted.\n   */\n  fromAccount: any;\n\n  /**\n   * Account to which the transaction value is added.\n   */\n  toAccount: any;\n\n  /**\n   * Tracking bucket that the transaction should belong to.\n   */\n  bucket: any;\n}\n\n/**\n * A transaction which already exists in the CMS and has an ID.\n */\nexport class Transaction extends PendingTransaction {\n  /**\n   * Unique transaction ID.\n   *\n   * Generated by CMS.\n   */\n  id: number;\n\n  /**\n   * Date last updated as reported by CMS.\n   */\n  updated_at?: string;\n\n  /**\n   * Date created as reported by CMS.\n   */\n  created_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditRowComponent.html":{"url":"components/EditRowComponent.html","title":"component - EditRowComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditRowComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/edit-row/edit-row.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-row\n            \n\n            \n                styleUrls\n                ./edit-row.component.css\n            \n\n\n\n            \n                templateUrl\n                ./edit-row.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                accounts\n                            \n                            \n                                buckets\n                            \n                            \n                                editColumns\n                            \n                            \n                                editForm\n                            \n                            \n                                editTableSource\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/edit-row/edit-row.component.ts:35\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        accounts\n                    \n                    \n                        List of Accounts which the user may select from.\n\n                            \n                            Type :    Account[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/edit-row/edit-row.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        buckets\n                    \n                    \n                        List of Buckets which the user may select from.\n\n                            \n                            Type :    Bucket[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/edit-row/edit-row.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        editColumns\n                    \n                    \n                        List of columns for display.\n\n                            \n                            Type :    string[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/edit-row/edit-row.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        editForm\n                    \n                    \n                        [TODO] Form group...yo wait should this be an input at all? This might be a total change to the current architecture.\n\n                            \n                            Type :    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/edit-row/edit-row.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        editTableSource\n                    \n                    \n                        [TODO] Transactions data, table data source.\n\n                            \n                            Type :    MatTableDataSource\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/edit-row/edit-row.component.ts:35\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-row/edit-row.component.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, Input, OnInit, EventEmitter } from '@angular/core';\nimport { FormGroup, FormControl, Validators, NgForm } from '@angular/forms';\nimport { MatTableDataSource } from '@angular/material';\nimport { Account, Bucket, PendingTransaction, Transaction } from '../app.types';\n\n@Component({\n  selector: 'app-edit-row',\n  templateUrl: './edit-row.component.html',\n  styleUrls: ['./edit-row.component.css'],\n})\nexport class EditRowComponent implements OnInit {\n  /**\n   * List of Accounts which the user may select from.\n   */\n  @Input() accounts: Account[];\n\n  /**\n   * List of Buckets which the user may select from.\n   */\n  @Input() buckets: Bucket[];\n\n  /**\n   * List of columns for display.\n   */\n  @Input() editColumns: string[];\n\n  /**\n   * [TODO] Form group...yo wait should this be an input at all? This might be a total change to the current architecture.\n   */\n  @Input() editForm: FormGroup;\n\n  /**\n   * [TODO] Transactions data, table data source.\n   */\n  @Input() editTableSource: MatTableDataSource;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n  \n    \n       name  -->\n      \n        \n          name\n          \n          Required*\n        \n      \n    \n\n    \n       amount  -->\n      \n        \n          amount\n          \n          $&nbsp;\n          Must be valid decimal, USD*\n        \n      \n    \n\n    \n       details  -->\n      \n        \n          details\n          \n        \n      \n    \n\n    \n       due  -->\n      \n        \n          due\n          \n          \n          \n          Must be MM/DD/YYYY*\n        \n      \n    \n\n    \n       scheduled  -->\n      \n        \n          scheduled\n          \n          \n          \n          Must be MM/DD/YYYY*\n        \n      \n    \n\n    \n       effective  -->\n      \n        \n          effective\n          \n          \n          \n          Must be MM/DD/YYYY*\n        \n      \n    \n\n    \n       from  -->\n      \n        \n          from\n          \n            \n            {{\n              option.name\n            }}\n          \n        \n      \n    \n\n    \n       to  -->\n      \n        \n          to\n          \n            \n            {{\n              option.name\n            }}\n          \n        \n      \n    \n\n    \n       bucket  -->\n      \n        \n          bucket\n          \n            \n            {{\n              option.name\n            }}\n          \n        \n      \n    \n\n     -->\n    \n  \n\n\n    \n\n    \n                \n                    ./edit-row.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             name  -->                        name                    Required*                             amount  -->                        amount                    $           Must be valid decimal, USD*                             details  -->                        details                                       due  -->                        due                                        Must be MM/DD/YYYY*                             scheduled  -->                        scheduled                                        Must be MM/DD/YYYY*                             effective  -->                        effective                                        Must be MM/DD/YYYY*                             from  -->                        from                                  {{              option.name            }}                                       to  -->                        to                                  {{              option.name            }}                                       bucket  -->                        bucket                                  {{              option.name            }}                                 -->      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditRowComponent', 'selector': 'app-edit-row'},{'name': 'QuickAddComponent', 'selector': 'app-quick-add'},{'name': 'TransactionsComponent', 'selector': 'app-transactions'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditRowComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EndpointService.html":{"url":"injectables/EndpointService.html","title":"injectable - EndpointService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EndpointService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/endpoint.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseURL\n                            \n                            \n                                    Private\n                                port\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                read\n                            \n                            \n                                readAll\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/endpoint.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreate(path: string, newNoun: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/endpoint.service.ts:53\n                            \n                        \n\n\n                \n                    \n                            Generic API request to create a given object.\n[TODO] Will eventually need to auth these requests somehow.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        path\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Path from the base\n\n                                                        \n                                                \n                                                \n                                                        newNoun\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                New object to create.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    Observable result of http POST.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleError(error: HttpErrorResponse)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/endpoint.service.ts:30\n                            \n                        \n\n\n                \n                    \n                            [TODO] Lifted from angular docs, needs work for our context.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    HttpErrorResponse\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Error to handle from http response.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            read\n                            \n                            \n                        \n                    \n                \n                \n                    \nread(path: string, id: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/endpoint.service.ts:90\n                            \n                        \n\n\n                \n                    \n                            Request a specific instance of a given type.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        path\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                API type path.\n\n                                                        \n                                                \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                ID of item to fetch.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    Observable result of http GET.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            readAll\n                            \n                            \n                        \n                    \n                \n                \n                    \nreadAll(path: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/endpoint.service.ts:76\n                            \n                        \n\n\n                \n                    \n                            Request all of a given type.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        path\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                API type path.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    Observable result of http GET.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate(path: string, id: number, newNoun: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/endpoint.service.ts:107\n                            \n                        \n\n\n                \n                    \n                            Update an existing instance of a given type.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        path\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                API type path.\n\n                                                        \n                                                \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                ID of item to update.\n\n                                                        \n                                                \n                                                \n                                                        newNoun\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Updated item.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    Observable result of http POST.\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseURL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        baseURL:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/endpoint.service.ts:17\n                            \n                        \n\n                \n                    \n                        Protocol and host for API requests.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            port\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        port:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '1337'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/endpoint.service.ts:22\n                            \n                        \n\n                \n                    \n                        Port for API requests.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpClient,\n  HttpHeaders,\n  HttpErrorResponse,\n} from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { throwError, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EndpointService {\n  /**\n   * Protocol and host for API requests.\n   */\n  private baseURL = 'http://localhost';\n\n  /**\n   * Port for API requests.\n   */\n  private port = '1337';\n\n  constructor(private http: HttpClient) {}\n\n  /**\n   * [TODO] Lifted from angular docs, needs work for our context.\n   * @param error Error to handle from http response.\n   */\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` + `body was: ${error.error}`\n      );\n    }\n    // return an observable with a user-facing error message\n    return throwError('Something bad happened; please try again later.');\n  }\n\n  /**\n   * Generic API request to create a given object.\n   *\n   * [TODO] Will eventually need to auth these requests somehow.\n   * @param path Path from the base\n   * @param newNoun New object to create.\n   * @returns Observable result of http POST.\n   */\n  create(path: string, newNoun: any) {\n    const endpoint =\n      this.baseURL +\n      (this.port == null || this.port === '' ? '' : `:${this.port}`) +\n      path;\n    const httpOptions = {\n      // TODO: headers to eventually provide authentication for all GET's and POST's\n      // headers: new HttpHeaders({\n      //   'Content-Type':  'application/json',\n      //   'Authorization': 'my-auth-token',\n      // })\n    };\n\n    return this.http\n      .post(endpoint, newNoun, httpOptions)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Request all of a given type.\n   * @param path API type path.\n   * @returns Observable result of http GET.\n   */\n  readAll(path: string) {\n    const endpoint =\n      this.baseURL +\n      (this.port == null || this.port === '' ? '' : `:${this.port}`) +\n      path;\n    return this.http.get(endpoint);\n  }\n\n  /**\n   * Request a specific instance of a given type.\n   * @param path API type path.\n   * @param id ID of item to fetch.\n   * @returns Observable result of http GET.\n   */\n  read(path: string, id: number) {\n    const endpoint =\n      this.baseURL +\n      (this.port == null || this.port === '' ? '' : `:${this.port}`) +\n      path +\n      id +\n      '/';\n    return this.http.get(endpoint);\n  }\n\n  /**\n   * Update an existing instance of a given type.\n   * @param path API type path.\n   * @param id ID of item to update.\n   * @param newNoun Updated item.\n   * @returns Observable result of http POST.\n   */\n  update(path: string, id: number, newNoun: any) {\n    const endpoint =\n      this.baseURL +\n      (this.port == null || this.port === '' ? '' : `:${this.port}`) +\n      path +\n      id +\n      '/';\n    const httpOptions = {};\n\n    return this.http\n      .put(endpoint, newNoun, httpOptions)\n      .pipe(catchError(this.handleError));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PendingTransaction.html":{"url":"classes/PendingTransaction.html","title":"class - PendingTransaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PendingTransaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.types.ts\n        \n\n            \n                Description\n            \n            \n                A transaction which has not yet been submitted to API and assigned an ID.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                bucket\n                            \n                            \n                                details\n                            \n                            \n                                due\n                            \n                            \n                                effective\n                            \n                            \n                                fromAccount\n                            \n                            \n                                name\n                            \n                            \n                                scheduled\n                            \n                            \n                                toAccount\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            amount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        amount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.types.ts:66\n                            \n                        \n\n                \n                    \n                        Value of the transaction.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bucket\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bucket:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.types.ts:101\n                            \n                        \n\n                \n                    \n                        Tracking bucket that the transaction should belong to.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            details\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        details:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.types.ts:71\n                            \n                        \n\n                \n                    \n                        Details, notes, or description of the transaction.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            due\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        due:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.types.ts:76\n                            \n                        \n\n                \n                    \n                        Date the transaction is due.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effective\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        effective:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.types.ts:86\n                            \n                        \n\n                \n                    \n                        Date the transcation is/was effective.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fromAccount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fromAccount:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.types.ts:91\n                            \n                        \n\n                \n                    \n                        Account from which the transaction value is deducted.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.types.ts:61\n                            \n                        \n\n                \n                    \n                        Short name for the transaction.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scheduled\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        scheduled:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.types.ts:81\n                            \n                        \n\n                \n                    \n                        Date the transaction is/was scheduled/for.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toAccount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toAccount:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.types.ts:96\n                            \n                        \n\n                \n                    \n                        Account to which the transaction value is added.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Account {\n  /**\n   * Unique account ID.\n   *\n   * Generated by CMS.\n   */\n  id: number;\n\n  /**\n   * Name of account.\n   *\n   * [TODO] Should not need to be unique, but current implementation relies on unique assumption. Whoops.\n   */\n  name: string;\n\n  /**\n   * Details, notes, or description of account.\n   */\n  details: string | null;\n\n  /**\n   * Account type.\n   */\n  type: 'checking' | 'savings' | 'credit' | 'loan' | null;\n\n  /**\n   * Account starting balance which Transaction credits and debits are applied against.\n   */\n  initialBalance: number;\n}\n\n/**\n * Concept for categorizing and tracking spend.\n */\nexport class Bucket {\n  /**\n   * Unique bucket ID.\n   *\n   * Generated by CMS.\n   */\n  id: number;\n\n  /**\n   * Name of bucket.\n   *\n   * [TODO] Should not need to be unique; unfortunately, current implemntation relies on unique assumption. Dang.\n   */\n  name: string;\n}\n\n/**\n * A transaction which has not yet been submitted to API and assigned an ID.\n */\nexport class PendingTransaction {\n  /**\n   * Short name for the transaction.\n   */\n  name: string;\n\n  /**\n   * Value of the transaction.\n   */\n  amount: number;\n\n  /**\n   * Details, notes, or description of the transaction.\n   */\n  details: string;\n\n  /**\n   * Date the transaction is due.\n   */\n  due: string;\n\n  /**\n   * Date the transaction is/was scheduled/for.\n   */\n  scheduled: string;\n\n  /**\n   * Date the transcation is/was effective.\n   */\n  effective: string;\n\n  /**\n   * Account from which the transaction value is deducted.\n   */\n  fromAccount: any;\n\n  /**\n   * Account to which the transaction value is added.\n   */\n  toAccount: any;\n\n  /**\n   * Tracking bucket that the transaction should belong to.\n   */\n  bucket: any;\n}\n\n/**\n * A transaction which already exists in the CMS and has an ID.\n */\nexport class Transaction extends PendingTransaction {\n  /**\n   * Unique transaction ID.\n   *\n   * Generated by CMS.\n   */\n  id: number;\n\n  /**\n   * Date last updated as reported by CMS.\n   */\n  updated_at?: string;\n\n  /**\n   * Date created as reported by CMS.\n   */\n  created_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuickAddComponent.html":{"url":"components/QuickAddComponent.html","title":"component - QuickAddComponent","body":"\n                   \n\n\n\n\n\n  Components\n  QuickAddComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/quick-add/quick-add.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-quick-add\n            \n\n            \n                styleUrls\n                ./quick-add.component.css\n            \n\n\n\n            \n                templateUrl\n                ./quick-add.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                editRowComponent\n                            \n                            \n                                    Private\n                                initialAddValues\n                            \n                            \n                                newTransaction\n                            \n                            \n                                quickAddColumns\n                            \n                            \n                                quickAddTableSource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getAccount\n                            \n                            \n                                    Private\n                                getBucket\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onAdd\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                accounts\n                            \n                            \n                                buckets\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                transactionAddedEvent\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/quick-add/quick-add.component.ts:114\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        accounts\n                    \n                    \n                        List of Accounts which the user may select from.\n\n                            \n                            Type :    Account[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/quick-add/quick-add.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        buckets\n                    \n                    \n                        List of Buckets which the user may select from.\n\n                            \n                            Type :    Bucket[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/quick-add/quick-add.component.ts:31\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        transactionAddedEvent\n                    \n                    \n                        Emit event with details of a new transaction.\n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/quick-add/quick-add.component.ts:36\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getAccount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAccount(name: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/quick-add/quick-add.component.ts:161\n                            \n                        \n\n\n                \n                    \n                            Map account name back to Account object.\n[TODO] Refactor to avoid searching names list.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Account name.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    Account with the given name.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getBucket\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBucket(name: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/quick-add/quick-add.component.ts:179\n                            \n                        \n\n\n                \n                    \n                            Map bucket name back to Bucket object.\n[TODO] Refactor to avoid searching names list.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Bucket name.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    Bucket with the given name.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/quick-add/quick-add.component.ts:118\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onAdd\n                            \n                            \n                        \n                    \n                \n                \n                    \nonAdd()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/quick-add/quick-add.component.ts:123\n                            \n                        \n\n\n                \n                    \n                            [TODO] Receive new transaction from transactionEditEvent, pass thru to parent.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            editRowComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editRowComponent:     EditRowComponent\n\n                    \n                \n                    \n                        \n                            Type :     EditRowComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(EditRowComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/quick-add/quick-add.component.ts:43\n                            \n                        \n\n                \n                    \n                        [TODO] Reference to form in app-edit-row child.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initialAddValues\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        initialAddValues:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      name: null,\n      amount: null,\n      details: null,\n      due: null,\n      scheduled: null,\n      effective: null,\n      fromAccount: null,\n      toAccount: null,\n      bucket: null,\n    },\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/quick-add/quick-add.component.ts:81\n                            \n                        \n\n                \n                    \n                        [TODO] Initial values for new transaction table.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newTransaction\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        newTransaction:     \n\n                    \n                \n                    \n                        \n                            Default value : new FormGroup({\n    name: new FormControl(null, {\n      validators: [],\n    }),\n    amount: new FormControl(null, {\n      validators: [Validators.pattern(/^-?\\d+(\\.?\\d{1,2})?$/)],\n    }),\n    details: new FormControl(null, {\n      validators: [],\n    }),\n    due: new FormControl(null, {\n      validators: [],\n    }),\n    scheduled: new FormControl(null, {\n      validators: [],\n    }),\n    effective: new FormControl(null, {\n      validators: [],\n    }),\n    fromAccount: new FormControl(null, {\n      validators: [],\n    }),\n    toAccount: new FormControl(null, {\n      validators: [],\n    }),\n    bucket: new FormControl(null, {\n      validators: [],\n    }),\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/quick-add/quick-add.component.ts:48\n                            \n                        \n\n                \n                    \n                        [TODO] Form controls...\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            quickAddColumns\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        quickAddColumns:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    'name',\n    'amount',\n    'details',\n    'due',\n    'scheduled',\n    'effective',\n    'fromAccount',\n    'toAccount',\n    'bucket',\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/quick-add/quick-add.component.ts:104\n                            \n                        \n\n                \n                    \n                        Columns to display in new transaction table.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            quickAddTableSource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        quickAddTableSource:     MatTableDataSource\n\n                    \n                \n                    \n                        \n                            Type :     MatTableDataSource\n\n                        \n                    \n                    \n                        \n                            Default value : new MatTableDataSource(this.initialAddValues)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/quick-add/quick-add.component.ts:97\n                            \n                        \n\n                \n                    \n                        Source for new transaction table.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  OnInit,\n  Output,\n  EventEmitter,\n  SimpleChanges,\n  ViewChild,\n} from '@angular/core';\nimport { FormGroup, FormControl, Validators, NgForm } from '@angular/forms';\nimport { MatTableDataSource } from '@angular/material';\n\nimport { Account, Bucket, PendingTransaction, Transaction } from '../app.types';\n\nimport { EditRowComponent } from '../edit-row/edit-row.component';\n\n@Component({\n  selector: 'app-quick-add',\n  templateUrl: './quick-add.component.html',\n  styleUrls: ['./quick-add.component.css'],\n})\nexport class QuickAddComponent implements OnInit {\n  /**\n   * List of Accounts which the user may select from.\n   */\n  @Input() accounts: Account[];\n\n  /**\n   * List of Buckets which the user may select from.\n   */\n  @Input() buckets: Bucket[];\n\n  /**\n   * Emit event with details of a new transaction.\n   */\n  @Output() public transactionAddedEvent: EventEmitter = new EventEmitter();\n\n  /**\n   * [TODO] Reference to form in `app-edit-row` child.\n   */\n  @ViewChild(EditRowComponent) private editRowComponent: EditRowComponent;\n\n  /**\n   * [TODO] Form controls...\n   */\n  newTransaction = new FormGroup({\n    name: new FormControl(null, {\n      validators: [],\n    }),\n    amount: new FormControl(null, {\n      validators: [Validators.pattern(/^-?\\d+(\\.?\\d{1,2})?$/)],\n    }),\n    details: new FormControl(null, {\n      validators: [],\n    }),\n    due: new FormControl(null, {\n      validators: [],\n    }),\n    scheduled: new FormControl(null, {\n      validators: [],\n    }),\n    effective: new FormControl(null, {\n      validators: [],\n    }),\n    fromAccount: new FormControl(null, {\n      validators: [],\n    }),\n    toAccount: new FormControl(null, {\n      validators: [],\n    }),\n    bucket: new FormControl(null, {\n      validators: [],\n    }),\n  });\n\n  /**\n   * [TODO] Initial values for new transaction table.\n   */\n  private initialAddValues = [\n    {\n      name: null,\n      amount: null,\n      details: null,\n      due: null,\n      scheduled: null,\n      effective: null,\n      fromAccount: null,\n      toAccount: null,\n      bucket: null,\n    },\n  ];\n  /**\n   * Source for new transaction table.\n   */\n  quickAddTableSource: MatTableDataSource = new MatTableDataSource(this.initialAddValues);\n\n  /**\n   * Columns to display in new transaction table.\n   */\n  quickAddColumns: string[] = [\n    'name',\n    'amount',\n    'details',\n    'due',\n    'scheduled',\n    'effective',\n    'fromAccount',\n    'toAccount',\n    'bucket',\n  ];\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  /**\n   * [TODO] Receive new transaction from `transactionEditEvent`, pass thru to parent.\n   */\n  onAdd() {\n    const formGroup = this.editRowComponent.editForm;\n    const formValues = formGroup.value;\n\n    // TODO: lol this form is never invalid tho\n    if (!formGroup.invalid) {\n      const freshTransaction = {\n        name: formValues.name,\n        amount: formValues.amount,\n        details: formValues.details,\n        due: formValues.due ? formValues.due.toLocaleDateString() : null,\n        scheduled: formValues.scheduled\n          ? formValues.scheduled.toLocaleDateString()\n          : null,\n        effective: formValues.effective\n          ? formValues.effective.toLocaleDateString()\n          : null,\n        fromAccount: formValues.fromAccount\n          ? this.getAccount(formValues.fromAccount)\n          : null,\n        toAccount: formValues.toAccount\n          ? this.getAccount(formValues.toAccount)\n          : null,\n        bucket: formValues.bucket ? this.getBucket(formValues.bucket) : null,\n      };\n\n      this.transactionAddedEvent.emit(freshTransaction);\n      formGroup.reset();\n    }\n  }\n\n  /**\n   * Map account name back to Account object.\n   *\n   * [TODO] Refactor to avoid searching names list.\n   * @param name Account name.\n   * @returns Account with the given name.\n   */\n  private getAccount(name: string) {\n    let account = null;\n    this.accounts.forEach(item => {\n      if (item.name === name) {\n        account = item;\n        return;\n      }\n    });\n    return account;\n  }\n\n  /**\n   * Map bucket name back to Bucket object.\n   *\n   * [TODO] Refactor to avoid searching names list.\n   * @param name Bucket name.\n   * @returns Bucket with the given name.\n   */\n  private getBucket(name: string) {\n    let bucket = null;\n    this.buckets.forEach(item => {\n      if (item.name === name) {\n        bucket = item;\n        return;\n      }\n    });\n    return bucket;\n  }\n}\n\n    \n\n    \n        \n  quick add\n  \n    \n    add\n  \n\n\n    \n\n    \n                \n                    ./quick-add.component.css\n                \n                .quick-add {\n  display: block;\n  width: 100%;\n}\n\n.quick-add .quick-add-form {\n  display: block;\n  width: 100%;\n  text-align: right;\n}\n\n.quick-add table {\n  width: 100%;\n}\n\n.quick-add table td {\n  text-align: left;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  quick add          add  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditRowComponent', 'selector': 'app-edit-row'},{'name': 'QuickAddComponent', 'selector': 'app-quick-add'},{'name': 'TransactionsComponent', 'selector': 'app-transactions'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QuickAddComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Transaction.html":{"url":"classes/Transaction.html","title":"class - Transaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Transaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.types.ts\n        \n\n            \n                Description\n            \n            \n                A transaction which already exists in the CMS and has an ID.\n\n            \n\n            \n                Extends\n            \n            \n                    PendingTransaction\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                created_at\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                updated_at\n                            \n                            \n                                amount\n                            \n                            \n                                bucket\n                            \n                            \n                                details\n                            \n                            \n                                due\n                            \n                            \n                                effective\n                            \n                            \n                                fromAccount\n                            \n                            \n                                name\n                            \n                            \n                                scheduled\n                            \n                            \n                                toAccount\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            created_at\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        created_at:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.types.ts:123\n                            \n                        \n\n                \n                    \n                        Date created as reported by CMS.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.types.ts:113\n                            \n                        \n\n                \n                    \n                        Unique transaction ID.\nGenerated by CMS.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updated_at\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        updated_at:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.types.ts:118\n                            \n                        \n\n                \n                    \n                        Date last updated as reported by CMS.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            amount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        amount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                            \n                                \n                                    Inherited from     PendingTransaction\n\n                                \n                            \n                        \n                            \n                                    Defined in PendingTransaction:66\n                            \n                        \n\n                \n                    \n                        Value of the transaction.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bucket\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bucket:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                            \n                                \n                                    Inherited from     PendingTransaction\n\n                                \n                            \n                        \n                            \n                                    Defined in PendingTransaction:101\n                            \n                        \n\n                \n                    \n                        Tracking bucket that the transaction should belong to.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            details\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        details:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     PendingTransaction\n\n                                \n                            \n                        \n                            \n                                    Defined in PendingTransaction:71\n                            \n                        \n\n                \n                    \n                        Details, notes, or description of the transaction.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            due\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        due:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     PendingTransaction\n\n                                \n                            \n                        \n                            \n                                    Defined in PendingTransaction:76\n                            \n                        \n\n                \n                    \n                        Date the transaction is due.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effective\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        effective:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     PendingTransaction\n\n                                \n                            \n                        \n                            \n                                    Defined in PendingTransaction:86\n                            \n                        \n\n                \n                    \n                        Date the transcation is/was effective.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fromAccount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fromAccount:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                            \n                                \n                                    Inherited from     PendingTransaction\n\n                                \n                            \n                        \n                            \n                                    Defined in PendingTransaction:91\n                            \n                        \n\n                \n                    \n                        Account from which the transaction value is deducted.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     PendingTransaction\n\n                                \n                            \n                        \n                            \n                                    Defined in PendingTransaction:61\n                            \n                        \n\n                \n                    \n                        Short name for the transaction.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scheduled\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        scheduled:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     PendingTransaction\n\n                                \n                            \n                        \n                            \n                                    Defined in PendingTransaction:81\n                            \n                        \n\n                \n                    \n                        Date the transaction is/was scheduled/for.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toAccount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toAccount:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                            \n                                \n                                    Inherited from     PendingTransaction\n\n                                \n                            \n                        \n                            \n                                    Defined in PendingTransaction:96\n                            \n                        \n\n                \n                    \n                        Account to which the transaction value is added.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Account {\n  /**\n   * Unique account ID.\n   *\n   * Generated by CMS.\n   */\n  id: number;\n\n  /**\n   * Name of account.\n   *\n   * [TODO] Should not need to be unique, but current implementation relies on unique assumption. Whoops.\n   */\n  name: string;\n\n  /**\n   * Details, notes, or description of account.\n   */\n  details: string | null;\n\n  /**\n   * Account type.\n   */\n  type: 'checking' | 'savings' | 'credit' | 'loan' | null;\n\n  /**\n   * Account starting balance which Transaction credits and debits are applied against.\n   */\n  initialBalance: number;\n}\n\n/**\n * Concept for categorizing and tracking spend.\n */\nexport class Bucket {\n  /**\n   * Unique bucket ID.\n   *\n   * Generated by CMS.\n   */\n  id: number;\n\n  /**\n   * Name of bucket.\n   *\n   * [TODO] Should not need to be unique; unfortunately, current implemntation relies on unique assumption. Dang.\n   */\n  name: string;\n}\n\n/**\n * A transaction which has not yet been submitted to API and assigned an ID.\n */\nexport class PendingTransaction {\n  /**\n   * Short name for the transaction.\n   */\n  name: string;\n\n  /**\n   * Value of the transaction.\n   */\n  amount: number;\n\n  /**\n   * Details, notes, or description of the transaction.\n   */\n  details: string;\n\n  /**\n   * Date the transaction is due.\n   */\n  due: string;\n\n  /**\n   * Date the transaction is/was scheduled/for.\n   */\n  scheduled: string;\n\n  /**\n   * Date the transcation is/was effective.\n   */\n  effective: string;\n\n  /**\n   * Account from which the transaction value is deducted.\n   */\n  fromAccount: any;\n\n  /**\n   * Account to which the transaction value is added.\n   */\n  toAccount: any;\n\n  /**\n   * Tracking bucket that the transaction should belong to.\n   */\n  bucket: any;\n}\n\n/**\n * A transaction which already exists in the CMS and has an ID.\n */\nexport class Transaction extends PendingTransaction {\n  /**\n   * Unique transaction ID.\n   *\n   * Generated by CMS.\n   */\n  id: number;\n\n  /**\n   * Date last updated as reported by CMS.\n   */\n  updated_at?: string;\n\n  /**\n   * Date created as reported by CMS.\n   */\n  created_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TransactionsComponent.html":{"url":"components/TransactionsComponent.html","title":"component - TransactionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TransactionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/transactions/transactions.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnChanges\n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-transactions\n            \n\n            \n                styleUrls\n                ./transactions.component.css\n            \n\n\n\n            \n                templateUrl\n                ./transactions.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                transactionsColumns\n                            \n                            \n                                transactionTableSource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCellClick\n                            \n                            \n                                receiveEditTransaction\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                accounts\n                            \n                            \n                                buckets\n                            \n                            \n                                transactions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                transactionUpdatedEvent\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/transactions/transactions.component.ts:63\n                            \n                        \n\n                \n                    \n                            [TODO] the below represent an approach to edit-in-place which figured maybe we could reuse a single instance of EditRowComponent for whichever transaction row is \"active\" for editing...still a viable idea, performance would suffer pretty fast in an implementation with an EditRowComponent for every row, active or not...need to flesh out.\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        accounts\n                    \n                    \n                        List of Accounts which the user may select from.\n\n                            \n                            Type :    Account[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/transactions/transactions.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        buckets\n                    \n                    \n                        List of Buckets which the user may select from.\n\n                            \n                            Type :    Bucket[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/transactions/transactions.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        transactions\n                    \n                    \n                        List of Transactions.\n\n                            \n                            Type :    Transaction[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/transactions/transactions.component.ts:35\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        transactionUpdatedEvent\n                    \n                    \n                        [TODO] Emit event with details of updated transaction.\n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/transactions/transactions.component.ts:40\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/transactions/transactions.component.ts:133\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/transactions/transactions.component.ts:131\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onCellClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonCellClick(cellData: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/transactions/transactions.component.ts:152\n                            \n                        \n\n\n                \n                    \n                            [TODO] implement click on row.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cellData\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveEditTransaction\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveEditTransaction($event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/transactions/transactions.component.ts:160\n                            \n                        \n\n\n                \n                    \n                            [TODO] implement the rest of this\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        $event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Event for an edit to a transaction.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transactionsColumns\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        transactionsColumns:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    // 'id',\n    'name',\n    'amount',\n    'details',\n    'due',\n    'scheduled',\n    'effective',\n    'fromAccount',\n    'toAccount',\n    'bucket',\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/transactions/transactions.component.ts:52\n                            \n                        \n\n                \n                    \n                        Transactions table columns.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transactionTableSource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        transactionTableSource:     \n\n                    \n                \n                    \n                        \n                            Default value : new MatTableDataSource(this.transactions)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/transactions/transactions.component.ts:47\n                            \n                        \n\n                \n                    \n                        Data source for transactions table.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  OnChanges,\n  Output,\n  Input,\n  SimpleChanges,\n  OnInit,\n} from '@angular/core';\nimport { MatTableDataSource } from '@angular/material';\nimport { FormGroup, FormControl, Validators, NgForm } from '@angular/forms';\n\nimport { EditRowComponent } from '../edit-row/edit-row.component';\nimport { Account, Bucket, Transaction, PendingTransaction } from '../app.types';\n\n@Component({\n  selector: 'app-transactions',\n  templateUrl: './transactions.component.html',\n  styleUrls: ['./transactions.component.css'],\n})\nexport class TransactionsComponent implements OnChanges, OnInit {\n  /**\n   * List of Accounts which the user may select from.\n   */\n  @Input() accounts: Account[];\n\n  /**\n   * List of Buckets which the user may select from.\n   */\n  @Input() buckets: Bucket[];\n\n  /**\n   * List of Transactions.\n   */\n  @Input() transactions: Transaction[];\n\n  /**\n   * [TODO] Emit event with details of updated transaction.\n   */\n  @Output() public transactionUpdatedEvent: EventEmitter = new EventEmitter();\n\n  /**\n   * Data source for transactions table.\n   */\n  transactionTableSource = new MatTableDataSource(this.transactions);\n\n  /**\n   * Transactions table columns.\n   */\n  transactionsColumns: string[] = [\n    // 'id',\n    'name',\n    'amount',\n    'details',\n    'due',\n    'scheduled',\n    'effective',\n    'fromAccount',\n    'toAccount',\n    'bucket',\n  ];\n\n  // tslint:disable max-line-length\n  /**\n   * [TODO] the below represent an approach to edit-in-place which figured maybe we could reuse a single instance of EditRowComponent for whichever transaction row is \"active\" for editing...still a viable idea, performance would suffer pretty fast in an implementation with an EditRowComponent for every row, active or not...need to flesh out.\n   * */\n  // private initialAddValues = [\n  //   {\n  //     name: null,\n  //     amount: null,\n  //     details: null,\n  //     due: null,\n  //     scheduled: null,\n  //     effective: null,\n  //     fromAccount: null,\n  //     toAccount: null,\n  //     bucket: null,\n  //   },\n  // ];\n\n  // singletonTableSource: MatTableDataSource = new MatTableDataSource(this.initialAddValues);\n\n  // singletonColumns: string[] = [\n  //   'name',\n  //   'amount',\n  //   'details',\n  //   'due',\n  //   'scheduled',\n  //   'effective',\n  //   'fromAccount',\n  //   'toAccount',\n  //   'bucket',\n  // ];\n\n  // transactionsFormGroup = new FormGroup({\n  //   name: new FormControl(null, {\n  //     validators: [],\n  //   }),\n  //   amount: new FormControl(null, {\n  //     validators: [Validators.pattern(/^-?\\d+(\\.?\\d{1,2})?$/)],\n  //   }),\n  //   details: new FormControl(null, {\n  //     validators: [],\n  //   }),\n  //   due: new FormControl(null, {\n  //     validators: [],\n  //   }),\n  //   scheduled: new FormControl(null, {\n  //     validators: [],\n  //   }),\n  //   effective: new FormControl(null, {\n  //     validators: [],\n  //   }),\n  //   fromAccount: new FormControl(null, {\n  //     validators: [],\n  //   }),\n  //   toAccount: new FormControl(null, {\n  //     validators: [],\n  //   }),\n  //   bucket: new FormControl(null, {\n  //     validators: [],\n  //   }),\n  // });\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.transactionTableSource.data = this.transactions;\n  }\n\n  /**\n   * [TODO] implement click on row.\n   */\n  // onRowClick(rowData: any) {\n  //   console.log('row click:', rowData);\n  //   const updatedRow = rowData;\n  //   updatedRow.details = rowData.details + '...updated!';\n\n  //   this.transactionUpdatedEvent.emit(updatedRow);\n  // }\n\n  /**\n   * [TODO] on cell click, enable that data for editing?\n   * @param cellData Table data from clicked cell.\n   */\n  onCellClick(cellData: any) {\n    console.log('cell click:', cellData);\n  }\n\n  /**\n   * [TODO] implement the rest of this\n   * @param $event Event for an edit to a transaction.\n   */\n  receiveEditTransaction($event) {\n    console.log('editing:', $event);\n    this.transactionUpdatedEvent.emit($event);\n  }\n}\n\n    \n\n    \n        \n  transactions\n  \n    \n\n    \n    \n      id\n      {{ element.id }}\n    \n\n    \n    \n      name\n      {{ element.name }}\n    \n\n    \n    \n      amount\n      \n        {{ element.amount | currency: 'USD' }}\n      \n    \n\n    \n    \n      details\n      {{ element.details }}\n    \n\n    \n    \n      due\n      \n        {{ element.due | date: 'MM/dd' }}\n      \n    \n\n    \n    \n      scheduled\n      \n        {{ element.scheduled | date: 'MM/dd' }}\n      \n    \n\n    \n    \n      effective\n      \n        {{ element.effective | date: 'MM/dd' }}\n      \n    \n\n    \n    \n      fromAccount\n      \n        {{ element.fromAccount?.name }}\n      \n    \n\n    \n    \n      toAccount\n      {{ element.toAccount?.name }}\n    \n\n    \n    \n      bucket\n      \n        {{ element.bucket?.name }}\n      \n    \n\n    \n    \n       test header  -->\n      \n        \n         -->\n      \n    \n\n    \n    \n    \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./transactions.component.css\n                \n                .transactions table {\n  width: 100%;\n}\n\n.transactions table td {\n  text-align: left;\n}\n\n.static-row {\n  height: 0;\n  min-height: 0;\n}\n\n.static-row.expanded-row {\n  height: 100px;\n  min-height: 100px;\n}\n\n.transactions .transaction-cell {\n  padding: 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  transactions                    id      {{ element.id }}                  name      {{ element.name }}                  amount              {{ element.amount | currency: \\'USD\\' }}                        details      {{ element.details }}                  due              {{ element.due | date: \\'MM/dd\\' }}                        scheduled              {{ element.scheduled | date: \\'MM/dd\\' }}                        effective              {{ element.effective | date: \\'MM/dd\\' }}                        fromAccount              {{ element.fromAccount?.name }}                        toAccount      {{ element.toAccount?.name }}                  bucket              {{ element.bucket?.name }}                         test header  -->                       -->                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditRowComponent', 'selector': 'app-edit-row'},{'name': 'QuickAddComponent', 'selector': 'app-quick-add'},{'name': 'TransactionsComponent', 'selector': 'app-transactions'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TransactionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            \n                class\n            \n            \n                AppPage\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                src/app/app.types.ts\n            \n            \n                class\n            \n            \n                Account\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/app.types.ts\n            \n            \n                class\n            \n            \n                Bucket\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/app.types.ts\n            \n            \n                class\n            \n            \n                PendingTransaction\n            \n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/app.types.ts\n            \n            \n                class\n            \n            \n                Transaction\n            \n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/edit-row/edit-row.component.ts\n            \n            \n                component\n            \n            \n                EditRowComponent\n            \n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                src/app/endpoint.service.ts\n            \n            \n                injectable\n            \n            \n                EndpointService\n            \n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                src/app/quick-add/quick-add.component.ts\n            \n            \n                component\n            \n            \n                QuickAddComponent\n            \n            \n                78 %\n                (11/14)\n            \n        \n        \n            \n                \n                src/app/transactions/transactions.component.ts\n            \n            \n                component\n            \n            \n                TransactionsComponent\n            \n            \n                75 %\n                (9/12)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                context\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 7.2.3\n        \n            @angular/cdk : 7.3.0\n        \n            @angular/common : 7.2.3\n        \n            @angular/compiler : 7.2.3\n        \n            @angular/core : 7.2.3\n        \n            @angular/forms : 7.2.3\n        \n            @angular/http : 7.2.3\n        \n            @angular/material : 7.3.0\n        \n            @angular/platform-browser : 7.2.3\n        \n            @angular/platform-browser-dynamic : 7.2.3\n        \n            @angular/router : 7.2.3\n        \n            core-js : ^2.6.2\n        \n            hammerjs : ^2.0.8\n        \n            rxjs : ~6.4.0\n        \n            zone.js : ~0.8.29\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nBalance\nThis project was generated with Angular CLI version 6.2.3.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppMaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nEditRowComponent\n\nEditRowComponent\n\nAppModule -->\n\nEditRowComponent->AppModule\n\n\n\n\n\nQuickAddComponent\n\nQuickAddComponent\n\nAppModule -->\n\nQuickAddComponent->AppModule\n\n\n\n\n\nTransactionsComponent\n\nTransactionsComponent\n\nAppModule -->\n\nTransactionsComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppMaterialModule\n\nAppMaterialModule\n\nAppModule -->\n\nAppMaterialModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
