var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/classes/Account.html",[0,0.028,1,0.612]],["body/classes/Account.html",[0,0.044,1,1.197,2,1.003,3,0.392,4,0.32,5,0.32,6,1.159,7,1.322,8,1.197,9,1.897,10,2.374,11,2.374,12,0.392,13,1.056,14,1.714,15,1.821,16,2.184,17,1.134,18,0.973,19,0.058,20,1.37,21,1.528,22,1.027,23,2.374,24,2.184,25,2.286,26,2.374,27,2.791,28,2.038,29,2.286,30,2.374,31,1.89,32,1.408,33,1.89,34,1.89,35,1.89,36,1.89,37,2.374,38,1.051,39,1.88,40,1.88,41,1.627,42,2.184,43,2.184,44,1.89,45,1.89,46,1.89,47,1.89,48,1.89,49,2.374,50,0.688,51,1.347,52,1.347,53,1.89,54,1.347,55,1.027,56,1.347,57,1.347,58,1.347,59,1.347,60,1.003,61,1.347,62,0.778,63,1.347,64,1.051,65,0.869,66,2.147,67,1.22,68,1.89,69,1.347,70,0.869,71,1.347,72,1.22,73,1.347,74,1.003,75,1.347,76,1.003,77,1.347,78,1.347,79,1.347,80,1.347,81,1.159,82,0.869,83,1.89,84,1.347,85,1.347,86,1.347,87,0.025,88,0.035,89,0.025]],["title/components/AppComponent.html",[90,0.612,91,0.831]],["body/components/AppComponent.html",[0,0.02,1,0.804,3,0.321,4,0.262,5,0.262,7,1.09,8,1.193,12,0.321,13,0.915,15,0.713,17,0.95,18,0.872,19,0.058,20,0.531,22,1.058,29,0.95,32,1.22,38,0.788,50,0.321,55,0.804,60,1.988,62,0.455,64,0.531,81,0.95,82,1.26,87,0.043,88,0.03,89,0.02,90,0.804,91,1.206,92,1.41,93,1.104,94,1.104,95,1.104,96,1.104,97,1.555,98,1.638,99,1.952,100,1.104,101,2.416,102,2.082,103,1.923,104,1.638,105,3.441,106,1.638,107,2.887,108,2.624,109,2.624,110,4.408,111,2.67,112,1.22,113,2.159,114,2.887,115,2.887,116,0.95,117,1.946,118,2.855,119,2.887,120,1.952,121,1.68,122,4.528,123,2.887,124,2.887,125,2.887,126,1.946,127,2.887,128,2.306,129,3.017,130,1.454,131,1.952,132,2.887,133,1.946,134,3.041,135,1.608,136,3.806,137,3.806,138,3.806,139,3.402,140,3.806,141,3.041,142,3.806,143,2.536,144,3.806,145,3.806,146,3.135,147,2.887,148,1.946,149,2.887,150,2.887,151,1.946,152,4.259,153,4.259,154,3.402,155,0.95,156,1.946,157,1.946,158,1.09,159,0.617,160,1.104,161,1.946,162,1.952,163,1.555,164,1.946,165,1.946,166,1.946,167,1.946,168,1.946,169,1.946,170,1.946,171,1.946,172,2.887,173,1.946,174,1.946,175,1.946,176,1.946,177,1.946,178,1.946,179,1.946,180,1.946,181,1.946,182,1.946,183,1.946,184,1.946,185,1.946,186,1.946,187,1.946,188,2.306,189,1.946,190,1.946,191,1.946,192,2.887,193,1.946,194,1.946,195,1.946,196,1.946,197,1.946,198,1.946,199,1.555,200,1.946,201,1.946,202,1.104,203,1.946,204,1.946,205,1.297,206,2.887,207,0.822,208,1.638,209,1.41,210,1.104,211,2.159,212,1.104,213,1.104,214,0.617,215,0.95,216,1.104,217,0.617,218,0.95,219,1.104,220,0.617,221,1.104,222,1.104]],["title/modules/AppMaterialModule.html",[223,1.487,224,1.28]],["body/modules/AppMaterialModule.html",[0,0.038,3,0.604,4,0.493,5,0.493,19,0.057,50,0.604,87,0.038,88,0.046,89,0.038,158,1.564,159,1.16,224,2.16,225,1.788,226,3.662,227,2.926,228,3.662,229,3.534,230,4.424,231,2.926,232,4.754,233,2.44,234,3.662,235,4.754,236,4.754,237,4.938,238,4.754,239,4.754,240,4.754,241,4.754,242,1.788,243,2.44,244,2.926,245,2.44,246,2.44]],["title/modules/AppModule.html",[223,1.487,247,1.487]],["body/modules/AppModule.html",[0,0.034,3,0.526,4,0.43,5,0.43,19,0.057,50,0.526,87,0.034,88,0.043,89,0.034,91,1.665,102,1.348,158,1.633,159,1.011,207,1.348,214,1.573,215,1.558,217,1.573,218,1.558,220,1.573,223,1.81,224,2.424,225,1.558,227,2.549,229,3.245,233,2.126,243,2.977,244,3.245,245,2.126,246,2.126,247,3.018,248,1.81,249,3.569,250,2.549,251,2.549,252,2.549,253,2.549,254,3.245,255,2.549,256,1.81,257,3.191,258,4.062,259,1.81,260,4.062,261,1.558,262,4.062,263,2.549,264,3.191,265,3.191,266,2.126,267,3.191,268,3.191,269,1.558,270,2.126]],["title/classes/AppPage.html",[0,0.028,271,1.747]],["body/classes/AppPage.html",[0,0.04,2,1.618,3,0.632,4,0.516,5,0.516,12,0.632,19,0.057,22,1.062,50,0.632,87,0.04,88,0.048,89,0.04,103,2.552,112,1.92,130,1.92,158,1.214,209,1.87,259,2.173,271,3.028,272,3.06,273,5.012,274,5.012,275,3.831,276,3.831,277,3.06,278,3.028,279,3.831,280,3.831,281,3.831]],["title/classes/Bucket.html",[0,0.028,55,0.612]],["body/classes/Bucket.html",[0,0.045,1,1.133,2,1.065,3,0.416,4,0.339,5,0.339,6,1.231,7,1.259,8,1.193,12,0.416,13,1.101,14,1.568,15,1.841,16,1.43,17,1.149,18,0.847,19,0.058,20,1.373,21,1.272,22,0.811,24,1.971,25,2.268,27,2.825,28,2.092,29,2.324,31,1.43,32,1.065,33,1.43,34,1.43,35,1.43,36,1.43,38,1.085,39,1.941,40,1.941,41,1.231,42,2.255,43,2.255,44,1.43,45,1.43,46,1.43,47,1.43,48,1.43,50,0.706,51,1.971,52,1.971,53,2.255,54,1.971,55,1.133,56,1.971,57,1.971,58,1.971,59,1.43,60,1.065,61,1.43,62,0.811,63,1.43,64,1.085,65,0.923,66,2.194,67,1.272,68,1.971,69,1.43,70,0.923,71,1.43,72,1.272,73,1.43,74,1.065,75,1.43,76,1.065,77,1.43,78,1.43,79,1.43,80,1.43,81,1.231,82,0.923,83,1.971,84,1.43,85,1.43,86,1.43,87,0.026,88,0.036,89,0.026,282,2.521,283,2.521]],["title/components/EditRowComponent.html",[90,0.612,214,0.831]],["body/components/EditRowComponent.html",[0,0.025,1,0.892,3,0.386,4,0.514,5,0.315,8,0.546,12,0.386,14,1.518,17,1.059,18,0.864,19,0.058,20,0.9,22,1.089,38,1.132,40,1.609,50,0.386,55,1.089,62,0.546,65,1.518,67,1.518,70,1.518,72,1.518,87,0.025,88,0.035,89,0.025,90,0.892,91,0.741,92,1.609,93,1.326,94,1.326,95,1.326,96,1.326,98,1.87,99,2.166,100,1.326,101,2.573,102,1.916,104,1.87,106,1.87,108,2.48,109,2.48,111,2.166,112,1.393,113,2.352,116,1.864,129,2.762,130,0.988,131,1.326,143,2.196,158,1.313,159,0.741,160,1.326,207,0.988,208,1.87,209,1.609,210,1.326,211,2.352,212,1.326,213,1.326,214,1.313,215,2.324,216,1.326,217,0.741,218,1.142,219,1.326,220,0.741,221,1.326,222,1.326,242,1.142,261,1.142,269,2.324,284,3.802,285,1.868,286,2.196,287,3.818,288,3.296,289,2.196,290,3.818,291,3.818,292,3.818,293,3.296,294,2.338,295,3.022,296,2.352,297,2.762,298,2.338,299,2.338,300,2.196,301,2.633,302,2.544,303,2.338,304,2.633,305,3.296,306,3.296,307,3.171,308,3.296,309,3.296,310,2.544,311,1.87,312,2.338,313,1.558,314,1.558,315,1.558,316,1.558,317,3.296,318,2.338,319,3.296,320,3.296,321,2.633,322,4.536,323,4.536]],["title/injectables/EndpointService.html",[118,1.487,324,1.487]],["body/injectables/EndpointService.html",[0,0.018,3,0.289,4,0.236,5,0.236,7,1.231,12,0.289,13,0.845,15,1.769,17,0.956,18,1,19,0.058,20,1.319,21,1.322,22,1.025,25,1.999,38,1.061,39,1.303,50,0.289,60,1.996,64,0.729,82,0.977,87,0.047,88,0.028,89,0.018,103,1.168,112,1.127,116,0.856,118,1.514,120,2.323,121,1.999,128,2.132,130,1.899,135,1.365,141,3.27,155,1.303,158,1.144,159,0.555,162,2.549,163,1.4,188,1.4,202,2.323,263,1.4,278,2.728,296,0.995,324,1.514,325,1.753,326,1.4,327,2.994,328,3.231,329,3.886,330,4.094,331,2.669,332,2.669,333,2.669,334,1.753,335,3.612,336,2.669,337,4.725,338,2.669,339,4.584,340,1.753,341,2.669,342,4.094,343,3.504,344,2.406,345,3.231,346,3.231,347,4.094,348,2.669,349,5.035,350,2.669,351,4.584,352,3.612,353,2.669,354,3.612,355,1.753,356,2.669,357,2.132,358,2.669,359,2.669,360,2.669,361,1.778,362,4.256,363,3.231,364,3.612,365,2.669,366,1.753,367,2.669,368,2.885,369,3.27,370,2.669,371,1.753,372,2.669,373,1.753,374,2.669,375,2.669,376,1.753,377,2.669,378,2.669,379,2.669,380,2.669,381,1.753,382,1.753,383,1.753,384,1.4,385,1.753,386,2.669,387,1.753,388,1.753,389,1.753,390,1.753,391,2.669,392,1.753,393,1.753,394,1.753,395,2.669,396,2.669,397,1.753,398,2.132,399,2.669,400,1.753,401,1.753,402,1.753,403,1.753,404,1.753,405,1.753,406,1.753,407,1.753,408,1.753,409,1.753,410,1.753,411,1.753,412,1.753,413,1.753,414,1.753,415,3.612,416,3.612,417,4.725,418,3.612,419,2.669,420,1.753,421,1.753,422,1.753,423,1.753,424,1.753,425,1.753,426,1.753,427,1.753,428,2.669,429,1.753,430,2.669,431,2.669,432,1.753]],["title/classes/PendingTransaction.html",[0,0.028,62,0.612]],["body/classes/PendingTransaction.html",[0,0.043,1,1.144,2,0.981,3,0.383,4,0.313,5,0.313,6,1.134,7,1.31,8,1.226,12,0.383,13,1.04,14,1.703,15,1.769,16,1.318,17,1.129,18,0.98,19,0.058,20,1.394,21,1.201,22,1.129,24,2.158,25,2.21,27,2.639,28,1.858,29,2.21,31,1.318,32,0.981,33,1.318,34,1.318,35,1.318,36,1.318,38,0.896,39,1.602,40,1.602,41,1.134,42,1.862,43,1.862,44,1.318,45,1.318,46,1.318,47,1.318,48,1.318,50,0.682,51,1.318,52,1.318,53,2.158,54,1.318,55,1.11,56,1.318,57,1.318,58,1.318,59,1.862,60,1.386,61,1.862,62,0.889,63,1.862,64,1.236,65,1.393,66,2.32,67,1.597,68,2.345,69,1.862,70,1.393,71,1.862,72,1.597,73,1.862,74,1.607,75,1.862,76,1.607,77,1.862,78,1.318,79,1.318,80,1.318,81,1.134,82,0.851,83,1.862,84,1.318,85,1.318,86,1.318,87,0.024,88,0.034,89,0.024,433,2.323,434,2.323,435,2.323,436,2.323,437,2.323,438,2.323,439,2.323,440,2.323,441,2.323]],["title/components/QuickAddComponent.html",[90,0.612,217,0.831]],["body/components/QuickAddComponent.html",[0,0.015,1,1.072,3,0.228,4,0.374,5,0.186,7,0.703,8,1.022,9,3.496,12,0.228,13,0.703,14,1.529,17,1.181,18,0.826,19,0.058,20,1.105,21,1.831,22,1.058,38,1.236,50,0.228,55,1.14,62,0.323,64,0.867,65,1.426,67,1.426,70,1.426,72,1.426,74,1.646,76,1.646,87,0.015,88,0.023,89,0.015,90,0.648,91,0.438,92,1.083,93,0.785,94,0.785,95,0.785,96,0.785,98,1.258,99,1.574,100,0.785,101,2.104,102,1.71,104,1.258,106,1.258,108,1.971,109,1.971,111,0.785,112,0.937,113,1.801,116,1.355,120,1.258,121,1.083,130,1.567,131,1.258,134,1.771,135,2.161,146,1.477,155,1.55,158,1.101,159,0.438,160,0.785,162,1.258,202,1.574,207,0.584,208,1.258,209,1.083,210,0.785,211,1.801,212,0.785,213,0.785,214,1.234,215,1.55,216,0.785,217,1.006,218,2.268,219,0.785,220,0.438,221,0.785,222,0.785,242,0.675,261,0.675,266,3.058,269,0.675,270,0.922,278,2.115,286,1.477,289,1.477,295,2.697,296,1.801,297,2.115,300,1.477,301,2.536,302,2.115,304,2.962,307,1.849,310,1.849,311,2.297,313,2.115,314,0.922,315,3.209,316,0.922,327,2.97,343,2.536,344,2.115,369,1.771,442,3.666,443,1.105,444,2.775,445,2.217,446,2.217,447,2.775,448,2.775,449,2.775,450,2.217,451,2.217,452,3.175,453,1.771,454,2.775,455,1.383,456,1.383,457,1.383,458,1.383,459,1.771,460,2.217,461,1.383,462,3.175,463,3.175,464,3.175,465,3.175,466,3.175,467,3.175,468,2.217,469,1.383,470,1.383,471,1.383,472,2.217,473,2.217,474,2.217,475,2.217,476,1.383,477,2.217,478,1.383,479,2.217,480,2.217,481,1.383,482,2.217,483,2.217,484,3.818,485,1.771,486,1.771,487,1.383,488,2.217,489,1.383,490,1.771,491,1.383,492,1.771,493,1.105,494,1.383,495,1.105,496,1.383,497,1.383,498,1.383,499,1.383,500,1.383,501,1.383,502,1.383,503,1.383,504,1.383,505,1.383,506,1.383,507,1.383,508,1.383,509,1.383,510,1.383,511,1.383,512,1.383,513,1.383,514,1.383,515,1.383,516,1.383,517,1.383,518,1.383,519,1.383,520,1.383,521,1.383,522,1.383,523,2.217,524,1.383,525,2.217,526,2.217,527,1.849,528,1.771,529,1.771,530,1.383,531,1.105,532,1.105]],["title/classes/Transaction.html",[0,0.028,8,0.612]],["body/classes/Transaction.html",[0,0.042,1,1.126,2,0.913,3,0.357,4,0.291,5,0.291,6,1.056,7,1.268,8,1.224,12,0.357,13,0.988,14,1.668,15,1.807,16,1.226,17,1.109,18,0.992,19,0.058,20,1.395,21,1.141,22,1.153,24,2.074,25,2.224,27,2.645,28,1.954,29,2.354,31,1.226,32,0.913,33,1.226,34,1.226,35,1.226,36,1.226,38,0.851,39,1.522,40,1.522,41,1.056,42,1.768,43,1.768,44,1.226,45,1.226,46,1.226,47,1.226,48,1.226,50,0.66,51,1.226,52,1.226,53,2.074,54,1.226,55,1.089,56,1.226,57,1.226,58,1.226,59,1.226,60,0.913,61,1.226,62,1.153,63,1.768,64,1.206,65,1.338,66,2.354,67,1.553,68,2.27,69,1.768,70,1.338,71,1.768,72,1.553,73,1.768,74,1.544,75,1.768,76,1.544,77,1.768,78,1.768,79,1.768,80,1.768,81,1.522,82,1.141,83,2.27,84,2.074,85,1.768,86,2.074,87,0.023,88,0.033,89,0.023,121,1.954,533,2.162,534,2.162,535,2.162,536,4.75,537,2.162,538,2.162,539,2.162,540,2.162,541,2.162,542,2.162,543,2.162,544,2.162,545,2.162]],["title/components/TransactionsComponent.html",[90,0.612,220,0.831]],["body/components/TransactionsComponent.html",[0,0.015,1,0.671,3,0.24,4,0.387,5,0.196,7,0.462,8,1.017,12,0.24,13,0.733,14,1.556,15,1.197,17,1.056,18,0.787,19,0.058,20,0.785,21,1.556,22,1.038,38,1.16,41,1.129,50,0.24,55,1.017,62,0.341,64,0.631,65,1.456,66,1.853,67,1.456,70,1.456,72,1.456,74,1.68,76,1.68,82,1.052,87,0.015,88,0.024,89,0.015,90,0.671,91,0.462,92,1.129,93,0.827,94,0.827,95,0.827,96,0.827,98,1.312,99,1.63,100,0.827,101,2.153,102,1.603,104,1.312,106,1.312,108,2.023,109,2.023,111,2.716,112,0.977,113,1.855,116,1.403,120,1.63,121,1.403,129,2.179,130,1.382,131,1.855,135,1.963,139,1.165,146,2.65,155,1.129,158,1.13,159,0.462,160,0.827,162,1.312,202,0.827,205,1.915,207,0.616,208,1.312,209,1.129,210,0.827,211,1.855,212,0.827,213,0.827,214,1.202,215,1.853,216,0.827,217,0.462,218,0.712,219,0.827,220,1.036,221,0.827,222,0.827,242,0.712,256,1.312,261,0.712,269,0.712,270,0.971,286,2.749,289,1.541,295,2.529,296,1.855,297,2.179,300,1.541,302,1.541,307,2.179,310,1.541,311,2.256,313,2.179,314,0.971,315,2.901,316,0.971,321,1.847,327,0.971,368,1.847,446,1.165,453,1.847,459,1.847,484,3.394,485,1.165,486,1.165,490,1.165,492,1.847,493,2.613,495,1.165,526,1.165,527,0.971,528,1.165,529,1.165,531,1.165,532,1.165,546,1.165,547,2.874,548,2.874,549,2.312,550,2.874,551,2.874,552,2.312,553,2.312,554,2.312,555,2.874,556,1.458,557,2.312,558,2.312,559,2.312,560,2.312,561,2.312,562,2.312,563,2.312,564,2.312,565,2.312,566,3.271,567,2.312,568,2.312,569,2.312,570,2.312,571,2.312,572,2.312,573,2.312,574,2.312,575,2.312,576,1.458,577,1.458,578,1.458,579,1.458,580,2.312,581,1.458,582,1.458,583,1.458,584,2.312,585,1.458,586,3.271,587,3.566,588,2.874,589,2.312,590,1.458,591,2.312,592,1.458,593,2.312,594,1.458,595,1.458,596,1.458,597,1.458,598,1.458,599,1.458,600,1.458,601,1.458,602,1.458,603,1.458,604,1.458,605,2.312,606,1.458,607,1.458,608,1.458,609,1.458,610,2.874,611,1.458,612,1.458,613,1.458,614,1.458,615,1.458,616,1.458,617,2.312,618,2.312,619,2.312,620,2.312,621,2.312,622,2.312,623,3.795,624,2.312,625,2.312,626,2.312,627,2.312,628,2.312,629,1.847,630,2.312,631,2.312,632,3.271,633,2.312,634,1.458,635,2.312,636,1.458]],["title/coverage.html",[637,2.85]],["body/coverage.html",[0,0.052,1,0.809,5,0.466,6,2.365,8,0.809,18,0.685,19,0.057,55,0.809,62,0.809,87,0.036,88,0.045,89,0.036,90,1.131,91,1.097,97,2.766,118,1.964,135,1.463,205,3.315,214,1.097,217,1.097,220,1.097,266,2.307,269,1.69,271,2.307,272,2.766,284,2.766,285,2.766,311,1.964,324,1.964,326,2.766,361,2.307,442,2.766,443,2.766,527,3.227,546,2.766,637,2.766,638,3.462,639,3.462,640,3.462,641,3.462,642,4.275,643,4.275,644,3.462,645,3.462,646,3.462,647,3.462,648,3.462,649,3.462,650,3.462,651,3.462,652,3.462,653,3.462,654,2.766,655,4.843,656,3.415,657,4.843,658,2.766,659,3.415,660,2.766,661,3.462]],["title/dependencies.html",[248,1.787,662,2.194]],["body/dependencies.html",[19,0.057,87,0.04,88,0.047,89,0.04,159,1.204,231,3.035,233,3.013,242,1.855,248,2.155,259,2.565,261,1.855,384,3.035,663,3.799,664,5.308,665,3.799,666,4.522,667,3.799,668,3.799,669,3.799,670,3.799,671,3.799,672,3.799,673,3.799,674,3.799,675,3.799,676,3.799,677,3.799,678,3.799]],["title/index.html",[12,0.362,679,2.194,680,2.194]],["body/index.html",[4,0.47,17,0.816,19,0.045,28,1.707,32,1.477,87,0.037,88,0.045,89,0.037,90,1.088,102,1.477,135,1.477,143,2.329,154,3.435,199,2.792,256,1.983,277,2.792,357,3.72,398,2.792,629,2.792,681,4.3,682,4.657,683,3.495,684,3.495,685,3.495,686,4.3,687,4.989,688,5.146,689,3.495,690,3.495,691,3.495,692,3.495,693,3.495,694,3.495,695,3.495,696,3.495,697,4.657,698,4.657,699,3.495,700,4.989,701,3.495,702,3.495,703,3.495,704,3.495,705,3.495,706,3.495,707,2.792,708,4.3,709,4.3,710,4.859,711,4.3,712,3.495,713,4.859,714,3.495,715,3.495,716,4.657,717,3.495,718,3.495,719,3.495]],["title/modules.html",[225,1.742]],["body/modules.html",[19,0.05,87,0.044,88,0.05,89,0.044,224,2.022,225,2.022,247,2.35,259,2.35,720,4.142,721,4.142,722,4.757,723,4.142,724,4.142]],["title/overview.html",[725,2.85]],["body/overview.html",[2,1.566,19,0.055,87,0.039,88,0.047,89,0.039,91,1.65,92,1.81,207,1.566,214,1.514,217,1.514,220,1.514,223,2.103,224,2.333,225,1.81,243,2.47,245,2.47,246,2.47,247,3.05,248,2.103,249,2.961,250,2.961,251,2.961,252,2.961,253,2.961,254,3.56,255,2.961,256,2.103,324,2.103,725,2.961,726,3.707,727,3.707,728,3.707,729,3.707]],["title/miscellaneous/variables.html",[730,1.752,731,2.516]],["body/miscellaneous/variables.html",[12,0.632,18,0.958,19,0.057,64,1.323,87,0.04,88,0.048,89,0.04,155,2.366,344,3.028,361,3.028,654,3.06,656,4.003,658,3.06,659,3.06,660,3.63,707,3.63,730,3.06,731,3.06,732,4.545,733,3.831,734,3.831,735,3.831,736,4.545,737,3.831,738,3.831]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"classes/Account.html":{},"components/AppComponent.html":{},"modules/AppMaterialModule.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/Bucket.html":{},"components/EditRowComponent.html":{},"injectables/EndpointService.html":{},"classes/PendingTransaction.html":{},"components/QuickAddComponent.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"components/TransactionsComponent.html":{},"coverage.html":{}}}],["0.8.29",{"_index":678,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":657,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":641,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":728,"title":{},"body":{"overview.html":{}}}],["10/10",{"_index":646,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":527,"title":{},"body":{"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{},"coverage.html":{}}}],["100px",{"_index":635,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["11/14",{"_index":651,"title":{},"body":{"coverage.html":{}}}],["13/13",{"_index":647,"title":{},"body":{"coverage.html":{}}}],["1337",{"_index":379,"title":{},"body":{"injectables/EndpointService.html":{}}}],["2",{"_index":726,"title":{},"body":{"overview.html":{}}}],["2.0.8",{"_index":675,"title":{},"body":{"dependencies.html":{}}}],["2.6.2",{"_index":673,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":645,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":727,"title":{},"body":{"overview.html":{}}}],["5",{"_index":729,"title":{},"body":{"overview.html":{}}}],["5/8",{"_index":649,"title":{},"body":{"coverage.html":{}}}],["6.2.3",{"_index":684,"title":{},"body":{"index.html":{}}}],["6.4.0",{"_index":676,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":644,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":648,"title":{},"body":{"coverage.html":{}}}],["7.2.4",{"_index":664,"title":{},"body":{"dependencies.html":{}}}],["7.3.1",{"_index":666,"title":{},"body":{"dependencies.html":{}}}],["7/9",{"_index":643,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":652,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":642,"title":{},"body":{"coverage.html":{}}}],["78",{"_index":650,"title":{},"body":{"coverage.html":{}}}],["9/12",{"_index":653,"title":{},"body":{"coverage.html":{}}}],["accordingly",{"_index":392,"title":{},"body":{"injectables/EndpointService.html":{}}}],["account",{"_index":1,"title":{"classes/Account.html":{}},"body":{"classes/Account.html":{},"components/AppComponent.html":{},"classes/Bucket.html":{},"components/EditRowComponent.html":{},"classes/PendingTransaction.html":{},"components/QuickAddComponent.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{},"coverage.html":{}}}],["accounts",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["active",{"_index":566,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["actual_component",{"_index":222,"title":{},"body":{"components/AppComponent.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["add",{"_index":9,"title":{},"body":{"classes/Account.html":{},"components/QuickAddComponent.html":{}}}],["add'},{'name",{"_index":219,"title":{},"body":{"components/AppComponent.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["add.component",{"_index":267,"title":{},"body":{"modules/AppModule.html":{}}}],["add.component.css",{"_index":444,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["add.component.html",{"_index":445,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["add.component.ts",{"_index":443,"title":{},"body":{"components/QuickAddComponent.html":{},"coverage.html":{}}}],["add.component.ts:104",{"_index":489,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["add.component.ts:114",{"_index":455,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["add.component.ts:118",{"_index":470,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["add.component.ts:123",{"_index":471,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["add.component.ts:161",{"_index":461,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["add.component.ts:179",{"_index":469,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["add.component.ts:26",{"_index":456,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["add.component.ts:31",{"_index":457,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["add.component.ts:36",{"_index":458,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["add.component.ts:43",{"_index":478,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["add.component.ts:48",{"_index":487,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["add.component.ts:81",{"_index":481,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["add.component.ts:97",{"_index":491,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["add/quick",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"components/QuickAddComponent.html":{},"coverage.html":{}}}],["added",{"_index":75,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["again",{"_index":413,"title":{},"body":{"injectables/EndpointService.html":{}}}],["against",{"_index":36,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["align",{"_index":529,"title":{},"body":{"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["already",{"_index":78,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["amount",{"_index":65,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"components/EditRowComponent.html":{},"classes/PendingTransaction.html":{},"components/QuickAddComponent.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{}}}],["angular",{"_index":357,"title":{},"body":{"injectables/EndpointService.html":{},"index.html":{}}}],["angular/animations",{"_index":663,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":665,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":231,"title":{},"body":{"modules/AppMaterialModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":263,"title":{},"body":{"modules/AppModule.html":{},"injectables/EndpointService.html":{}}}],["angular/compiler",{"_index":667,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"modules/AppMaterialModule.html":{},"modules/AppModule.html":{},"components/EditRowComponent.html":{},"injectables/EndpointService.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":261,"title":{},"body":{"modules/AppModule.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":668,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":242,"title":{},"body":{"modules/AppMaterialModule.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":233,"title":{},"body":{"modules/AppMaterialModule.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":670,"title":{},"body":{"dependencies.html":{}}}],["api",{"_index":60,"title":{},"body":{"classes/Account.html":{},"components/AppComponent.html":{},"classes/Bucket.html":{},"injectables/EndpointService.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["app",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{},"index.html":{}}}],["app.component",{"_index":265,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":105,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":107,"title":{},"body":{"components/AppComponent.html":{}}}],["app.types",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["appcomponent",{"_index":91,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application/json",{"_index":425,"title":{},"body":{"injectables/EndpointService.html":{}}}],["applied",{"_index":35,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["appmaterialmodule",{"_index":224,"title":{"modules/AppMaterialModule.html":{}},"body":{"modules/AppMaterialModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appmodule",{"_index":247,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":271,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approach",{"_index":559,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["architecture",{"_index":309,"title":{},"body":{"components/EditRowComponent.html":{}}}],["array",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["array...tho",{"_index":183,"title":{},"body":{"components/AppComponent.html":{}}}],["artifacts",{"_index":701,"title":{},"body":{"index.html":{}}}],["assigned",{"_index":61,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["assumption",{"_index":43,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["attach_money",{"_index":206,"title":{},"body":{"components/AppComponent.html":{}}}],["auth",{"_index":346,"title":{},"body":{"injectables/EndpointService.html":{}}}],["authentication",{"_index":421,"title":{},"body":{"injectables/EndpointService.html":{}}}],["authorization",{"_index":426,"title":{},"body":{"injectables/EndpointService.html":{}}}],["automatically",{"_index":693,"title":{},"body":{"index.html":{}}}],["available",{"_index":721,"title":{},"body":{"modules.html":{}}}],["avoid",{"_index":465,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["back",{"_index":463,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["backend",{"_index":395,"title":{},"body":{"injectables/EndpointService.html":{}}}],["bad",{"_index":409,"title":{},"body":{"injectables/EndpointService.html":{}}}],["balance",{"_index":32,"title":{},"body":{"classes/Account.html":{},"components/AppComponent.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{},"index.html":{}}}],["base",{"_index":350,"title":{},"body":{"injectables/EndpointService.html":{}}}],["baseurl",{"_index":328,"title":{},"body":{"injectables/EndpointService.html":{}}}],["belong",{"_index":77,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["below",{"_index":557,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["block",{"_index":525,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["body",{"_index":399,"title":{},"body":{"injectables/EndpointService.html":{}}}],["bootstrap",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["browse",{"_index":722,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":259,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get",{"_index":279,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":234,"title":{},"body":{"modules/AppMaterialModule.html":{}}}],["browseranimationsmodule",{"_index":232,"title":{},"body":{"modules/AppMaterialModule.html":{}}}],["browsermodule",{"_index":258,"title":{},"body":{"modules/AppModule.html":{}}}],["bucket",{"_index":55,"title":{"classes/Bucket.html":{}},"body":{"classes/Account.html":{},"components/AppComponent.html":{},"classes/Bucket.html":{},"components/EditRowComponent.html":{},"classes/PendingTransaction.html":{},"components/QuickAddComponent.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{},"coverage.html":{}}}],["buckets",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["build",{"_index":700,"title":{},"body":{"index.html":{}}}],["case",{"_index":198,"title":{},"body":{"components/AppComponent.html":{}}}],["catcherror",{"_index":381,"title":{},"body":{"injectables/EndpointService.html":{}}}],["categorizing",{"_index":52,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["cell",{"_index":610,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["celldata",{"_index":588,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["change",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"components/EditRowComponent.html":{},"index.html":{}}}],["changes",{"_index":582,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["check",{"_index":718,"title":{},"body":{"index.html":{}}}],["checking",{"_index":45,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["child",{"_index":480,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["class",{"_index":0,"title":{"classes/Account.html":{},"classes/AppPage.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}},"body":{"classes/Account.html":{},"components/AppComponent.html":{},"modules/AppMaterialModule.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/Bucket.html":{},"components/EditRowComponent.html":{},"injectables/EndpointService.html":{},"classes/PendingTransaction.html":{},"components/QuickAddComponent.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/Account.html":{},"classes/AppPage.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{},"overview.html":{}}}],["cli",{"_index":682,"title":{},"body":{"index.html":{}}}],["click",{"_index":587,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["clicked",{"_index":613,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["client",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"injectables/EndpointService.html":{}}}],["clues",{"_index":401,"title":{},"body":{"injectables/EndpointService.html":{}}}],["cluster_appmodule",{"_index":250,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":251,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cms",{"_index":29,"title":{},"body":{"classes/Account.html":{},"components/AppComponent.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["code",{"_index":398,"title":{},"body":{"injectables/EndpointService.html":{},"index.html":{}}}],["columns",{"_index":300,"title":{},"body":{"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["commonmodule",{"_index":230,"title":{},"body":{"modules/AppMaterialModule.html":{}}}],["communicating",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["component",{"_index":90,"title":{"components/AppComponent.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":212,"title":{},"body":{"components/AppComponent.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["components",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{},"overview.html":{}}}],["concat(accounts",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["concat(buckets",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["concat(transactions",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["concept",{"_index":51,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["console.error",{"_index":404,"title":{},"body":{"injectables/EndpointService.html":{}}}],["console.error('an",{"_index":393,"title":{},"body":{"injectables/EndpointService.html":{}}}],["console.log('cell",{"_index":614,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["console.log('editing",{"_index":615,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["console.log('row",{"_index":604,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["const",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"injectables/EndpointService.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["constructor",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"components/EditRowComponent.html":{},"injectables/EndpointService.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["constructor(endpointservice",{"_index":117,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(http",{"_index":334,"title":{},"body":{"injectables/EndpointService.html":{}}}],["constructor(private",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"injectables/EndpointService.html":{}}}],["contain",{"_index":400,"title":{},"body":{"injectables/EndpointService.html":{}}}],["content",{"_index":424,"title":{},"body":{"injectables/EndpointService.html":{}}}],["context",{"_index":361,"title":{},"body":{"injectables/EndpointService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["controls",{"_index":488,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["core",{"_index":671,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":181,"title":{},"body":{"components/AppComponent.html":{}}}],["correctly",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["coverage",{"_index":637,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":330,"title":{},"body":{"injectables/EndpointService.html":{}}}],["create('/transactions",{"_index":173,"title":{},"body":{"components/AppComponent.html":{}}}],["create(path",{"_index":338,"title":{},"body":{"injectables/EndpointService.html":{}}}],["created",{"_index":85,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["created_at",{"_index":86,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["credit",{"_index":47,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["credits",{"_index":33,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["currency",{"_index":620,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["current",{"_index":40,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"components/EditRowComponent.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["d+(\\.?\\d{1,2",{"_index":486,"title":{},"body":{"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["dang",{"_index":58,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["data",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"components/EditRowComponent.html":{},"components/TransactionsComponent.html":{}}}],["date",{"_index":66,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{}}}],["debits",{"_index":34,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["decimal",{"_index":320,"title":{},"body":{"components/EditRowComponent.html":{}}}],["declarations",{"_index":243,"title":{},"body":{"modules/AppMaterialModule.html":{},"modules/AppModule.html":{},"overview.html":{}}}],["decorators",{"_index":476,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["deducted",{"_index":73,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["default",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"injectables/EndpointService.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":191,"title":{},"body":{"components/AppComponent.html":{}}}],["defined",{"_index":22,"title":{},"body":{"classes/Account.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"classes/Bucket.html":{},"components/EditRowComponent.html":{},"injectables/EndpointService.html":{},"classes/PendingTransaction.html":{},"components/QuickAddComponent.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{}}}],["dependencies",{"_index":248,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":7,"title":{},"body":{"classes/Account.html":{},"components/AppComponent.html":{},"classes/Bucket.html":{},"injectables/EndpointService.html":{},"classes/PendingTransaction.html":{},"components/QuickAddComponent.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{}}}],["details",{"_index":14,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"components/EditRowComponent.html":{},"classes/PendingTransaction.html":{},"components/QuickAddComponent.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{}}}],["detection",{"_index":144,"title":{},"body":{"components/AppComponent.html":{}}}],["dev",{"_index":690,"title":{},"body":{"index.html":{}}}],["development",{"_index":685,"title":{},"body":{"index.html":{}}}],["directive",{"_index":210,"title":{},"body":{"components/AppComponent.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["directives",{"_index":221,"title":{},"body":{"components/AppComponent.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":699,"title":{},"body":{"index.html":{}}}],["directory",{"_index":704,"title":{},"body":{"index.html":{}}}],["display",{"_index":301,"title":{},"body":{"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{}}}],["dist",{"_index":703,"title":{},"body":{"index.html":{}}}],["docs",{"_index":358,"title":{},"body":{"injectables/EndpointService.html":{}}}],["documentation",{"_index":638,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["due",{"_index":67,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"components/EditRowComponent.html":{},"classes/PendingTransaction.html":{},"components/QuickAddComponent.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{}}}],["dynamic",{"_index":669,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":714,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.ts",{"_index":272,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":276,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":275,"title":{},"body":{"classes/AppPage.html":{}}}],["edit",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["editcolumns",{"_index":290,"title":{},"body":{"components/EditRowComponent.html":{}}}],["edited",{"_index":150,"title":{},"body":{"components/AppComponent.html":{}}}],["editform",{"_index":291,"title":{},"body":{"components/EditRowComponent.html":{}}}],["editing",{"_index":612,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["editing...still",{"_index":567,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["editrowcomponent",{"_index":214,"title":{"components/EditRowComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["edittablesource",{"_index":292,"title":{},"body":{"components/EditRowComponent.html":{}}}],["effective",{"_index":72,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"components/EditRowComponent.html":{},"classes/PendingTransaction.html":{},"components/QuickAddComponent.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{}}}],["element",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["element(by.css('app",{"_index":280,"title":{},"body":{"classes/AppPage.html":{}}}],["element.amount",{"_index":619,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["element.bucket?.name",{"_index":628,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["element.details",{"_index":621,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["element.due",{"_index":622,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["element.effective",{"_index":625,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["element.fromaccount?.name",{"_index":626,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["element.id",{"_index":617,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["element.name",{"_index":618,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["element.scheduled",{"_index":624,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["element.toaccount?.name",{"_index":627,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["emit",{"_index":459,"title":{},"body":{"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["enable",{"_index":611,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["end",{"_index":713,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":415,"title":{},"body":{"injectables/EndpointService.html":{}}}],["endpoint.service",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["endpoints",{"_index":125,"title":{},"body":{"components/AppComponent.html":{}}}],["endpointservice",{"_index":118,"title":{"injectables/EndpointService.html":{}},"body":{"components/AppComponent.html":{},"injectables/EndpointService.html":{},"coverage.html":{}}}],["environment",{"_index":656,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":362,"title":{},"body":{"injectables/EndpointService.html":{}}}],["error.error",{"_index":386,"title":{},"body":{"injectables/EndpointService.html":{}}}],["error.error.message",{"_index":394,"title":{},"body":{"injectables/EndpointService.html":{}}}],["error.status",{"_index":405,"title":{},"body":{"injectables/EndpointService.html":{}}}],["errorevent",{"_index":388,"title":{},"body":{"injectables/EndpointService.html":{}}}],["event",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["event.id",{"_index":177,"title":{},"body":{"components/AppComponent.html":{}}}],["eventemitter",{"_index":313,"title":{},"body":{"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["eventually",{"_index":345,"title":{},"body":{"injectables/EndpointService.html":{}}}],["execute",{"_index":711,"title":{},"body":{"index.html":{}}}],["existing",{"_index":374,"title":{},"body":{"injectables/EndpointService.html":{}}}],["exists",{"_index":79,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["export",{"_index":50,"title":{},"body":{"classes/Account.html":{},"components/AppComponent.html":{},"modules/AppMaterialModule.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/Bucket.html":{},"components/EditRowComponent.html":{},"injectables/EndpointService.html":{},"classes/PendingTransaction.html":{},"components/QuickAddComponent.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{}}}],["exports",{"_index":245,"title":{},"body":{"modules/AppMaterialModule.html":{},"modules/AppModule.html":{},"overview.html":{}}}],["extends",{"_index":80,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["facing",{"_index":406,"title":{},"body":{"injectables/EndpointService.html":{}}}],["false",{"_index":738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fast",{"_index":573,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["fetch",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"injectables/EndpointService.html":{}}}],["figured",{"_index":561,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/Account.html":{},"components/AppComponent.html":{},"modules/AppMaterialModule.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/Bucket.html":{},"components/EditRowComponent.html":{},"injectables/EndpointService.html":{},"classes/PendingTransaction.html":{},"components/QuickAddComponent.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{},"coverage.html":{}}}],["files",{"_index":695,"title":{},"body":{"index.html":{}}}],["flag",{"_index":706,"title":{},"body":{"index.html":{}}}],["flesh",{"_index":575,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["form",{"_index":304,"title":{},"body":{"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{}}}],["formcontrol",{"_index":314,"title":{},"body":{"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["formcontrol(null",{"_index":484,"title":{},"body":{"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["formgroup",{"_index":302,"title":{},"body":{"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["formgroup.invalid",{"_index":503,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["formgroup.reset",{"_index":521,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["formgroup.value",{"_index":498,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["formvalues",{"_index":497,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["formvalues.amount",{"_index":506,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["formvalues.bucket",{"_index":518,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["formvalues.details",{"_index":507,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["formvalues.due",{"_index":508,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["formvalues.due.tolocaledatestring",{"_index":509,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["formvalues.effective",{"_index":512,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["formvalues.effective.tolocaledatestring",{"_index":513,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["formvalues.fromaccount",{"_index":514,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["formvalues.name",{"_index":505,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["formvalues.scheduled",{"_index":510,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["formvalues.scheduled.tolocaledatestring",{"_index":511,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["formvalues.toaccount",{"_index":516,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["freshtransaction",{"_index":504,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["fromaccount",{"_index":74,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"components/QuickAddComponent.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{}}}],["funds",{"_index":11,"title":{},"body":{"classes/Account.html":{}}}],["further",{"_index":715,"title":{},"body":{"index.html":{}}}],["generate",{"_index":697,"title":{},"body":{"index.html":{}}}],["generated",{"_index":28,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{},"index.html":{}}}],["generic",{"_index":341,"title":{},"body":{"injectables/EndpointService.html":{}}}],["get's",{"_index":422,"title":{},"body":{"injectables/EndpointService.html":{}}}],["getaccount",{"_index":450,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["getaccount(name",{"_index":460,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["getbucket",{"_index":451,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["getbucket(name",{"_index":468,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["getparagraphtext",{"_index":273,"title":{},"body":{"classes/AppPage.html":{}}}],["getting",{"_index":679,"title":{"index.html":{}},"body":{}}],["given",{"_index":343,"title":{},"body":{"injectables/EndpointService.html":{},"components/QuickAddComponent.html":{}}}],["go",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["graph",{"_index":720,"title":{},"body":{"modules.html":{}}}],["group...yo",{"_index":305,"title":{},"body":{"components/EditRowComponent.html":{}}}],["h1')).gettext",{"_index":281,"title":{},"body":{"classes/AppPage.html":{}}}],["hammerjs",{"_index":674,"title":{},"body":{"dependencies.html":{}}}],["handle",{"_index":363,"title":{},"body":{"injectables/EndpointService.html":{}}}],["handleerror",{"_index":331,"title":{},"body":{"injectables/EndpointService.html":{}}}],["handleerror(error",{"_index":353,"title":{},"body":{"injectables/EndpointService.html":{}}}],["happened",{"_index":410,"title":{},"body":{"injectables/EndpointService.html":{}}}],["header",{"_index":630,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["headers",{"_index":419,"title":{},"body":{"injectables/EndpointService.html":{}}}],["height",{"_index":632,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["help",{"_index":716,"title":{},"body":{"index.html":{}}}],["host",{"_index":378,"title":{},"body":{"injectables/EndpointService.html":{}}}],["html",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["http",{"_index":337,"title":{},"body":{"injectables/EndpointService.html":{}}}],["http://localhost",{"_index":375,"title":{},"body":{"injectables/EndpointService.html":{}}}],["http://localhost:4200",{"_index":692,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":335,"title":{},"body":{"injectables/EndpointService.html":{}}}],["httpclientmodule",{"_index":262,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":354,"title":{},"body":{"injectables/EndpointService.html":{}}}],["httpheaders",{"_index":380,"title":{},"body":{"injectables/EndpointService.html":{}}}],["httpoptions",{"_index":418,"title":{},"body":{"injectables/EndpointService.html":{}}}],["id",{"_index":15,"title":{},"body":{"classes/Account.html":{},"components/AppComponent.html":{},"classes/Bucket.html":{},"injectables/EndpointService.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{}}}],["idea",{"_index":569,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["identifier",{"_index":639,"title":{},"body":{"coverage.html":{}}}],["immutable",{"_index":140,"title":{},"body":{"components/AppComponent.html":{}}}],["implement",{"_index":586,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["implementation",{"_index":41,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{}}}],["implements",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["implemntation",{"_index":57,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["import",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"modules/AppMaterialModule.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/EditRowComponent.html":{},"injectables/EndpointService.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["important",{"_index":137,"title":{},"body":{"components/AppComponent.html":{}}}],["imports",{"_index":244,"title":{},"body":{"modules/AppMaterialModule.html":{},"modules/AppModule.html":{}}}],["index",{"_index":12,"title":{"index.html":{}},"body":{"classes/Account.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"classes/Bucket.html":{},"components/EditRowComponent.html":{},"injectables/EndpointService.html":{},"classes/PendingTransaction.html":{},"components/QuickAddComponent.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/Account.html":{},"components/AppComponent.html":{},"modules/AppMaterialModule.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/Bucket.html":{},"components/EditRowComponent.html":{},"injectables/EndpointService.html":{},"classes/PendingTransaction.html":{},"components/QuickAddComponent.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{}}}],["inherited",{"_index":536,"title":{},"body":{"classes/Transaction.html":{}}}],["init",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["initial",{"_index":482,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["initialaddvalues",{"_index":446,"title":{},"body":{"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["initialbalance",{"_index":16,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["injectable",{"_index":324,"title":{"injectables/EndpointService.html":{}},"body":{"injectables/EndpointService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":325,"title":{},"body":{"injectables/EndpointService.html":{}}}],["injected",{"_index":122,"title":{},"body":{"components/AppComponent.html":{}}}],["input",{"_index":307,"title":{},"body":{"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["inputs",{"_index":289,"title":{},"body":{"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["insert",{"_index":180,"title":{},"body":{"components/AppComponent.html":{}}}],["instance",{"_index":368,"title":{},"body":{"injectables/EndpointService.html":{},"components/TransactionsComponent.html":{}}}],["instanceof",{"_index":387,"title":{},"body":{"injectables/EndpointService.html":{}}}],["invalid",{"_index":501,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["is/was",{"_index":68,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["item",{"_index":369,"title":{},"body":{"injectables/EndpointService.html":{},"components/QuickAddComponent.html":{}}}],["item.name",{"_index":523,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["js",{"_index":672,"title":{},"body":{"dependencies.html":{}}}],["karma",{"_index":712,"title":{},"body":{"index.html":{}}}],["last",{"_index":81,"title":{},"body":{"classes/Account.html":{},"components/AppComponent.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["later",{"_index":414,"title":{},"body":{"injectables/EndpointService.html":{}}}],["left",{"_index":532,"title":{},"body":{"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["legend",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{},"overview.html":{}}}],["length",{"_index":598,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["lifted",{"_index":356,"title":{},"body":{"injectables/EndpointService.html":{}}}],["limit",{"_index":203,"title":{},"body":{"components/AppComponent.html":{}}}],["line",{"_index":597,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["list",{"_index":295,"title":{},"body":{"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["loan",{"_index":48,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["location",{"_index":182,"title":{},"body":{"components/AppComponent.html":{}}}],["lol",{"_index":499,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["map",{"_index":462,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["matbuttonmodule",{"_index":241,"title":{},"body":{"modules/AppMaterialModule.html":{}}}],["matching",{"_index":88,"title":{},"body":{"classes/Account.html":{},"components/AppComponent.html":{},"modules/AppMaterialModule.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/Bucket.html":{},"components/EditRowComponent.html":{},"injectables/EndpointService.html":{},"classes/PendingTransaction.html":{},"components/QuickAddComponent.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["matdatepickermodule",{"_index":236,"title":{},"body":{"modules/AppMaterialModule.html":{}}}],["matdividermodule",{"_index":239,"title":{},"body":{"modules/AppMaterialModule.html":{}}}],["material.module",{"_index":264,"title":{},"body":{"modules/AppModule.html":{}}}],["material.module.ts",{"_index":228,"title":{},"body":{"modules/AppMaterialModule.html":{}}}],["material/app",{"_index":227,"title":{},"body":{"modules/AppMaterialModule.html":{},"modules/AppModule.html":{}}}],["maticonmodule",{"_index":238,"title":{},"body":{"modules/AppMaterialModule.html":{}}}],["matinputmodule",{"_index":235,"title":{},"body":{"modules/AppMaterialModule.html":{}}}],["matnativedatemodule",{"_index":237,"title":{},"body":{"modules/AppMaterialModule.html":{}}}],["mattabledatasource",{"_index":310,"title":{},"body":{"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["mattabledatasource(this.initialaddvalues",{"_index":490,"title":{},"body":{"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["mattabledatasource(this.transactions",{"_index":593,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["mattablemodule",{"_index":240,"title":{},"body":{"modules/AppMaterialModule.html":{}}}],["max",{"_index":596,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["maybe",{"_index":562,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["message",{"_index":407,"title":{},"body":{"injectables/EndpointService.html":{}}}],["metadata",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["methods",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/EditRowComponent.html":{},"injectables/EndpointService.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["min",{"_index":633,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["miscellaneous",{"_index":730,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mm/dd",{"_index":623,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["mm/dd/yyyy",{"_index":322,"title":{},"body":{"components/EditRowComponent.html":{}}}],["modified...also",{"_index":194,"title":{},"body":{"components/AppComponent.html":{}}}],["module",{"_index":223,"title":{"modules/AppMaterialModule.html":{},"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":225,"title":{"modules.html":{}},"body":{"modules/AppMaterialModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":717,"title":{},"body":{"index.html":{}}}],["name",{"_index":17,"title":{},"body":{"classes/Account.html":{},"components/AppComponent.html":{},"classes/Bucket.html":{},"components/EditRowComponent.html":{},"injectables/EndpointService.html":{},"classes/PendingTransaction.html":{},"components/QuickAddComponent.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{},"index.html":{}}}],["names",{"_index":467,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["navigate",{"_index":691,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":274,"title":{},"body":{"classes/AppPage.html":{}}}],["nbsp",{"_index":318,"title":{},"body":{"components/EditRowComponent.html":{}}}],["need",{"_index":39,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"injectables/EndpointService.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["needs",{"_index":359,"title":{},"body":{"injectables/EndpointService.html":{}}}],["network",{"_index":390,"title":{},"body":{"injectables/EndpointService.html":{}}}],["never",{"_index":500,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["new",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"injectables/EndpointService.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{},"coverage.html":{},"index.html":{}}}],["newnoun",{"_index":339,"title":{},"body":{"injectables/EndpointService.html":{}}}],["newtransaction",{"_index":447,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["next",{"_index":187,"title":{},"body":{"components/AppComponent.html":{}}}],["ng",{"_index":688,"title":{},"body":{"index.html":{}}}],["ngform",{"_index":316,"title":{},"body":{"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["ngmodule",{"_index":229,"title":{},"body":{"modules/AppMaterialModule.html":{},"modules/AppModule.html":{}}}],["ngonchanges",{"_index":552,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["ngonchanges(changes",{"_index":580,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["ngoninit",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["not...need",{"_index":574,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["notes",{"_index":24,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["null",{"_index":21,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"injectables/EndpointService.html":{},"classes/PendingTransaction.html":{},"components/QuickAddComponent.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{}}}],["number",{"_index":25,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"injectables/EndpointService.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["o(n",{"_index":195,"title":{},"body":{"components/AppComponent.html":{}}}],["object",{"_index":344,"title":{},"body":{"injectables/EndpointService.html":{},"components/QuickAddComponent.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":351,"title":{},"body":{"injectables/EndpointService.html":{}}}],["occurred",{"_index":391,"title":{},"body":{"injectables/EndpointService.html":{}}}],["onadd",{"_index":452,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["oncellclick",{"_index":553,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["oncellclick(celldata",{"_index":584,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["onchanges",{"_index":547,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["oninit",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["onrowclick(rowdata",{"_index":603,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["operation",{"_index":196,"title":{},"body":{"components/AppComponent.html":{}}}],["option.name",{"_index":323,"title":{},"body":{"components/EditRowComponent.html":{}}}],["optional",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"injectables/EndpointService.html":{},"components/QuickAddComponent.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{}}}],["order",{"_index":192,"title":{},"body":{"components/AppComponent.html":{}}}],["ordering",{"_index":185,"title":{},"body":{"components/AppComponent.html":{}}}],["out",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"components/TransactionsComponent.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":492,"title":{},"body":{"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["outputs",{"_index":453,"title":{},"body":{"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["overview",{"_index":725,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":662,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":636,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["param",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"injectables/EndpointService.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["parameters",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"injectables/EndpointService.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["parent",{"_index":475,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["pass",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/QuickAddComponent.html":{}}}],["path",{"_index":349,"title":{},"body":{"injectables/EndpointService.html":{}}}],["pendingtransaction",{"_index":62,"title":{"classes/PendingTransaction.html":{}},"body":{"classes/Account.html":{},"components/AppComponent.html":{},"classes/Bucket.html":{},"components/EditRowComponent.html":{},"classes/PendingTransaction.html":{},"components/QuickAddComponent.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{},"coverage.html":{}}}],["pendingtransaction:101",{"_index":538,"title":{},"body":{"classes/Transaction.html":{}}}],["pendingtransaction:61",{"_index":543,"title":{},"body":{"classes/Transaction.html":{}}}],["pendingtransaction:66",{"_index":537,"title":{},"body":{"classes/Transaction.html":{}}}],["pendingtransaction:71",{"_index":539,"title":{},"body":{"classes/Transaction.html":{}}}],["pendingtransaction:76",{"_index":540,"title":{},"body":{"classes/Transaction.html":{}}}],["pendingtransaction:81",{"_index":544,"title":{},"body":{"classes/Transaction.html":{}}}],["pendingtransaction:86",{"_index":541,"title":{},"body":{"classes/Transaction.html":{}}}],["pendingtransaction:91",{"_index":542,"title":{},"body":{"classes/Transaction.html":{}}}],["pendingtransaction:96",{"_index":545,"title":{},"body":{"classes/Transaction.html":{}}}],["performance",{"_index":570,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["pipe(catcherror(this.handleerror",{"_index":430,"title":{},"body":{"injectables/EndpointService.html":{}}}],["place",{"_index":560,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["please",{"_index":411,"title":{},"body":{"injectables/EndpointService.html":{}}}],["port",{"_index":329,"title":{},"body":{"injectables/EndpointService.html":{}}}],["post",{"_index":352,"title":{},"body":{"injectables/EndpointService.html":{}}}],["post's",{"_index":423,"title":{},"body":{"injectables/EndpointService.html":{}}}],["post(endpoint",{"_index":429,"title":{},"body":{"injectables/EndpointService.html":{}}}],["preserves",{"_index":184,"title":{},"body":{"components/AppComponent.html":{}}}],["pretty",{"_index":572,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["priorindex",{"_index":201,"title":{},"body":{"components/AppComponent.html":{}}}],["private",{"_index":327,"title":{},"body":{"injectables/EndpointService.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["prod",{"_index":705,"title":{},"body":{"index.html":{}}}],["production",{"_index":707,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":681,"title":{},"body":{"index.html":{}}}],["properties",{"_index":13,"title":{},"body":{"classes/Account.html":{},"components/AppComponent.html":{},"classes/Bucket.html":{},"injectables/EndpointService.html":{},"classes/PendingTransaction.html":{},"components/QuickAddComponent.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{}}}],["protocol",{"_index":377,"title":{},"body":{"injectables/EndpointService.html":{}}}],["protractor",{"_index":277,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["provide",{"_index":420,"title":{},"body":{"injectables/EndpointService.html":{}}}],["providedin",{"_index":385,"title":{},"body":{"injectables/EndpointService.html":{}}}],["providers",{"_index":246,"title":{},"body":{"modules/AppMaterialModule.html":{},"modules/AppModule.html":{},"overview.html":{}}}],["public",{"_index":495,"title":{},"body":{"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["put(endpoint",{"_index":432,"title":{},"body":{"injectables/EndpointService.html":{}}}],["quick",{"_index":218,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["quickaddcolumns",{"_index":448,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["quickaddcomponent",{"_index":217,"title":{"components/QuickAddComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["quickaddtablesource",{"_index":449,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["re",{"_index":179,"title":{},"body":{"components/AppComponent.html":{}}}],["reactiveformsmodule",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["read",{"_index":332,"title":{},"body":{"injectables/EndpointService.html":{}}}],["read(path",{"_index":365,"title":{},"body":{"injectables/EndpointService.html":{}}}],["readall",{"_index":333,"title":{},"body":{"injectables/EndpointService.html":{}}}],["readall(path",{"_index":370,"title":{},"body":{"injectables/EndpointService.html":{}}}],["readme",{"_index":719,"title":{},"body":{"index.html":{}}}],["receive",{"_index":472,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["receiveedittransaction",{"_index":554,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["receiveedittransaction($event",{"_index":589,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["receivenewtransaction",{"_index":114,"title":{},"body":{"components/AppComponent.html":{}}}],["receivenewtransaction($event",{"_index":132,"title":{},"body":{"components/AppComponent.html":{}}}],["receiveupdatedtransaction",{"_index":115,"title":{},"body":{"components/AppComponent.html":{}}}],["receiveupdatedtransaction($event",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["refactor",{"_index":464,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["reference",{"_index":479,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["relies",{"_index":42,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["reload",{"_index":694,"title":{},"body":{"index.html":{}}}],["reload...might",{"_index":189,"title":{},"body":{"components/AppComponent.html":{}}}],["remove",{"_index":10,"title":{},"body":{"classes/Account.html":{}}}],["reported",{"_index":83,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["represent",{"_index":558,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["request",{"_index":342,"title":{},"body":{"injectables/EndpointService.html":{}}}],["requests",{"_index":347,"title":{},"body":{"injectables/EndpointService.html":{}}}],["require",{"_index":660,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":317,"title":{},"body":{"components/EditRowComponent.html":{}}}],["reset",{"_index":255,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["response",{"_index":364,"title":{},"body":{"injectables/EndpointService.html":{}}}],["rest",{"_index":591,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["result",{"_index":87,"title":{},"body":{"classes/Account.html":{},"components/AppComponent.html":{},"modules/AppMaterialModule.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/Bucket.html":{},"components/EditRowComponent.html":{},"injectables/EndpointService.html":{},"classes/PendingTransaction.html":{},"components/QuickAddComponent.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":89,"title":{},"body":{"classes/Account.html":{},"components/AppComponent.html":{},"modules/AppMaterialModule.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/Bucket.html":{},"components/EditRowComponent.html":{},"injectables/EndpointService.html":{},"classes/PendingTransaction.html":{},"components/QuickAddComponent.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["retrieved",{"_index":153,"title":{},"body":{"components/AppComponent.html":{}}}],["return",{"_index":278,"title":{},"body":{"classes/AppPage.html":{},"injectables/EndpointService.html":{},"components/QuickAddComponent.html":{}}}],["returned",{"_index":396,"title":{},"body":{"injectables/EndpointService.html":{}}}],["returns",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/EditRowComponent.html":{},"injectables/EndpointService.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["reuse",{"_index":563,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["rid",{"_index":200,"title":{},"body":{"components/AppComponent.html":{}}}],["right",{"_index":530,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["root",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/EndpointService.html":{}}}],["root'},{'name",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["row",{"_index":286,"title":{},"body":{"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["row'},{'name",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["row.component",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["row.component.css",{"_index":287,"title":{},"body":{"components/EditRowComponent.html":{}}}],["row.component.html",{"_index":288,"title":{},"body":{"components/EditRowComponent.html":{}}}],["row.component.ts",{"_index":285,"title":{},"body":{"components/EditRowComponent.html":{},"coverage.html":{}}}],["row.component.ts:15",{"_index":294,"title":{},"body":{"components/EditRowComponent.html":{}}}],["row.component.ts:20",{"_index":298,"title":{},"body":{"components/EditRowComponent.html":{}}}],["row.component.ts:25",{"_index":299,"title":{},"body":{"components/EditRowComponent.html":{}}}],["row.component.ts:30",{"_index":303,"title":{},"body":{"components/EditRowComponent.html":{}}}],["row.component.ts:35",{"_index":293,"title":{},"body":{"components/EditRowComponent.html":{}}}],["row.component.ts:39",{"_index":312,"title":{},"body":{"components/EditRowComponent.html":{}}}],["row.expanded",{"_index":634,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["row/edit",{"_index":269,"title":{},"body":{"modules/AppModule.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{},"coverage.html":{}}}],["rowdata",{"_index":605,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["rowdata.details",{"_index":608,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["run",{"_index":687,"title":{},"body":{"index.html":{}}}],["running",{"_index":708,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":384,"title":{},"body":{"injectables/EndpointService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":382,"title":{},"body":{"injectables/EndpointService.html":{}}}],["savings",{"_index":46,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["scaffolding",{"_index":696,"title":{},"body":{"index.html":{}}}],["scheduled",{"_index":70,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"components/EditRowComponent.html":{},"classes/PendingTransaction.html":{},"components/QuickAddComponent.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{}}}],["scheduled/for",{"_index":69,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["searching",{"_index":466,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["select",{"_index":297,"title":{},"body":{"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["selector",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["sends",{"_index":193,"title":{},"body":{"components/AppComponent.html":{}}}],["serve",{"_index":689,"title":{},"body":{"index.html":{}}}],["server",{"_index":686,"title":{},"body":{"index.html":{}}}],["service",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["short",{"_index":63,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["side",{"_index":389,"title":{},"body":{"injectables/EndpointService.html":{}}}],["simplechanges",{"_index":493,"title":{},"body":{"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["single",{"_index":564,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["singletoncolumns",{"_index":600,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["singletontablesource",{"_index":599,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["somehow",{"_index":348,"title":{},"body":{"injectables/EndpointService.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/Account.html":{},"components/AppComponent.html":{},"modules/AppMaterialModule.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/Bucket.html":{},"components/EditRowComponent.html":{},"injectables/EndpointService.html":{},"classes/PendingTransaction.html":{},"components/QuickAddComponent.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{},"index.html":{}}}],["spec\\.ts",{"_index":737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specific",{"_index":367,"title":{},"body":{"injectables/EndpointService.html":{}}}],["spend",{"_index":54,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["src/.../environment.prod.ts",{"_index":733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":226,"title":{},"body":{"modules/AppMaterialModule.html":{}}}],["src/app/app.component.ts",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:16",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:21",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:26",{"_index":151,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:31",{"_index":119,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:41",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:61",{"_index":133,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:78",{"_index":148,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.types.ts",{"_index":6,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{},"coverage.html":{}}}],["src/app/app.types.ts:10",{"_index":26,"title":{},"body":{"classes/Account.html":{}}}],["src/app/app.types.ts:101",{"_index":434,"title":{},"body":{"classes/PendingTransaction.html":{}}}],["src/app/app.types.ts:113",{"_index":534,"title":{},"body":{"classes/Transaction.html":{}}}],["src/app/app.types.ts:118",{"_index":535,"title":{},"body":{"classes/Transaction.html":{}}}],["src/app/app.types.ts:123",{"_index":533,"title":{},"body":{"classes/Transaction.html":{}}}],["src/app/app.types.ts:17",{"_index":37,"title":{},"body":{"classes/Account.html":{}}}],["src/app/app.types.ts:22",{"_index":23,"title":{},"body":{"classes/Account.html":{}}}],["src/app/app.types.ts:27",{"_index":49,"title":{},"body":{"classes/Account.html":{}}}],["src/app/app.types.ts:32",{"_index":30,"title":{},"body":{"classes/Account.html":{}}}],["src/app/app.types.ts:44",{"_index":282,"title":{},"body":{"classes/Bucket.html":{}}}],["src/app/app.types.ts:51",{"_index":283,"title":{},"body":{"classes/Bucket.html":{}}}],["src/app/app.types.ts:61",{"_index":439,"title":{},"body":{"classes/PendingTransaction.html":{}}}],["src/app/app.types.ts:66",{"_index":433,"title":{},"body":{"classes/PendingTransaction.html":{}}}],["src/app/app.types.ts:71",{"_index":435,"title":{},"body":{"classes/PendingTransaction.html":{}}}],["src/app/app.types.ts:76",{"_index":436,"title":{},"body":{"classes/PendingTransaction.html":{}}}],["src/app/app.types.ts:81",{"_index":440,"title":{},"body":{"classes/PendingTransaction.html":{}}}],["src/app/app.types.ts:86",{"_index":437,"title":{},"body":{"classes/PendingTransaction.html":{}}}],["src/app/app.types.ts:91",{"_index":438,"title":{},"body":{"classes/PendingTransaction.html":{}}}],["src/app/app.types.ts:96",{"_index":441,"title":{},"body":{"classes/PendingTransaction.html":{}}}],["src/app/edit",{"_index":284,"title":{},"body":{"components/EditRowComponent.html":{},"coverage.html":{}}}],["src/app/endpoint.service.ts",{"_index":326,"title":{},"body":{"injectables/EndpointService.html":{},"coverage.html":{}}}],["src/app/endpoint.service.ts:107",{"_index":373,"title":{},"body":{"injectables/EndpointService.html":{}}}],["src/app/endpoint.service.ts:17",{"_index":376,"title":{},"body":{"injectables/EndpointService.html":{}}}],["src/app/endpoint.service.ts:22",{"_index":336,"title":{},"body":{"injectables/EndpointService.html":{}}}],["src/app/endpoint.service.ts:30",{"_index":355,"title":{},"body":{"injectables/EndpointService.html":{}}}],["src/app/endpoint.service.ts:53",{"_index":340,"title":{},"body":{"injectables/EndpointService.html":{}}}],["src/app/endpoint.service.ts:76",{"_index":371,"title":{},"body":{"injectables/EndpointService.html":{}}}],["src/app/endpoint.service.ts:90",{"_index":366,"title":{},"body":{"injectables/EndpointService.html":{}}}],["src/app/quick",{"_index":442,"title":{},"body":{"components/QuickAddComponent.html":{},"coverage.html":{}}}],["src/app/transactions/transactions.component.ts",{"_index":546,"title":{},"body":{"components/TransactionsComponent.html":{},"coverage.html":{}}}],["src/app/transactions/transactions.component.ts:131",{"_index":583,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/transactions/transactions.component.ts:133",{"_index":581,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/transactions/transactions.component.ts:152",{"_index":585,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/transactions/transactions.component.ts:160",{"_index":590,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/transactions/transactions.component.ts:25",{"_index":576,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/transactions/transactions.component.ts:30",{"_index":577,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/transactions/transactions.component.ts:35",{"_index":578,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/transactions/transactions.component.ts:40",{"_index":579,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/transactions/transactions.component.ts:47",{"_index":594,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/transactions/transactions.component.ts:52",{"_index":592,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/transactions/transactions.component.ts:63",{"_index":556,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/environments/environment.prod.ts",{"_index":654,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":658,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":659,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":680,"title":{"index.html":{}},"body":{}}],["starting",{"_index":31,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["statements",{"_index":640,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":631,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["stored",{"_index":702,"title":{},"body":{"index.html":{}}}],["string",{"_index":20,"title":{},"body":{"classes/Account.html":{},"components/AppComponent.html":{},"classes/Bucket.html":{},"components/EditRowComponent.html":{},"injectables/EndpointService.html":{},"classes/PendingTransaction.html":{},"components/QuickAddComponent.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{}}}],["styles",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["styleurls",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["submitted",{"_index":59,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["subscribe",{"_index":136,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribe(newtransaction",{"_index":174,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribe(updatedtransaction",{"_index":178,"title":{},"body":{"components/AppComponent.html":{}}}],["suffer",{"_index":571,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["support",{"_index":723,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":724,"title":{},"body":{"modules.html":{}}}],["table",{"_index":311,"title":{},"body":{"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":661,"title":{},"body":{"coverage.html":{}}}],["td",{"_index":531,"title":{},"body":{"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["template",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["templateurl",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["test",{"_index":629,"title":{},"body":{"components/TransactionsComponent.html":{},"index.html":{}}}],["tests",{"_index":710,"title":{},"body":{"index.html":{}}}],["text",{"_index":528,"title":{},"body":{"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["this.accounts",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["this.accounts.foreach(item",{"_index":522,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["this.baseurl",{"_index":416,"title":{},"body":{"injectables/EndpointService.html":{}}}],["this.buckets",{"_index":170,"title":{},"body":{"components/AppComponent.html":{}}}],["this.buckets.foreach(item",{"_index":524,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["this.editrowcomponent.editform",{"_index":496,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["this.endpointservice",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["this.endpointservice.readall('/accounts/').subscribe(accounts",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["this.endpointservice.readall('/buckets/').subscribe(buckets",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["this.endpointservice.readall('/transactions/').subscribe(transactions",{"_index":164,"title":{},"body":{"components/AppComponent.html":{}}}],["this.getaccount(formvalues.fromaccount",{"_index":515,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["this.getaccount(formvalues.toaccount",{"_index":517,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["this.getbucket(formvalues.bucket",{"_index":519,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["this.http",{"_index":428,"title":{},"body":{"injectables/EndpointService.html":{}}}],["this.http.get(endpoint",{"_index":431,"title":{},"body":{"injectables/EndpointService.html":{}}}],["this.port",{"_index":417,"title":{},"body":{"injectables/EndpointService.html":{}}}],["this.transactionaddedevent.emit(freshtransaction",{"_index":520,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["this.transactions",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"components/TransactionsComponent.html":{}}}],["this.transactions.concat(newtransaction",{"_index":175,"title":{},"body":{"components/AppComponent.html":{}}}],["this.transactions.length",{"_index":204,"title":{},"body":{"components/AppComponent.html":{}}}],["this.transactiontablesource.data",{"_index":602,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["this.transactionupdatedevent.emit($event",{"_index":616,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["this.transactionupdatedevent.emit(updatedrow",{"_index":609,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["tho",{"_index":502,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["throwerror",{"_index":383,"title":{},"body":{"injectables/EndpointService.html":{}}}],["throwerror('something",{"_index":408,"title":{},"body":{"injectables/EndpointService.html":{}}}],["thru",{"_index":474,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["title",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["toaccount",{"_index":76,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"components/QuickAddComponent.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{}}}],["todo",{"_index":38,"title":{},"body":{"classes/Account.html":{},"components/AppComponent.html":{},"classes/Bucket.html":{},"components/EditRowComponent.html":{},"injectables/EndpointService.html":{},"classes/PendingTransaction.html":{},"components/QuickAddComponent.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{}}}],["token",{"_index":427,"title":{},"body":{"injectables/EndpointService.html":{}}}],["total",{"_index":308,"title":{},"body":{"components/EditRowComponent.html":{}}}],["tracking",{"_index":53,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["transaction",{"_index":8,"title":{"classes/Transaction.html":{}},"body":{"classes/Account.html":{},"components/AppComponent.html":{},"classes/Bucket.html":{},"components/EditRowComponent.html":{},"classes/PendingTransaction.html":{},"components/QuickAddComponent.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{},"coverage.html":{}}}],["transactionaddedevent",{"_index":454,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["transactioneditevent",{"_index":473,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["transactions",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["transactions.component.css",{"_index":548,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["transactions.component.html",{"_index":549,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["transactions/transactions.component",{"_index":268,"title":{},"body":{"modules/AppModule.html":{}}}],["transactionscolumns",{"_index":550,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["transactionscomponent",{"_index":220,"title":{"components/TransactionsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["transactionsformgroup",{"_index":601,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["transactiontablesource",{"_index":551,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["transactionupdatedevent",{"_index":555,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["transcation",{"_index":71,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["treat",{"_index":138,"title":{},"body":{"components/AppComponent.html":{}}}],["tree",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["triggers",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["true",{"_index":736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["try",{"_index":412,"title":{},"body":{"injectables/EndpointService.html":{}}}],["tslint:disable",{"_index":595,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["type",{"_index":18,"title":{},"body":{"classes/Account.html":{},"components/AppComponent.html":{},"classes/Bucket.html":{},"components/EditRowComponent.html":{},"injectables/EndpointService.html":{},"classes/PendingTransaction.html":{},"components/QuickAddComponent.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unfortunately",{"_index":56,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["unique",{"_index":27,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["unit",{"_index":709,"title":{},"body":{"index.html":{}}}],["unnecessary",{"_index":190,"title":{},"body":{"components/AppComponent.html":{}}}],["unsuccessful",{"_index":397,"title":{},"body":{"injectables/EndpointService.html":{}}}],["until",{"_index":186,"title":{},"body":{"components/AppComponent.html":{}}}],["update",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"injectables/EndpointService.html":{}}}],["update('/transactions",{"_index":176,"title":{},"body":{"components/AppComponent.html":{}}}],["update(path",{"_index":372,"title":{},"body":{"injectables/EndpointService.html":{}}}],["updated",{"_index":82,"title":{},"body":{"classes/Account.html":{},"components/AppComponent.html":{},"classes/Bucket.html":{},"injectables/EndpointService.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{}}}],["updated_at",{"_index":84,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["updatedrow",{"_index":606,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["updatedrow.details",{"_index":607,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["usd",{"_index":321,"title":{},"body":{"components/EditRowComponent.html":{},"components/TransactionsComponent.html":{}}}],["use",{"_index":698,"title":{},"body":{"index.html":{}}}],["user",{"_index":296,"title":{},"body":{"components/EditRowComponent.html":{},"injectables/EndpointService.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["valid",{"_index":319,"title":{},"body":{"components/EditRowComponent.html":{}}}],["validators",{"_index":315,"title":{},"body":{"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["validators.pattern",{"_index":485,"title":{},"body":{"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["value",{"_index":64,"title":{},"body":{"classes/Account.html":{},"components/AppComponent.html":{},"classes/Bucket.html":{},"injectables/EndpointService.html":{},"classes/PendingTransaction.html":{},"components/QuickAddComponent.html":{},"classes/Transaction.html":{},"components/TransactionsComponent.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":483,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["var",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["variable",{"_index":655,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":731,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":683,"title":{},"body":{"index.html":{}}}],["via",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["viable",{"_index":568,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["viewchild",{"_index":494,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["viewchild(editrowcomponent",{"_index":477,"title":{},"body":{"components/QuickAddComponent.html":{}}}],["void",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"components/EditRowComponent.html":{},"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["wait",{"_index":306,"title":{},"body":{"components/EditRowComponent.html":{}}}],["went",{"_index":402,"title":{},"body":{"injectables/EndpointService.html":{}}}],["whichever",{"_index":565,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["whoops",{"_index":44,"title":{},"body":{"classes/Account.html":{},"classes/Bucket.html":{},"classes/PendingTransaction.html":{},"classes/Transaction.html":{}}}],["width",{"_index":526,"title":{},"body":{"components/QuickAddComponent.html":{},"components/TransactionsComponent.html":{}}}],["wip",{"_index":149,"title":{},"body":{"components/AppComponent.html":{}}}],["work",{"_index":360,"title":{},"body":{"injectables/EndpointService.html":{}}}],["worst",{"_index":197,"title":{},"body":{"components/AppComponent.html":{}}}],["wrong",{"_index":403,"title":{},"body":{"injectables/EndpointService.html":{}}}],["zone.js",{"_index":677,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Account.html":{"url":"classes/Account.html","title":"class - Account","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Account\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.types.ts\n        \n\n            \n                Description\n            \n            \n                An Account which a Transaction may add or remove funds from.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                details\n                            \n                            \n                                id\n                            \n                            \n                                initialBalance\n                            \n                            \n                                name\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            details\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.types.ts:22\n                            \n                        \n\n                \n                    \n                        Details, notes, or description of account.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.types.ts:10\n                            \n                        \n\n                \n                    \n                        Unique account ID.\nGenerated by CMS.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialBalance\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.types.ts:32\n                            \n                        \n\n                \n                    \n                        Account starting balance which Transaction credits and debits are applied against.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.types.ts:17\n                            \n                        \n\n                \n                    \n                        Name of account.\n[TODO] Should not need to be unique, but current implementation relies on unique assumption. Whoops.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"checking\" | \"savings\" | \"credit\" | \"loan\" | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.types.ts:27\n                            \n                        \n\n                \n                    \n                        Account type.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Account {\n  /**\n   * Unique account ID.\n   *\n   * Generated by CMS.\n   */\n  id: number;\n\n  /**\n   * Name of account.\n   *\n   * [TODO] Should not need to be unique, but current implementation relies on unique assumption. Whoops.\n   */\n  name: string;\n\n  /**\n   * Details, notes, or description of account.\n   */\n  details: string | null;\n\n  /**\n   * Account type.\n   */\n  type: 'checking' | 'savings' | 'credit' | 'loan' | null;\n\n  /**\n   * Account starting balance which Transaction credits and debits are applied against.\n   */\n  initialBalance: number;\n}\n\n/**\n * Concept for categorizing and tracking spend.\n */\nexport class Bucket {\n  /**\n   * Unique bucket ID.\n   *\n   * Generated by CMS.\n   */\n  id: number;\n\n  /**\n   * Name of bucket.\n   *\n   * [TODO] Should not need to be unique; unfortunately, current implemntation relies on unique assumption. Dang.\n   */\n  name: string;\n}\n\n/**\n * A transaction which has not yet been submitted to API and assigned an ID.\n */\nexport class PendingTransaction {\n  /**\n   * Short name for the transaction.\n   */\n  name: string;\n\n  /**\n   * Value of the transaction.\n   */\n  amount: number;\n\n  /**\n   * Details, notes, or description of the transaction.\n   */\n  details: string;\n\n  /**\n   * Date the transaction is due.\n   */\n  due: string;\n\n  /**\n   * Date the transaction is/was scheduled/for.\n   */\n  scheduled: string;\n\n  /**\n   * Date the transcation is/was effective.\n   */\n  effective: string;\n\n  /**\n   * Account from which the transaction value is deducted.\n   */\n  fromAccount: any;\n\n  /**\n   * Account to which the transaction value is added.\n   */\n  toAccount: any;\n\n  /**\n   * Tracking bucket that the transaction should belong to.\n   */\n  bucket: any;\n}\n\n/**\n * A transaction which already exists in the CMS and has an ID.\n */\nexport class Transaction extends PendingTransaction {\n  /**\n   * Unique transaction ID.\n   *\n   * Generated by CMS.\n   */\n  id: number;\n\n  /**\n   * Date last updated as reported by CMS.\n   */\n  updated_at?: string;\n\n  /**\n   * Date created as reported by CMS.\n   */\n  created_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accounts\n                            \n                            \n                                buckets\n                            \n                            \n                                title\n                            \n                            \n                                transactions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                receiveNewTransaction\n                            \n                            \n                                receiveUpdatedTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(endpointService: EndpointService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        endpointService\n                                                  \n                                                        \n                                                                    EndpointService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injected service for communicating with API endpoints.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:41\n                            \n                        \n\n\n                \n                    \n                            On init, fetch transactions, accounts, and buckets data from API.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveNewTransaction\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveNewTransaction($event: Transaction)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:61\n                            \n                        \n\n\n                \n                    \n                            Pass new transaction to endpointService and subscribe to result.\nImportant to treat this.transactions as immutable so that update triggers change detection correctly.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        $event\n                                                        \n                                                                    Transaction\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                New transaction event.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveUpdatedTransaction\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveUpdatedTransaction($event: Transaction)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:78\n                            \n                        \n\n\n                \n                    \n                            [WIP]\n[TODO]\nPass edited transaction to endpointService and subscribe to result.\nImportant to treat this.transactions as immutable so that update triggers change detection correctly.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        $event\n                                                        \n                                                                    Transaction\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Updated transaction event.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accounts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Account[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:26\n                            \n                        \n\n                \n                    \n                        App accounts data, array of Accounts retrieved from API via injected EndpointService.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buckets\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Bucket[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:31\n                            \n                        \n\n                \n                    \n                        App buckets data, array of Buckets retrieved from API via injected EndpointService.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'balance'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:16\n                            \n                        \n\n                \n                    \n                        App title.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transactions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Transaction[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:21\n                            \n                        \n\n                \n                    \n                        App transaction data, array of Transactions retrieved from API via injected EndpointService.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { Account, Bucket, PendingTransaction, Transaction } from './app.types';\n\nimport { EndpointService } from './endpoint.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  /**\n   * App title.\n   */\n  title = 'balance';\n\n  /**\n   * App transaction data, array of Transactions retrieved from API via injected `EndpointService`.\n   */\n  transactions: Transaction[];\n\n  /**\n   * App accounts data, array of Accounts retrieved from API via injected `EndpointService`.\n   */\n  accounts: Account[];\n\n  /**\n   * App buckets data, array of Buckets retrieved from API via injected `EndpointService`.\n   */\n  buckets: Bucket[];\n\n  /**\n   * @param endpointService Injected service for communicating with API endpoints.\n   */\n  constructor(private endpointService: EndpointService) {}\n\n  /**\n   * On init, fetch transactions, accounts, and buckets data from API.\n   */\n  ngOnInit() {\n    this.endpointService.readAll('/transactions/').subscribe(transactions => {\n      this.transactions = [].concat(transactions);\n    });\n\n    this.endpointService.readAll('/accounts/').subscribe(accounts => {\n      this.accounts = [].concat(accounts);\n    });\n\n    this.endpointService.readAll('/buckets/').subscribe(buckets => {\n      this.buckets = [].concat(buckets);\n    });\n  }\n\n  /**\n   * Pass new transaction to endpointService and subscribe to result.\n   *\n   * Important to treat `this.transactions` as immutable so that update triggers change detection correctly.\n   * @param $event New transaction event.\n   */\n  receiveNewTransaction($event: Transaction) {\n    this.endpointService\n      .create('/transactions/', $event)\n      .subscribe(newTransaction => {\n        this.transactions = this.transactions.concat(newTransaction);\n      });\n  }\n\n  /**\n   * [WIP]\n   * [TODO]\n   *\n   * Pass edited transaction to endpointService and subscribe to result.\n   *\n   * Important to treat `this.transactions` as immutable so that update triggers change detection correctly.\n   * @param $event Updated transaction event.\n   */\n  receiveUpdatedTransaction($event: Transaction) {\n    this.endpointService\n      .update('/transactions/', $event.id, $event)\n      .subscribe(updatedTransaction => {\n        /*\n         * Re-insert updated transaction at the correct location in\n         * the transactions array...tho this only preserves the ordering\n         * until the next client reload...might be unnecessary if client\n         * just defaults to order transactions by `id`, since cms sends\n         * in order of last modified...also an O(n) operation in the\n         * worst case so if it can go, get rid of it\n         */\n        let priorIndex;\n        let i;\n        const limit = this.transactions.length;\n        for (i = 0; i \n    \n\n    \n        \n  {{ title }}\n  attach_money -->\n  \n  \n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ title }}  attach_money -->    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditRowComponent', 'selector': 'app-edit-row'},{'name': 'QuickAddComponent', 'selector': 'app-quick-add'},{'name': 'TransactionsComponent', 'selector': 'app-transactions'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppMaterialModule.html":{"url":"modules/AppMaterialModule.html","title":"module - AppMaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    AppMaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-material/app-material.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {\n  MatInputModule,\n  MatDatepickerModule,\n  MatNativeDateModule,\n  MatIconModule,\n  MatDividerModule,\n  MatTableModule,\n  MatButtonModule,\n} from '@angular/material';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatIconModule,\n    MatDividerModule,\n    MatTableModule,\n    MatButtonModule,\n  ],\n  exports: [\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatIconModule,\n    MatDividerModule,\n    MatTableModule,\n    MatButtonModule,\n  ],\n  providers: [MatNativeDateModule],\n})\nexport class AppMaterialModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nEditRowComponent\n\nEditRowComponent\n\nAppModule -->\n\nEditRowComponent->AppModule\n\n\n\n\n\nQuickAddComponent\n\nQuickAddComponent\n\nAppModule -->\n\nQuickAddComponent->AppModule\n\n\n\n\n\nTransactionsComponent\n\nTransactionsComponent\n\nAppModule -->\n\nTransactionsComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppMaterialModule\n\nAppMaterialModule\n\nAppModule -->\n\nAppMaterialModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            EditRowComponent\n                        \n                        \n                            QuickAddComponent\n                        \n                        \n                            TransactionsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppMaterialModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppMaterialModule } from './app-material/app-material.module';\n\nimport { AppComponent } from './app.component';\nimport { QuickAddComponent } from './quick-add/quick-add.component';\nimport { TransactionsComponent } from './transactions/transactions.component';\nimport { EditRowComponent } from './edit-row/edit-row.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    QuickAddComponent,\n    TransactionsComponent,\n    EditRowComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    AppMaterialModule,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getParagraphText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getParagraphText\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetParagraphText()\n                    \n                \n\n\n                        \n                            \n                                    Defined in e2e/src/app.po.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigateTo\n                            \n                            \n                        \n                    \n                \n                \n                    \nnavigateTo()\n                    \n                \n\n\n                        \n                            \n                                    Defined in e2e/src/app.po.ts:4\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo() {\n    return browser.get('/');\n  }\n\n  getParagraphText() {\n    return element(by.css('app-root h1')).getText();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Bucket.html":{"url":"classes/Bucket.html","title":"class - Bucket","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Bucket\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.types.ts\n        \n\n            \n                Description\n            \n            \n                Concept for categorizing and tracking spend.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.types.ts:44\n                            \n                        \n\n                \n                    \n                        Unique bucket ID.\nGenerated by CMS.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.types.ts:51\n                            \n                        \n\n                \n                    \n                        Name of bucket.\n[TODO] Should not need to be unique; unfortunately, current implemntation relies on unique assumption. Dang.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Account {\n  /**\n   * Unique account ID.\n   *\n   * Generated by CMS.\n   */\n  id: number;\n\n  /**\n   * Name of account.\n   *\n   * [TODO] Should not need to be unique, but current implementation relies on unique assumption. Whoops.\n   */\n  name: string;\n\n  /**\n   * Details, notes, or description of account.\n   */\n  details: string | null;\n\n  /**\n   * Account type.\n   */\n  type: 'checking' | 'savings' | 'credit' | 'loan' | null;\n\n  /**\n   * Account starting balance which Transaction credits and debits are applied against.\n   */\n  initialBalance: number;\n}\n\n/**\n * Concept for categorizing and tracking spend.\n */\nexport class Bucket {\n  /**\n   * Unique bucket ID.\n   *\n   * Generated by CMS.\n   */\n  id: number;\n\n  /**\n   * Name of bucket.\n   *\n   * [TODO] Should not need to be unique; unfortunately, current implemntation relies on unique assumption. Dang.\n   */\n  name: string;\n}\n\n/**\n * A transaction which has not yet been submitted to API and assigned an ID.\n */\nexport class PendingTransaction {\n  /**\n   * Short name for the transaction.\n   */\n  name: string;\n\n  /**\n   * Value of the transaction.\n   */\n  amount: number;\n\n  /**\n   * Details, notes, or description of the transaction.\n   */\n  details: string;\n\n  /**\n   * Date the transaction is due.\n   */\n  due: string;\n\n  /**\n   * Date the transaction is/was scheduled/for.\n   */\n  scheduled: string;\n\n  /**\n   * Date the transcation is/was effective.\n   */\n  effective: string;\n\n  /**\n   * Account from which the transaction value is deducted.\n   */\n  fromAccount: any;\n\n  /**\n   * Account to which the transaction value is added.\n   */\n  toAccount: any;\n\n  /**\n   * Tracking bucket that the transaction should belong to.\n   */\n  bucket: any;\n}\n\n/**\n * A transaction which already exists in the CMS and has an ID.\n */\nexport class Transaction extends PendingTransaction {\n  /**\n   * Unique transaction ID.\n   *\n   * Generated by CMS.\n   */\n  id: number;\n\n  /**\n   * Date last updated as reported by CMS.\n   */\n  updated_at?: string;\n\n  /**\n   * Date created as reported by CMS.\n   */\n  created_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditRowComponent.html":{"url":"components/EditRowComponent.html","title":"component - EditRowComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditRowComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/edit-row/edit-row.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-row\n            \n\n            \n                styleUrls\n                ./edit-row.component.css\n            \n\n\n\n            \n                templateUrl\n                ./edit-row.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                accounts\n                            \n                            \n                                buckets\n                            \n                            \n                                editColumns\n                            \n                            \n                                editForm\n                            \n                            \n                                editTableSource\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/edit-row/edit-row.component.ts:35\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        accounts\n                    \n                \n                \n                    \n                        Type :     Account[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/edit-row/edit-row.component.ts:15\n                            \n                        \n                \n                    \n                        List of Accounts which the user may select from.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        buckets\n                    \n                \n                \n                    \n                        Type :     Bucket[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/edit-row/edit-row.component.ts:20\n                            \n                        \n                \n                    \n                        List of Buckets which the user may select from.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        editColumns\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/edit-row/edit-row.component.ts:25\n                            \n                        \n                \n                    \n                        List of columns for display.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        editForm\n                    \n                \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/edit-row/edit-row.component.ts:30\n                            \n                        \n                \n                    \n                        [TODO] Form group...yo wait should this be an input at all? This might be a total change to the current architecture.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        editTableSource\n                    \n                \n                \n                    \n                        Type :     MatTableDataSource\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/edit-row/edit-row.component.ts:35\n                            \n                        \n                \n                    \n                        [TODO] Transactions data, table data source.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/edit-row/edit-row.component.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, Input, OnInit, EventEmitter } from '@angular/core';\nimport { FormGroup, FormControl, Validators, NgForm } from '@angular/forms';\nimport { MatTableDataSource } from '@angular/material';\nimport { Account, Bucket, PendingTransaction, Transaction } from '../app.types';\n\n@Component({\n  selector: 'app-edit-row',\n  templateUrl: './edit-row.component.html',\n  styleUrls: ['./edit-row.component.css'],\n})\nexport class EditRowComponent implements OnInit {\n  /**\n   * List of Accounts which the user may select from.\n   */\n  @Input() accounts: Account[];\n\n  /**\n   * List of Buckets which the user may select from.\n   */\n  @Input() buckets: Bucket[];\n\n  /**\n   * List of columns for display.\n   */\n  @Input() editColumns: string[];\n\n  /**\n   * [TODO] Form group...yo wait should this be an input at all? This might be a total change to the current architecture.\n   */\n  @Input() editForm: FormGroup;\n\n  /**\n   * [TODO] Transactions data, table data source.\n   */\n  @Input() editTableSource: MatTableDataSource;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n  \n    \n       name  -->\n      \n        \n          name\n          \n          Required*\n        \n      \n    \n\n    \n       amount  -->\n      \n        \n          amount\n          \n          $&nbsp;\n          Must be valid decimal, USD*\n        \n      \n    \n\n    \n       details  -->\n      \n        \n          details\n          \n        \n      \n    \n\n    \n       due  -->\n      \n        \n          due\n          \n          \n          \n          Must be MM/DD/YYYY*\n        \n      \n    \n\n    \n       scheduled  -->\n      \n        \n          scheduled\n          \n          \n          \n          Must be MM/DD/YYYY*\n        \n      \n    \n\n    \n       effective  -->\n      \n        \n          effective\n          \n          \n          \n          Must be MM/DD/YYYY*\n        \n      \n    \n\n    \n       from  -->\n      \n        \n          from\n          \n            \n            {{\n              option.name\n            }}\n          \n        \n      \n    \n\n    \n       to  -->\n      \n        \n          to\n          \n            \n            {{\n              option.name\n            }}\n          \n        \n      \n    \n\n    \n       bucket  -->\n      \n        \n          bucket\n          \n            \n            {{\n              option.name\n            }}\n          \n        \n      \n    \n\n     -->\n    \n  \n\n\n    \n\n    \n                \n                    ./edit-row.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             name  -->                        name                    Required*                             amount  -->                        amount                    $           Must be valid decimal, USD*                             details  -->                        details                                       due  -->                        due                                        Must be MM/DD/YYYY*                             scheduled  -->                        scheduled                                        Must be MM/DD/YYYY*                             effective  -->                        effective                                        Must be MM/DD/YYYY*                             from  -->                        from                                  {{              option.name            }}                                       to  -->                        to                                  {{              option.name            }}                                       bucket  -->                        bucket                                  {{              option.name            }}                                 -->      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditRowComponent', 'selector': 'app-edit-row'},{'name': 'QuickAddComponent', 'selector': 'app-quick-add'},{'name': 'TransactionsComponent', 'selector': 'app-transactions'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditRowComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EndpointService.html":{"url":"injectables/EndpointService.html","title":"injectable - EndpointService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EndpointService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/endpoint.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseURL\n                            \n                            \n                                    Private\n                                port\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                read\n                            \n                            \n                                readAll\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/endpoint.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreate(path: string, newNoun: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/endpoint.service.ts:53\n                            \n                        \n\n\n                \n                    \n                            Generic API request to create a given object.\n[TODO] Will eventually need to auth these requests somehow.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        path\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Path from the base\n\n                                                        \n                                                \n                                                \n                                                        newNoun\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                New object to create.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    Observable result of http POST.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleError(error: HttpErrorResponse)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/endpoint.service.ts:30\n                            \n                        \n\n\n                \n                    \n                            [TODO] Lifted from angular docs, needs work for our context.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    HttpErrorResponse\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Error to handle from http response.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            read\n                            \n                            \n                        \n                    \n                \n                \n                    \nread(path: string, id: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/endpoint.service.ts:90\n                            \n                        \n\n\n                \n                    \n                            Request a specific instance of a given type.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        path\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                API type path.\n\n                                                        \n                                                \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                ID of item to fetch.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    Observable result of http GET.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            readAll\n                            \n                            \n                        \n                    \n                \n                \n                    \nreadAll(path: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/endpoint.service.ts:76\n                            \n                        \n\n\n                \n                    \n                            Request all of a given type.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        path\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                API type path.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    Observable result of http GET.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate(path: string, id: number, newNoun: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/endpoint.service.ts:107\n                            \n                        \n\n\n                \n                    \n                            Update an existing instance of a given type.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        path\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                API type path.\n\n                                                        \n                                                \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                ID of item to update.\n\n                                                        \n                                                \n                                                \n                                                        newNoun\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Updated item.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    Observable result of http POST.\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/endpoint.service.ts:17\n                            \n                        \n\n                \n                    \n                        Protocol and host for API requests.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            port\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '1337'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/endpoint.service.ts:22\n                            \n                        \n\n                \n                    \n                        Port for API requests.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpClient,\n  HttpHeaders,\n  HttpErrorResponse,\n} from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { throwError, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EndpointService {\n  /**\n   * Protocol and host for API requests.\n   */\n  private baseURL = 'http://localhost';\n\n  /**\n   * Port for API requests.\n   */\n  private port = '1337';\n\n  constructor(private http: HttpClient) {}\n\n  /**\n   * [TODO] Lifted from angular docs, needs work for our context.\n   * @param error Error to handle from http response.\n   */\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` + `body was: ${error.error}`\n      );\n    }\n    // return an observable with a user-facing error message\n    return throwError('Something bad happened; please try again later.');\n  }\n\n  /**\n   * Generic API request to create a given object.\n   *\n   * [TODO] Will eventually need to auth these requests somehow.\n   * @param path Path from the base\n   * @param newNoun New object to create.\n   * @returns Observable result of http POST.\n   */\n  create(path: string, newNoun: any) {\n    const endpoint =\n      this.baseURL +\n      (this.port == null || this.port === '' ? '' : `:${this.port}`) +\n      path;\n    const httpOptions = {\n      // TODO: headers to eventually provide authentication for all GET's and POST's\n      // headers: new HttpHeaders({\n      //   'Content-Type':  'application/json',\n      //   'Authorization': 'my-auth-token',\n      // })\n    };\n\n    return this.http\n      .post(endpoint, newNoun, httpOptions)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Request all of a given type.\n   * @param path API type path.\n   * @returns Observable result of http GET.\n   */\n  readAll(path: string) {\n    const endpoint =\n      this.baseURL +\n      (this.port == null || this.port === '' ? '' : `:${this.port}`) +\n      path;\n    return this.http.get(endpoint);\n  }\n\n  /**\n   * Request a specific instance of a given type.\n   * @param path API type path.\n   * @param id ID of item to fetch.\n   * @returns Observable result of http GET.\n   */\n  read(path: string, id: number) {\n    const endpoint =\n      this.baseURL +\n      (this.port == null || this.port === '' ? '' : `:${this.port}`) +\n      path +\n      id +\n      '/';\n    return this.http.get(endpoint);\n  }\n\n  /**\n   * Update an existing instance of a given type.\n   * @param path API type path.\n   * @param id ID of item to update.\n   * @param newNoun Updated item.\n   * @returns Observable result of http POST.\n   */\n  update(path: string, id: number, newNoun: any) {\n    const endpoint =\n      this.baseURL +\n      (this.port == null || this.port === '' ? '' : `:${this.port}`) +\n      path +\n      id +\n      '/';\n    const httpOptions = {};\n\n    return this.http\n      .put(endpoint, newNoun, httpOptions)\n      .pipe(catchError(this.handleError));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PendingTransaction.html":{"url":"classes/PendingTransaction.html","title":"class - PendingTransaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PendingTransaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.types.ts\n        \n\n            \n                Description\n            \n            \n                A transaction which has not yet been submitted to API and assigned an ID.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                bucket\n                            \n                            \n                                details\n                            \n                            \n                                due\n                            \n                            \n                                effective\n                            \n                            \n                                fromAccount\n                            \n                            \n                                name\n                            \n                            \n                                scheduled\n                            \n                            \n                                toAccount\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            amount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.types.ts:66\n                            \n                        \n\n                \n                    \n                        Value of the transaction.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bucket\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.types.ts:101\n                            \n                        \n\n                \n                    \n                        Tracking bucket that the transaction should belong to.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            details\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.types.ts:71\n                            \n                        \n\n                \n                    \n                        Details, notes, or description of the transaction.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            due\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.types.ts:76\n                            \n                        \n\n                \n                    \n                        Date the transaction is due.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effective\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.types.ts:86\n                            \n                        \n\n                \n                    \n                        Date the transcation is/was effective.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fromAccount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.types.ts:91\n                            \n                        \n\n                \n                    \n                        Account from which the transaction value is deducted.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.types.ts:61\n                            \n                        \n\n                \n                    \n                        Short name for the transaction.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scheduled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.types.ts:81\n                            \n                        \n\n                \n                    \n                        Date the transaction is/was scheduled/for.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toAccount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.types.ts:96\n                            \n                        \n\n                \n                    \n                        Account to which the transaction value is added.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Account {\n  /**\n   * Unique account ID.\n   *\n   * Generated by CMS.\n   */\n  id: number;\n\n  /**\n   * Name of account.\n   *\n   * [TODO] Should not need to be unique, but current implementation relies on unique assumption. Whoops.\n   */\n  name: string;\n\n  /**\n   * Details, notes, or description of account.\n   */\n  details: string | null;\n\n  /**\n   * Account type.\n   */\n  type: 'checking' | 'savings' | 'credit' | 'loan' | null;\n\n  /**\n   * Account starting balance which Transaction credits and debits are applied against.\n   */\n  initialBalance: number;\n}\n\n/**\n * Concept for categorizing and tracking spend.\n */\nexport class Bucket {\n  /**\n   * Unique bucket ID.\n   *\n   * Generated by CMS.\n   */\n  id: number;\n\n  /**\n   * Name of bucket.\n   *\n   * [TODO] Should not need to be unique; unfortunately, current implemntation relies on unique assumption. Dang.\n   */\n  name: string;\n}\n\n/**\n * A transaction which has not yet been submitted to API and assigned an ID.\n */\nexport class PendingTransaction {\n  /**\n   * Short name for the transaction.\n   */\n  name: string;\n\n  /**\n   * Value of the transaction.\n   */\n  amount: number;\n\n  /**\n   * Details, notes, or description of the transaction.\n   */\n  details: string;\n\n  /**\n   * Date the transaction is due.\n   */\n  due: string;\n\n  /**\n   * Date the transaction is/was scheduled/for.\n   */\n  scheduled: string;\n\n  /**\n   * Date the transcation is/was effective.\n   */\n  effective: string;\n\n  /**\n   * Account from which the transaction value is deducted.\n   */\n  fromAccount: any;\n\n  /**\n   * Account to which the transaction value is added.\n   */\n  toAccount: any;\n\n  /**\n   * Tracking bucket that the transaction should belong to.\n   */\n  bucket: any;\n}\n\n/**\n * A transaction which already exists in the CMS and has an ID.\n */\nexport class Transaction extends PendingTransaction {\n  /**\n   * Unique transaction ID.\n   *\n   * Generated by CMS.\n   */\n  id: number;\n\n  /**\n   * Date last updated as reported by CMS.\n   */\n  updated_at?: string;\n\n  /**\n   * Date created as reported by CMS.\n   */\n  created_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuickAddComponent.html":{"url":"components/QuickAddComponent.html","title":"component - QuickAddComponent","body":"\n                   \n\n\n\n\n\n  Components\n  QuickAddComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/quick-add/quick-add.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-quick-add\n            \n\n            \n                styleUrls\n                ./quick-add.component.css\n            \n\n\n\n            \n                templateUrl\n                ./quick-add.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                editRowComponent\n                            \n                            \n                                    Private\n                                initialAddValues\n                            \n                            \n                                newTransaction\n                            \n                            \n                                quickAddColumns\n                            \n                            \n                                quickAddTableSource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getAccount\n                            \n                            \n                                    Private\n                                getBucket\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onAdd\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                accounts\n                            \n                            \n                                buckets\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                transactionAddedEvent\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/quick-add/quick-add.component.ts:114\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        accounts\n                    \n                \n                \n                    \n                        Type :     Account[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/quick-add/quick-add.component.ts:26\n                            \n                        \n                \n                    \n                        List of Accounts which the user may select from.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        buckets\n                    \n                \n                \n                    \n                        Type :     Bucket[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/quick-add/quick-add.component.ts:31\n                            \n                        \n                \n                    \n                        List of Buckets which the user may select from.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        transactionAddedEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/quick-add/quick-add.component.ts:36\n                            \n                        \n                \n                    \n                        Emit event with details of a new transaction.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getAccount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAccount(name: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/quick-add/quick-add.component.ts:161\n                            \n                        \n\n\n                \n                    \n                            Map account name back to Account object.\n[TODO] Refactor to avoid searching names list.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Account name.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    Account with the given name.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getBucket\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBucket(name: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/quick-add/quick-add.component.ts:179\n                            \n                        \n\n\n                \n                    \n                            Map bucket name back to Bucket object.\n[TODO] Refactor to avoid searching names list.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Bucket name.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    Bucket with the given name.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/quick-add/quick-add.component.ts:118\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onAdd\n                            \n                            \n                        \n                    \n                \n                \n                    \nonAdd()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/quick-add/quick-add.component.ts:123\n                            \n                        \n\n\n                \n                    \n                            [TODO] Receive new transaction from transactionEditEvent, pass thru to parent.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            editRowComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EditRowComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(EditRowComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/quick-add/quick-add.component.ts:43\n                            \n                        \n\n                \n                    \n                        [TODO] Reference to form in app-edit-row child.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initialAddValues\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      name: null,\n      amount: null,\n      details: null,\n      due: null,\n      scheduled: null,\n      effective: null,\n      fromAccount: null,\n      toAccount: null,\n      bucket: null,\n    },\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/quick-add/quick-add.component.ts:81\n                            \n                        \n\n                \n                    \n                        [TODO] Initial values for new transaction table.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newTransaction\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new FormGroup({\n    name: new FormControl(null, {\n      validators: [],\n    }),\n    amount: new FormControl(null, {\n      validators: [Validators.pattern(/^-?\\d+(\\.?\\d{1,2})?$/)],\n    }),\n    details: new FormControl(null, {\n      validators: [],\n    }),\n    due: new FormControl(null, {\n      validators: [],\n    }),\n    scheduled: new FormControl(null, {\n      validators: [],\n    }),\n    effective: new FormControl(null, {\n      validators: [],\n    }),\n    fromAccount: new FormControl(null, {\n      validators: [],\n    }),\n    toAccount: new FormControl(null, {\n      validators: [],\n    }),\n    bucket: new FormControl(null, {\n      validators: [],\n    }),\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/quick-add/quick-add.component.ts:48\n                            \n                        \n\n                \n                    \n                        [TODO] Form controls...\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            quickAddColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    'name',\n    'amount',\n    'details',\n    'due',\n    'scheduled',\n    'effective',\n    'fromAccount',\n    'toAccount',\n    'bucket',\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/quick-add/quick-add.component.ts:104\n                            \n                        \n\n                \n                    \n                        Columns to display in new transaction table.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            quickAddTableSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatTableDataSource\n\n                        \n                    \n                    \n                        \n                            Default value : new MatTableDataSource(this.initialAddValues)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/quick-add/quick-add.component.ts:97\n                            \n                        \n\n                \n                    \n                        Source for new transaction table.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  OnInit,\n  Output,\n  EventEmitter,\n  SimpleChanges,\n  ViewChild,\n} from '@angular/core';\nimport { FormGroup, FormControl, Validators, NgForm } from '@angular/forms';\nimport { MatTableDataSource } from '@angular/material';\n\nimport { Account, Bucket, PendingTransaction, Transaction } from '../app.types';\n\nimport { EditRowComponent } from '../edit-row/edit-row.component';\n\n@Component({\n  selector: 'app-quick-add',\n  templateUrl: './quick-add.component.html',\n  styleUrls: ['./quick-add.component.css'],\n})\nexport class QuickAddComponent implements OnInit {\n  /**\n   * List of Accounts which the user may select from.\n   */\n  @Input() accounts: Account[];\n\n  /**\n   * List of Buckets which the user may select from.\n   */\n  @Input() buckets: Bucket[];\n\n  /**\n   * Emit event with details of a new transaction.\n   */\n  @Output() public transactionAddedEvent: EventEmitter = new EventEmitter();\n\n  /**\n   * [TODO] Reference to form in `app-edit-row` child.\n   */\n  @ViewChild(EditRowComponent) private editRowComponent: EditRowComponent;\n\n  /**\n   * [TODO] Form controls...\n   */\n  newTransaction = new FormGroup({\n    name: new FormControl(null, {\n      validators: [],\n    }),\n    amount: new FormControl(null, {\n      validators: [Validators.pattern(/^-?\\d+(\\.?\\d{1,2})?$/)],\n    }),\n    details: new FormControl(null, {\n      validators: [],\n    }),\n    due: new FormControl(null, {\n      validators: [],\n    }),\n    scheduled: new FormControl(null, {\n      validators: [],\n    }),\n    effective: new FormControl(null, {\n      validators: [],\n    }),\n    fromAccount: new FormControl(null, {\n      validators: [],\n    }),\n    toAccount: new FormControl(null, {\n      validators: [],\n    }),\n    bucket: new FormControl(null, {\n      validators: [],\n    }),\n  });\n\n  /**\n   * [TODO] Initial values for new transaction table.\n   */\n  private initialAddValues = [\n    {\n      name: null,\n      amount: null,\n      details: null,\n      due: null,\n      scheduled: null,\n      effective: null,\n      fromAccount: null,\n      toAccount: null,\n      bucket: null,\n    },\n  ];\n  /**\n   * Source for new transaction table.\n   */\n  quickAddTableSource: MatTableDataSource = new MatTableDataSource(this.initialAddValues);\n\n  /**\n   * Columns to display in new transaction table.\n   */\n  quickAddColumns: string[] = [\n    'name',\n    'amount',\n    'details',\n    'due',\n    'scheduled',\n    'effective',\n    'fromAccount',\n    'toAccount',\n    'bucket',\n  ];\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  /**\n   * [TODO] Receive new transaction from `transactionEditEvent`, pass thru to parent.\n   */\n  onAdd() {\n    const formGroup = this.editRowComponent.editForm;\n    const formValues = formGroup.value;\n\n    // TODO: lol this form is never invalid tho\n    if (!formGroup.invalid) {\n      const freshTransaction = {\n        name: formValues.name,\n        amount: formValues.amount,\n        details: formValues.details,\n        due: formValues.due ? formValues.due.toLocaleDateString() : null,\n        scheduled: formValues.scheduled\n          ? formValues.scheduled.toLocaleDateString()\n          : null,\n        effective: formValues.effective\n          ? formValues.effective.toLocaleDateString()\n          : null,\n        fromAccount: formValues.fromAccount\n          ? this.getAccount(formValues.fromAccount)\n          : null,\n        toAccount: formValues.toAccount\n          ? this.getAccount(formValues.toAccount)\n          : null,\n        bucket: formValues.bucket ? this.getBucket(formValues.bucket) : null,\n      };\n\n      this.transactionAddedEvent.emit(freshTransaction);\n      formGroup.reset();\n    }\n  }\n\n  /**\n   * Map account name back to Account object.\n   *\n   * [TODO] Refactor to avoid searching names list.\n   * @param name Account name.\n   * @returns Account with the given name.\n   */\n  private getAccount(name: string) {\n    let account = null;\n    this.accounts.forEach(item => {\n      if (item.name === name) {\n        account = item;\n        return;\n      }\n    });\n    return account;\n  }\n\n  /**\n   * Map bucket name back to Bucket object.\n   *\n   * [TODO] Refactor to avoid searching names list.\n   * @param name Bucket name.\n   * @returns Bucket with the given name.\n   */\n  private getBucket(name: string) {\n    let bucket = null;\n    this.buckets.forEach(item => {\n      if (item.name === name) {\n        bucket = item;\n        return;\n      }\n    });\n    return bucket;\n  }\n}\n\n    \n\n    \n        \n  quick add\n  \n    \n    add\n  \n\n\n    \n\n    \n                \n                    ./quick-add.component.css\n                \n                .quick-add {\n  display: block;\n  width: 100%;\n}\n\n.quick-add .quick-add-form {\n  display: block;\n  width: 100%;\n  text-align: right;\n}\n\n.quick-add table {\n  width: 100%;\n}\n\n.quick-add table td {\n  text-align: left;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  quick add          add  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditRowComponent', 'selector': 'app-edit-row'},{'name': 'QuickAddComponent', 'selector': 'app-quick-add'},{'name': 'TransactionsComponent', 'selector': 'app-transactions'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QuickAddComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Transaction.html":{"url":"classes/Transaction.html","title":"class - Transaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Transaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.types.ts\n        \n\n            \n                Description\n            \n            \n                A transaction which already exists in the CMS and has an ID.\n\n            \n\n            \n                Extends\n            \n            \n                    PendingTransaction\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                created_at\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                updated_at\n                            \n                            \n                                amount\n                            \n                            \n                                bucket\n                            \n                            \n                                details\n                            \n                            \n                                due\n                            \n                            \n                                effective\n                            \n                            \n                                fromAccount\n                            \n                            \n                                name\n                            \n                            \n                                scheduled\n                            \n                            \n                                toAccount\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.types.ts:123\n                            \n                        \n\n                \n                    \n                        Date created as reported by CMS.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.types.ts:113\n                            \n                        \n\n                \n                    \n                        Unique transaction ID.\nGenerated by CMS.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updated_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.types.ts:118\n                            \n                        \n\n                \n                    \n                        Date last updated as reported by CMS.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            amount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                            \n                                \n                                    Inherited from     PendingTransaction\n\n                                \n                            \n                        \n                            \n                                    Defined in PendingTransaction:66\n                            \n                        \n\n                \n                    \n                        Value of the transaction.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bucket\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                            \n                                \n                                    Inherited from     PendingTransaction\n\n                                \n                            \n                        \n                            \n                                    Defined in PendingTransaction:101\n                            \n                        \n\n                \n                    \n                        Tracking bucket that the transaction should belong to.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            details\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     PendingTransaction\n\n                                \n                            \n                        \n                            \n                                    Defined in PendingTransaction:71\n                            \n                        \n\n                \n                    \n                        Details, notes, or description of the transaction.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            due\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     PendingTransaction\n\n                                \n                            \n                        \n                            \n                                    Defined in PendingTransaction:76\n                            \n                        \n\n                \n                    \n                        Date the transaction is due.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effective\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     PendingTransaction\n\n                                \n                            \n                        \n                            \n                                    Defined in PendingTransaction:86\n                            \n                        \n\n                \n                    \n                        Date the transcation is/was effective.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fromAccount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                            \n                                \n                                    Inherited from     PendingTransaction\n\n                                \n                            \n                        \n                            \n                                    Defined in PendingTransaction:91\n                            \n                        \n\n                \n                    \n                        Account from which the transaction value is deducted.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     PendingTransaction\n\n                                \n                            \n                        \n                            \n                                    Defined in PendingTransaction:61\n                            \n                        \n\n                \n                    \n                        Short name for the transaction.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scheduled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     PendingTransaction\n\n                                \n                            \n                        \n                            \n                                    Defined in PendingTransaction:81\n                            \n                        \n\n                \n                    \n                        Date the transaction is/was scheduled/for.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toAccount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                            \n                                \n                                    Inherited from     PendingTransaction\n\n                                \n                            \n                        \n                            \n                                    Defined in PendingTransaction:96\n                            \n                        \n\n                \n                    \n                        Account to which the transaction value is added.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Account {\n  /**\n   * Unique account ID.\n   *\n   * Generated by CMS.\n   */\n  id: number;\n\n  /**\n   * Name of account.\n   *\n   * [TODO] Should not need to be unique, but current implementation relies on unique assumption. Whoops.\n   */\n  name: string;\n\n  /**\n   * Details, notes, or description of account.\n   */\n  details: string | null;\n\n  /**\n   * Account type.\n   */\n  type: 'checking' | 'savings' | 'credit' | 'loan' | null;\n\n  /**\n   * Account starting balance which Transaction credits and debits are applied against.\n   */\n  initialBalance: number;\n}\n\n/**\n * Concept for categorizing and tracking spend.\n */\nexport class Bucket {\n  /**\n   * Unique bucket ID.\n   *\n   * Generated by CMS.\n   */\n  id: number;\n\n  /**\n   * Name of bucket.\n   *\n   * [TODO] Should not need to be unique; unfortunately, current implemntation relies on unique assumption. Dang.\n   */\n  name: string;\n}\n\n/**\n * A transaction which has not yet been submitted to API and assigned an ID.\n */\nexport class PendingTransaction {\n  /**\n   * Short name for the transaction.\n   */\n  name: string;\n\n  /**\n   * Value of the transaction.\n   */\n  amount: number;\n\n  /**\n   * Details, notes, or description of the transaction.\n   */\n  details: string;\n\n  /**\n   * Date the transaction is due.\n   */\n  due: string;\n\n  /**\n   * Date the transaction is/was scheduled/for.\n   */\n  scheduled: string;\n\n  /**\n   * Date the transcation is/was effective.\n   */\n  effective: string;\n\n  /**\n   * Account from which the transaction value is deducted.\n   */\n  fromAccount: any;\n\n  /**\n   * Account to which the transaction value is added.\n   */\n  toAccount: any;\n\n  /**\n   * Tracking bucket that the transaction should belong to.\n   */\n  bucket: any;\n}\n\n/**\n * A transaction which already exists in the CMS and has an ID.\n */\nexport class Transaction extends PendingTransaction {\n  /**\n   * Unique transaction ID.\n   *\n   * Generated by CMS.\n   */\n  id: number;\n\n  /**\n   * Date last updated as reported by CMS.\n   */\n  updated_at?: string;\n\n  /**\n   * Date created as reported by CMS.\n   */\n  created_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TransactionsComponent.html":{"url":"components/TransactionsComponent.html","title":"component - TransactionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TransactionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/transactions/transactions.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnChanges\n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-transactions\n            \n\n            \n                styleUrls\n                ./transactions.component.css\n            \n\n\n\n            \n                templateUrl\n                ./transactions.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                transactionsColumns\n                            \n                            \n                                transactionTableSource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCellClick\n                            \n                            \n                                receiveEditTransaction\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                accounts\n                            \n                            \n                                buckets\n                            \n                            \n                                transactions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                transactionUpdatedEvent\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/transactions/transactions.component.ts:63\n                            \n                        \n\n                \n                    \n                            [TODO] the below represent an approach to edit-in-place which figured maybe we could reuse a single instance of EditRowComponent for whichever transaction row is \"active\" for editing...still a viable idea, performance would suffer pretty fast in an implementation with an EditRowComponent for every row, active or not...need to flesh out.\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        accounts\n                    \n                \n                \n                    \n                        Type :     Account[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/transactions/transactions.component.ts:25\n                            \n                        \n                \n                    \n                        List of Accounts which the user may select from.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        buckets\n                    \n                \n                \n                    \n                        Type :     Bucket[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/transactions/transactions.component.ts:30\n                            \n                        \n                \n                    \n                        List of Buckets which the user may select from.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        transactions\n                    \n                \n                \n                    \n                        Type :     Transaction[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/transactions/transactions.component.ts:35\n                            \n                        \n                \n                    \n                        List of Transactions.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        transactionUpdatedEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/transactions/transactions.component.ts:40\n                            \n                        \n                \n                    \n                        [TODO] Emit event with details of updated transaction.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/transactions/transactions.component.ts:133\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/transactions/transactions.component.ts:131\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onCellClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonCellClick(cellData: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/transactions/transactions.component.ts:152\n                            \n                        \n\n\n                \n                    \n                            [TODO] implement click on row.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cellData\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receiveEditTransaction\n                            \n                            \n                        \n                    \n                \n                \n                    \nreceiveEditTransaction($event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/transactions/transactions.component.ts:160\n                            \n                        \n\n\n                \n                    \n                            [TODO] implement the rest of this\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        $event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Event for an edit to a transaction.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transactionsColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    // 'id',\n    'name',\n    'amount',\n    'details',\n    'due',\n    'scheduled',\n    'effective',\n    'fromAccount',\n    'toAccount',\n    'bucket',\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/transactions/transactions.component.ts:52\n                            \n                        \n\n                \n                    \n                        Transactions table columns.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transactionTableSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new MatTableDataSource(this.transactions)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/transactions/transactions.component.ts:47\n                            \n                        \n\n                \n                    \n                        Data source for transactions table.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  OnChanges,\n  Output,\n  Input,\n  SimpleChanges,\n  OnInit,\n} from '@angular/core';\nimport { MatTableDataSource } from '@angular/material';\nimport { FormGroup, FormControl, Validators, NgForm } from '@angular/forms';\n\nimport { EditRowComponent } from '../edit-row/edit-row.component';\nimport { Account, Bucket, Transaction, PendingTransaction } from '../app.types';\n\n@Component({\n  selector: 'app-transactions',\n  templateUrl: './transactions.component.html',\n  styleUrls: ['./transactions.component.css'],\n})\nexport class TransactionsComponent implements OnChanges, OnInit {\n  /**\n   * List of Accounts which the user may select from.\n   */\n  @Input() accounts: Account[];\n\n  /**\n   * List of Buckets which the user may select from.\n   */\n  @Input() buckets: Bucket[];\n\n  /**\n   * List of Transactions.\n   */\n  @Input() transactions: Transaction[];\n\n  /**\n   * [TODO] Emit event with details of updated transaction.\n   */\n  @Output() public transactionUpdatedEvent: EventEmitter = new EventEmitter();\n\n  /**\n   * Data source for transactions table.\n   */\n  transactionTableSource = new MatTableDataSource(this.transactions);\n\n  /**\n   * Transactions table columns.\n   */\n  transactionsColumns: string[] = [\n    // 'id',\n    'name',\n    'amount',\n    'details',\n    'due',\n    'scheduled',\n    'effective',\n    'fromAccount',\n    'toAccount',\n    'bucket',\n  ];\n\n  // tslint:disable max-line-length\n  /**\n   * [TODO] the below represent an approach to edit-in-place which figured maybe we could reuse a single instance of EditRowComponent for whichever transaction row is \"active\" for editing...still a viable idea, performance would suffer pretty fast in an implementation with an EditRowComponent for every row, active or not...need to flesh out.\n   * */\n  // private initialAddValues = [\n  //   {\n  //     name: null,\n  //     amount: null,\n  //     details: null,\n  //     due: null,\n  //     scheduled: null,\n  //     effective: null,\n  //     fromAccount: null,\n  //     toAccount: null,\n  //     bucket: null,\n  //   },\n  // ];\n\n  // singletonTableSource: MatTableDataSource = new MatTableDataSource(this.initialAddValues);\n\n  // singletonColumns: string[] = [\n  //   'name',\n  //   'amount',\n  //   'details',\n  //   'due',\n  //   'scheduled',\n  //   'effective',\n  //   'fromAccount',\n  //   'toAccount',\n  //   'bucket',\n  // ];\n\n  // transactionsFormGroup = new FormGroup({\n  //   name: new FormControl(null, {\n  //     validators: [],\n  //   }),\n  //   amount: new FormControl(null, {\n  //     validators: [Validators.pattern(/^-?\\d+(\\.?\\d{1,2})?$/)],\n  //   }),\n  //   details: new FormControl(null, {\n  //     validators: [],\n  //   }),\n  //   due: new FormControl(null, {\n  //     validators: [],\n  //   }),\n  //   scheduled: new FormControl(null, {\n  //     validators: [],\n  //   }),\n  //   effective: new FormControl(null, {\n  //     validators: [],\n  //   }),\n  //   fromAccount: new FormControl(null, {\n  //     validators: [],\n  //   }),\n  //   toAccount: new FormControl(null, {\n  //     validators: [],\n  //   }),\n  //   bucket: new FormControl(null, {\n  //     validators: [],\n  //   }),\n  // });\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.transactionTableSource.data = this.transactions;\n  }\n\n  /**\n   * [TODO] implement click on row.\n   */\n  // onRowClick(rowData: any) {\n  //   console.log('row click:', rowData);\n  //   const updatedRow = rowData;\n  //   updatedRow.details = rowData.details + '...updated!';\n\n  //   this.transactionUpdatedEvent.emit(updatedRow);\n  // }\n\n  /**\n   * [TODO] on cell click, enable that data for editing?\n   * @param cellData Table data from clicked cell.\n   */\n  onCellClick(cellData: any) {\n    console.log('cell click:', cellData);\n  }\n\n  /**\n   * [TODO] implement the rest of this\n   * @param $event Event for an edit to a transaction.\n   */\n  receiveEditTransaction($event) {\n    console.log('editing:', $event);\n    this.transactionUpdatedEvent.emit($event);\n  }\n}\n\n    \n\n    \n        \n  transactions\n  \n    \n\n    \n    \n      id\n      {{ element.id }}\n    \n\n    \n    \n      name\n      {{ element.name }}\n    \n\n    \n    \n      amount\n      \n        {{ element.amount | currency: 'USD' }}\n      \n    \n\n    \n    \n      details\n      {{ element.details }}\n    \n\n    \n    \n      due\n      \n        {{ element.due | date: 'MM/dd' }}\n      \n    \n\n    \n    \n      scheduled\n      \n        {{ element.scheduled | date: 'MM/dd' }}\n      \n    \n\n    \n    \n      effective\n      \n        {{ element.effective | date: 'MM/dd' }}\n      \n    \n\n    \n    \n      fromAccount\n      \n        {{ element.fromAccount?.name }}\n      \n    \n\n    \n    \n      toAccount\n      {{ element.toAccount?.name }}\n    \n\n    \n    \n      bucket\n      \n        {{ element.bucket?.name }}\n      \n    \n\n    \n    \n       test header  -->\n      \n        \n         -->\n      \n    \n\n    \n    \n    \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./transactions.component.css\n                \n                .transactions table {\n  width: 100%;\n}\n\n.transactions table td {\n  text-align: left;\n}\n\n.static-row {\n  height: 0;\n  min-height: 0;\n}\n\n.static-row.expanded-row {\n  height: 100px;\n  min-height: 100px;\n}\n\n.transactions .transaction-cell {\n  padding: 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  transactions                    id      {{ element.id }}                  name      {{ element.name }}                  amount              {{ element.amount | currency: \\'USD\\' }}                        details      {{ element.details }}                  due              {{ element.due | date: \\'MM/dd\\' }}                        scheduled              {{ element.scheduled | date: \\'MM/dd\\' }}                        effective              {{ element.effective | date: \\'MM/dd\\' }}                        fromAccount              {{ element.fromAccount?.name }}                        toAccount      {{ element.toAccount?.name }}                  bucket              {{ element.bucket?.name }}                         test header  -->                       -->                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditRowComponent', 'selector': 'app-edit-row'},{'name': 'QuickAddComponent', 'selector': 'app-quick-add'},{'name': 'TransactionsComponent', 'selector': 'app-transactions'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TransactionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                src/app/app.types.ts\n            \n            class\n            Account\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/app.types.ts\n            \n            class\n            Bucket\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/app.types.ts\n            \n            class\n            PendingTransaction\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/app.types.ts\n            \n            class\n            Transaction\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/edit-row/edit-row.component.ts\n            \n            component\n            EditRowComponent\n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                src/app/endpoint.service.ts\n            \n            injectable\n            EndpointService\n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                src/app/quick-add/quick-add.component.ts\n            \n            component\n            QuickAddComponent\n            \n                78 %\n                (11/14)\n            \n        \n        \n            \n                \n                src/app/transactions/transactions.component.ts\n            \n            component\n            TransactionsComponent\n            \n                75 %\n                (9/12)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 7.2.4\n        \n            @angular/cdk : 7.3.1\n        \n            @angular/common : 7.2.4\n        \n            @angular/compiler : 7.2.4\n        \n            @angular/core : 7.2.4\n        \n            @angular/forms : 7.2.4\n        \n            @angular/http : 7.2.4\n        \n            @angular/material : 7.3.1\n        \n            @angular/platform-browser : 7.2.4\n        \n            @angular/platform-browser-dynamic : 7.2.4\n        \n            @angular/router : 7.2.4\n        \n            core-js : ^2.6.2\n        \n            hammerjs : ^2.0.8\n        \n            rxjs : ~6.4.0\n        \n            zone.js : ~0.8.29\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nBalance\nThis project was generated with Angular CLI version 6.2.3.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppMaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nEditRowComponent\n\nEditRowComponent\n\nAppModule -->\n\nEditRowComponent->AppModule\n\n\n\n\n\nQuickAddComponent\n\nQuickAddComponent\n\nAppModule -->\n\nQuickAddComponent->AppModule\n\n\n\n\n\nTransactionsComponent\n\nTransactionsComponent\n\nAppModule -->\n\nTransactionsComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppMaterialModule\n\nAppMaterialModule\n\nAppModule -->\n\nAppMaterialModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
